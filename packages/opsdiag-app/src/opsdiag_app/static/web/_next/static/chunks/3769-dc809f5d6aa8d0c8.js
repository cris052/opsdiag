(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3769],{4217:(E,T,e)=>{var R=e(36713),A=/^\s+/;E.exports=function(E){return E?E.slice(0,R(E)+1).replace(A,""):E}},4365:(E,T,e)=>{"use strict";e.d(T,{A:()=>R});let R=!1},7985:(E,T,e)=>{E.exports="object"==typeof e.g&&e.g&&e.g.Object===Object&&e.g},11261:(E,T,e)=>{"use strict";e.d(T,{a:()=>n,A:()=>P});var R=e(27061),A=e(79630),t=e(40419),S=e(86608),O=e(29300),I=e.n(O),N=e(12115),r=e(43717);let n=N.forwardRef(function(E,T){var e,O,n,s=E.inputElement,o=E.children,C=E.prefixCls,L=E.prefix,a=E.suffix,_=E.addonBefore,i=E.addonAfter,P=E.className,D=E.style,l=E.disabled,c=E.readOnly,U=E.focused,M=E.triggerFocus,u=E.allowClear,p=E.value,G=E.handleReset,d=E.hidden,f=E.classes,B=E.classNames,H=E.dataAttrs,h=E.styles,F=E.components,Y=E.onClear,m=null!=o?o:s,y=(null==F?void 0:F.affixWrapper)||"span",V=(null==F?void 0:F.groupWrapper)||"span",b=(null==F?void 0:F.wrapper)||"span",W=(null==F?void 0:F.groupAddon)||"span",g=(0,N.useRef)(null),X=(0,r.OL)(E),v=(0,N.cloneElement)(m,{value:p,className:I()(null==(e=m.props)?void 0:e.className,!X&&(null==B?void 0:B.variant))||null}),x=(0,N.useRef)(null);if(N.useImperativeHandle(T,function(){return{nativeElement:x.current||g.current}}),X){var K=null;if(u){var w=!l&&!c&&p,J="".concat(C,"-clear-icon"),$="object"===(0,S.A)(u)&&null!=u&&u.clearIcon?u.clearIcon:"✖";K=N.createElement("button",{type:"button",tabIndex:-1,onClick:function(E){null==G||G(E),null==Y||Y()},onMouseDown:function(E){return E.preventDefault()},className:I()(J,(0,t.A)((0,t.A)({},"".concat(J,"-hidden"),!w),"".concat(J,"-has-suffix"),!!a))},$)}var Q="".concat(C,"-affix-wrapper"),k=I()(Q,(0,t.A)((0,t.A)((0,t.A)((0,t.A)((0,t.A)({},"".concat(C,"-disabled"),l),"".concat(Q,"-disabled"),l),"".concat(Q,"-focused"),U),"".concat(Q,"-readonly"),c),"".concat(Q,"-input-with-clear-btn"),a&&u&&p),null==f?void 0:f.affixWrapper,null==B?void 0:B.affixWrapper,null==B?void 0:B.variant),Z=(a||u)&&N.createElement("span",{className:I()("".concat(C,"-suffix"),null==B?void 0:B.suffix),style:null==h?void 0:h.suffix},K,a);v=N.createElement(y,(0,A.A)({className:k,style:null==h?void 0:h.affixWrapper,onClick:function(E){var T;null!=(T=g.current)&&T.contains(E.target)&&(null==M||M())}},null==H?void 0:H.affixWrapper,{ref:g}),L&&N.createElement("span",{className:I()("".concat(C,"-prefix"),null==B?void 0:B.prefix),style:null==h?void 0:h.prefix},L),v,Z)}if((0,r.bk)(E)){var j="".concat(C,"-group"),q="".concat(j,"-addon"),z="".concat(j,"-wrapper"),EE=I()("".concat(C,"-wrapper"),j,null==f?void 0:f.wrapper,null==B?void 0:B.wrapper),ET=I()(z,(0,t.A)({},"".concat(z,"-disabled"),l),null==f?void 0:f.group,null==B?void 0:B.groupWrapper);v=N.createElement(V,{className:ET,ref:x},N.createElement(b,{className:EE},_&&N.createElement(W,{className:q},_),v,i&&N.createElement(W,{className:q},i)))}return N.cloneElement(v,{className:I()(null==(O=v.props)?void 0:O.className,P)||null,style:(0,R.A)((0,R.A)({},null==(n=v.props)?void 0:n.style),D),hidden:d})});var s=e(85757),o=e(21858),C=e(20235),L=e(48804),a=e(17980),_=e(52032),i=["autoComplete","onChange","onFocus","onBlur","onPressEnter","onKeyDown","onKeyUp","prefixCls","disabled","htmlSize","className","maxLength","suffix","showCount","count","type","classes","classNames","styles","onCompositionStart","onCompositionEnd"];let P=(0,N.forwardRef)(function(E,T){var e,S=E.autoComplete,O=E.onChange,P=E.onFocus,D=E.onBlur,l=E.onPressEnter,c=E.onKeyDown,U=E.onKeyUp,M=E.prefixCls,u=void 0===M?"rc-input":M,p=E.disabled,G=E.htmlSize,d=E.className,f=E.maxLength,B=E.suffix,H=E.showCount,h=E.count,F=E.type,Y=E.classes,m=E.classNames,y=E.styles,V=E.onCompositionStart,b=E.onCompositionEnd,W=(0,C.A)(E,i),g=(0,N.useState)(!1),X=(0,o.A)(g,2),v=X[0],x=X[1],K=(0,N.useRef)(!1),w=(0,N.useRef)(!1),J=(0,N.useRef)(null),$=(0,N.useRef)(null),Q=function(E){J.current&&(0,r.F4)(J.current,E)},k=(0,L.A)(E.defaultValue,{value:E.value}),Z=(0,o.A)(k,2),j=Z[0],q=Z[1],z=null==j?"":String(j),EE=(0,N.useState)(null),ET=(0,o.A)(EE,2),Ee=ET[0],ER=ET[1],EA=(0,_.A)(h,H),Et=EA.max||f,ES=EA.strategy(z),EO=!!Et&&ES>Et;(0,N.useImperativeHandle)(T,function(){var E;return{focus:Q,blur:function(){var E;null==(E=J.current)||E.blur()},setSelectionRange:function(E,T,e){var R;null==(R=J.current)||R.setSelectionRange(E,T,e)},select:function(){var E;null==(E=J.current)||E.select()},input:J.current,nativeElement:(null==(E=$.current)?void 0:E.nativeElement)||J.current}}),(0,N.useEffect)(function(){w.current&&(w.current=!1),x(function(E){return(!E||!p)&&E})},[p]);var EI=function(E,T,e){var R,A,t=T;if(!K.current&&EA.exceedFormatter&&EA.max&&EA.strategy(T)>EA.max)t=EA.exceedFormatter(T,{max:EA.max}),T!==t&&ER([(null==(R=J.current)?void 0:R.selectionStart)||0,(null==(A=J.current)?void 0:A.selectionEnd)||0]);else if("compositionEnd"===e.source)return;q(t),J.current&&(0,r.gS)(J.current,E,O,t)};(0,N.useEffect)(function(){if(Ee){var E;null==(E=J.current)||E.setSelectionRange.apply(E,(0,s.A)(Ee))}},[Ee]);var EN=EO&&"".concat(u,"-out-of-range");return N.createElement(n,(0,A.A)({},W,{prefixCls:u,className:I()(d,EN),handleReset:function(E){q(""),Q(),J.current&&(0,r.gS)(J.current,E,O)},value:z,focused:v,triggerFocus:Q,suffix:function(){var E=Number(Et)>0;if(B||EA.show){var T=EA.showFormatter?EA.showFormatter({value:z,count:ES,maxLength:Et}):"".concat(ES).concat(E?" / ".concat(Et):"");return N.createElement(N.Fragment,null,EA.show&&N.createElement("span",{className:I()("".concat(u,"-show-count-suffix"),(0,t.A)({},"".concat(u,"-show-count-has-suffix"),!!B),null==m?void 0:m.count),style:(0,R.A)({},null==y?void 0:y.count)},T),B)}return null}(),disabled:p,classes:Y,classNames:m,styles:y,ref:$}),(e=(0,a.A)(E,["prefixCls","onPressEnter","addonBefore","addonAfter","prefix","suffix","allowClear","defaultValue","showCount","count","classes","htmlSize","styles","classNames","onClear"]),N.createElement("input",(0,A.A)({autoComplete:S},e,{onChange:function(E){EI(E,E.target.value,{source:"change"})},onFocus:function(E){x(!0),null==P||P(E)},onBlur:function(E){w.current&&(w.current=!1),x(!1),null==D||D(E)},onKeyDown:function(E){l&&"Enter"===E.key&&!w.current&&(w.current=!0,l(E)),null==c||c(E)},onKeyUp:function(E){"Enter"===E.key&&(w.current=!1),null==U||U(E)},className:I()(u,(0,t.A)({},"".concat(u,"-disabled"),p),null==m?void 0:m.input),style:null==y?void 0:y.input,ref:J,size:G,type:void 0===F?"text":F,onCompositionStart:function(E){K.current=!0,null==V||V(E)},onCompositionEnd:function(E){K.current=!1,EI(E,E.currentTarget.value,{source:"compositionEnd"}),null==b||b(E)}}))))})},19086:(E,T,e)=>{"use strict";e.d(T,{C:()=>A,b:()=>t});var R=e(61388);function A(E){return(0,R.oX)(E,{inputAffixPadding:E.paddingXXS})}let t=E=>{let{controlHeight:T,fontSize:e,lineHeight:R,lineWidth:A,controlHeightSM:t,controlHeightLG:S,fontSizeLG:O,lineHeightLG:I,paddingSM:N,controlPaddingHorizontalSM:r,controlPaddingHorizontal:n,colorFillAlter:s,colorPrimaryHover:o,colorPrimary:C,controlOutlineWidth:L,controlOutline:a,colorErrorOutline:_,colorWarningOutline:i,colorBgContainer:P,inputFontSize:D,inputFontSizeLG:l,inputFontSizeSM:c}=E,U=D||e,M=c||U,u=l||O;return{paddingBlock:Math.max(Math.round((T-U*R)/2*10)/10-A,0),paddingBlockSM:Math.max(Math.round((t-M*R)/2*10)/10-A,0),paddingBlockLG:Math.max(Math.ceil((S-u*I)/2*10)/10-A,0),paddingInline:N-A,paddingInlineSM:r-A,paddingInlineLG:n-A,addonBg:s,activeBorderColor:C,hoverBorderColor:o,activeShadow:"0 0 0 ".concat(L,"px ").concat(a),errorActiveShadow:"0 0 0 ".concat(L,"px ").concat(_),warningActiveShadow:"0 0 0 ".concat(L,"px ").concat(i),hoverBg:P,activeBg:P,inputFontSize:U,inputFontSizeLG:u,inputFontSizeSM:M}}},20570:(E,T,e)=>{var R=e(24376),A=Object.prototype,t=A.hasOwnProperty,S=A.toString,O=R?R.toStringTag:void 0;E.exports=function(E){var T=t.call(E,O),e=E[O];try{E[O]=void 0;var R=!0}catch(E){}var A=S.call(E);return R&&(T?E[O]=e:delete E[O]),A}},23464:(E,T,e)=>{"use strict";let R;e.d(T,{A:()=>TO});var A,t,S,O={};function I(E,T){return function(){return E.apply(T,arguments)}}e.r(O),e.d(O,{hasBrowserEnv:()=>Eo,hasStandardBrowserEnv:()=>EL,hasStandardBrowserWebWorkerEnv:()=>Ea,navigator:()=>EC,origin:()=>E_});var N=e(49509);let{toString:r}=Object.prototype,{getPrototypeOf:n}=Object,{iterator:s,toStringTag:o}=Symbol,C=(E=>T=>{let e=r.call(T);return E[e]||(E[e]=e.slice(8,-1).toLowerCase())})(Object.create(null)),L=E=>(E=E.toLowerCase(),T=>C(T)===E),a=E=>T=>typeof T===E,{isArray:_}=Array,i=a("undefined");function P(E){return null!==E&&!i(E)&&null!==E.constructor&&!i(E.constructor)&&c(E.constructor.isBuffer)&&E.constructor.isBuffer(E)}let D=L("ArrayBuffer"),l=a("string"),c=a("function"),U=a("number"),M=E=>null!==E&&"object"==typeof E,u=E=>{if("object"!==C(E))return!1;let T=n(E);return(null===T||T===Object.prototype||null===Object.getPrototypeOf(T))&&!(o in E)&&!(s in E)},p=L("Date"),G=L("File"),d=L("Blob"),f=L("FileList"),B=L("URLSearchParams"),[H,h,F,Y]=["ReadableStream","Request","Response","Headers"].map(L);function m(E,T,{allOwnKeys:e=!1}={}){let R,A;if(null!=E)if("object"!=typeof E&&(E=[E]),_(E))for(R=0,A=E.length;R<A;R++)T.call(null,E[R],R,E);else{let A;if(P(E))return;let t=e?Object.getOwnPropertyNames(E):Object.keys(E),S=t.length;for(R=0;R<S;R++)A=t[R],T.call(null,E[A],A,E)}}function y(E,T){let e;if(P(E))return null;T=T.toLowerCase();let R=Object.keys(E),A=R.length;for(;A-- >0;)if(T===(e=R[A]).toLowerCase())return e;return null}let V="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:global,b=E=>!i(E)&&E!==V,W=(E=>T=>E&&T instanceof E)("undefined"!=typeof Uint8Array&&n(Uint8Array)),g=L("HTMLFormElement"),X=(({hasOwnProperty:E})=>(T,e)=>E.call(T,e))(Object.prototype),v=L("RegExp"),x=(E,T)=>{let e=Object.getOwnPropertyDescriptors(E),R={};m(e,(e,A)=>{let t;!1!==(t=T(e,A,E))&&(R[A]=t||e)}),Object.defineProperties(E,R)},K=L("AsyncFunction"),w=(A="function"==typeof setImmediate,t=c(V.postMessage),A?setImmediate:t?((E,T)=>(V.addEventListener("message",({source:e,data:R})=>{e===V&&R===E&&T.length&&T.shift()()},!1),e=>{T.push(e),V.postMessage(E,"*")}))(`axios@${Math.random()}`,[]):E=>setTimeout(E)),J="undefined"!=typeof queueMicrotask?queueMicrotask.bind(V):void 0!==N&&N.nextTick||w,$={isArray:_,isArrayBuffer:D,isBuffer:P,isFormData:E=>{let T;return E&&("function"==typeof FormData&&E instanceof FormData||c(E.append)&&("formdata"===(T=C(E))||"object"===T&&c(E.toString)&&"[object FormData]"===E.toString()))},isArrayBufferView:function(E){return"undefined"!=typeof ArrayBuffer&&ArrayBuffer.isView?ArrayBuffer.isView(E):E&&E.buffer&&D(E.buffer)},isString:l,isNumber:U,isBoolean:E=>!0===E||!1===E,isObject:M,isPlainObject:u,isEmptyObject:E=>{if(!M(E)||P(E))return!1;try{return 0===Object.keys(E).length&&Object.getPrototypeOf(E)===Object.prototype}catch(E){return!1}},isReadableStream:H,isRequest:h,isResponse:F,isHeaders:Y,isUndefined:i,isDate:p,isFile:G,isBlob:d,isRegExp:v,isFunction:c,isStream:E=>M(E)&&c(E.pipe),isURLSearchParams:B,isTypedArray:W,isFileList:f,forEach:m,merge:function E(){let{caseless:T}=b(this)&&this||{},e={},R=(R,A)=>{let t=T&&y(e,A)||A;u(e[t])&&u(R)?e[t]=E(e[t],R):u(R)?e[t]=E({},R):_(R)?e[t]=R.slice():e[t]=R};for(let E=0,T=arguments.length;E<T;E++)arguments[E]&&m(arguments[E],R);return e},extend:(E,T,e,{allOwnKeys:R}={})=>(m(T,(T,R)=>{e&&c(T)?E[R]=I(T,e):E[R]=T},{allOwnKeys:R}),E),trim:E=>E.trim?E.trim():E.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,""),stripBOM:E=>(65279===E.charCodeAt(0)&&(E=E.slice(1)),E),inherits:(E,T,e,R)=>{E.prototype=Object.create(T.prototype,R),E.prototype.constructor=E,Object.defineProperty(E,"super",{value:T.prototype}),e&&Object.assign(E.prototype,e)},toFlatObject:(E,T,e,R)=>{let A,t,S,O={};if(T=T||{},null==E)return T;do{for(t=(A=Object.getOwnPropertyNames(E)).length;t-- >0;)S=A[t],(!R||R(S,E,T))&&!O[S]&&(T[S]=E[S],O[S]=!0);E=!1!==e&&n(E)}while(E&&(!e||e(E,T))&&E!==Object.prototype);return T},kindOf:C,kindOfTest:L,endsWith:(E,T,e)=>{E=String(E),(void 0===e||e>E.length)&&(e=E.length),e-=T.length;let R=E.indexOf(T,e);return -1!==R&&R===e},toArray:E=>{if(!E)return null;if(_(E))return E;let T=E.length;if(!U(T))return null;let e=Array(T);for(;T-- >0;)e[T]=E[T];return e},forEachEntry:(E,T)=>{let e,R=(E&&E[s]).call(E);for(;(e=R.next())&&!e.done;){let R=e.value;T.call(E,R[0],R[1])}},matchAll:(E,T)=>{let e,R=[];for(;null!==(e=E.exec(T));)R.push(e);return R},isHTMLForm:g,hasOwnProperty:X,hasOwnProp:X,reduceDescriptors:x,freezeMethods:E=>{x(E,(T,e)=>{if(c(E)&&-1!==["arguments","caller","callee"].indexOf(e))return!1;if(c(E[e])){if(T.enumerable=!1,"writable"in T){T.writable=!1;return}T.set||(T.set=()=>{throw Error("Can not rewrite read-only method '"+e+"'")})}})},toObjectSet:(E,T)=>{let e={};return(_(E)?E:String(E).split(T)).forEach(E=>{e[E]=!0}),e},toCamelCase:E=>E.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(E,T,e){return T.toUpperCase()+e}),noop:()=>{},toFiniteNumber:(E,T)=>null!=E&&Number.isFinite(E*=1)?E:T,findKey:y,global:V,isContextDefined:b,isSpecCompliantForm:function(E){return!!(E&&c(E.append)&&"FormData"===E[o]&&E[s])},toJSONObject:E=>{let T=Array(10),e=(E,R)=>{if(M(E)){if(T.indexOf(E)>=0)return;if(P(E))return E;if(!("toJSON"in E)){T[R]=E;let A=_(E)?[]:{};return m(E,(E,T)=>{let t=e(E,R+1);i(t)||(A[T]=t)}),T[R]=void 0,A}}return E};return e(E,0)},isAsyncFn:K,isThenable:E=>E&&(M(E)||c(E))&&c(E.then)&&c(E.catch),setImmediate:w,asap:J,isIterable:E=>null!=E&&c(E[s])};function Q(E,T,e,R,A){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=Error().stack,this.message=E,this.name="AxiosError",T&&(this.code=T),e&&(this.config=e),R&&(this.request=R),A&&(this.response=A,this.status=A.status?A.status:null)}$.inherits(Q,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:$.toJSONObject(this.config),code:this.code,status:this.status}}});let k=Q.prototype,Z={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(E=>{Z[E]={value:E}}),Object.defineProperties(Q,Z),Object.defineProperty(k,"isAxiosError",{value:!0}),Q.from=(E,T,e,R,A,t)=>{let S=Object.create(k);return $.toFlatObject(E,S,function(E){return E!==Error.prototype},E=>"isAxiosError"!==E),Q.call(S,E.message,T,e,R,A),S.cause=E,S.name=E.name,t&&Object.assign(S,t),S};var j=e(49641).Buffer;function q(E){return $.isPlainObject(E)||$.isArray(E)}function z(E){return $.endsWith(E,"[]")?E.slice(0,-2):E}function EE(E,T,e){return E?E.concat(T).map(function(E,T){return E=z(E),!e&&T?"["+E+"]":E}).join(e?".":""):T}let ET=$.toFlatObject($,{},null,function(E){return/^is[A-Z]/.test(E)}),Ee=function(E,T,e){if(!$.isObject(E))throw TypeError("target must be an object");T=T||new FormData;let R=(e=$.toFlatObject(e,{metaTokens:!0,dots:!1,indexes:!1},!1,function(E,T){return!$.isUndefined(T[E])})).metaTokens,A=e.visitor||N,t=e.dots,S=e.indexes,O=(e.Blob||"undefined"!=typeof Blob&&Blob)&&$.isSpecCompliantForm(T);if(!$.isFunction(A))throw TypeError("visitor must be a function");function I(E){if(null===E)return"";if($.isDate(E))return E.toISOString();if($.isBoolean(E))return E.toString();if(!O&&$.isBlob(E))throw new Q("Blob is not supported. Use a Buffer instead.");return $.isArrayBuffer(E)||$.isTypedArray(E)?O&&"function"==typeof Blob?new Blob([E]):j.from(E):E}function N(E,e,A){let O=E;if(E&&!A&&"object"==typeof E)if($.endsWith(e,"{}"))e=R?e:e.slice(0,-2),E=JSON.stringify(E);else{var N;if($.isArray(E)&&(N=E,$.isArray(N)&&!N.some(q))||($.isFileList(E)||$.endsWith(e,"[]"))&&(O=$.toArray(E)))return e=z(e),O.forEach(function(E,R){$.isUndefined(E)||null===E||T.append(!0===S?EE([e],R,t):null===S?e:e+"[]",I(E))}),!1}return!!q(E)||(T.append(EE(A,e,t),I(E)),!1)}let r=[],n=Object.assign(ET,{defaultVisitor:N,convertValue:I,isVisitable:q});if(!$.isObject(E))throw TypeError("data must be an object");return!function E(e,R){if(!$.isUndefined(e)){if(-1!==r.indexOf(e))throw Error("Circular reference detected in "+R.join("."));r.push(e),$.forEach(e,function(e,t){!0===(!($.isUndefined(e)||null===e)&&A.call(T,e,$.isString(t)?t.trim():t,R,n))&&E(e,R?R.concat(t):[t])}),r.pop()}}(E),T};function ER(E){let T={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(E).replace(/[!'()~]|%20|%00/g,function(E){return T[E]})}function EA(E,T){this._pairs=[],E&&Ee(E,this,T)}let Et=EA.prototype;function ES(E){return encodeURIComponent(E).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function EO(E,T,e){let R;if(!T)return E;let A=e&&e.encode||ES;$.isFunction(e)&&(e={serialize:e});let t=e&&e.serialize;if(R=t?t(T,e):$.isURLSearchParams(T)?T.toString():new EA(T,e).toString(A)){let T=E.indexOf("#");-1!==T&&(E=E.slice(0,T)),E+=(-1===E.indexOf("?")?"?":"&")+R}return E}Et.append=function(E,T){this._pairs.push([E,T])},Et.toString=function(E){let T=E?function(T){return E.call(this,T,ER)}:ER;return this._pairs.map(function(E){return T(E[0])+"="+T(E[1])},"").join("&")};class EI{constructor(){this.handlers=[]}use(E,T,e){return this.handlers.push({fulfilled:E,rejected:T,synchronous:!!e&&e.synchronous,runWhen:e?e.runWhen:null}),this.handlers.length-1}eject(E){this.handlers[E]&&(this.handlers[E]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(E){$.forEach(this.handlers,function(T){null!==T&&E(T)})}}let EN={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},Er="undefined"!=typeof URLSearchParams?URLSearchParams:EA,En="undefined"!=typeof FormData?FormData:null,Es="undefined"!=typeof Blob?Blob:null,Eo="undefined"!=typeof window&&"undefined"!=typeof document,EC="object"==typeof navigator&&navigator||void 0,EL=Eo&&(!EC||0>["ReactNative","NativeScript","NS"].indexOf(EC.product)),Ea="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&"function"==typeof self.importScripts,E_=Eo&&window.location.href||"http://localhost",Ei={...O,isBrowser:!0,classes:{URLSearchParams:Er,FormData:En,Blob:Es},protocols:["http","https","file","blob","url","data"]},EP=function(E){if($.isFormData(E)&&$.isFunction(E.entries)){let T={};return $.forEachEntry(E,(E,e)=>{!function E(T,e,R,A){let t=T[A++];if("__proto__"===t)return!0;let S=Number.isFinite(+t),O=A>=T.length;return(t=!t&&$.isArray(R)?R.length:t,O)?$.hasOwnProp(R,t)?R[t]=[R[t],e]:R[t]=e:(R[t]&&$.isObject(R[t])||(R[t]=[]),E(T,e,R[t],A)&&$.isArray(R[t])&&(R[t]=function(E){let T,e,R={},A=Object.keys(E),t=A.length;for(T=0;T<t;T++)R[e=A[T]]=E[e];return R}(R[t]))),!S}($.matchAll(/\w+|\[(\w*)]/g,E).map(E=>"[]"===E[0]?"":E[1]||E[0]),e,T,0)}),T}return null},ED={transitional:EN,adapter:["xhr","http","fetch"],transformRequest:[function(E,T){let e,R=T.getContentType()||"",A=R.indexOf("application/json")>-1,t=$.isObject(E);if(t&&$.isHTMLForm(E)&&(E=new FormData(E)),$.isFormData(E))return A?JSON.stringify(EP(E)):E;if($.isArrayBuffer(E)||$.isBuffer(E)||$.isStream(E)||$.isFile(E)||$.isBlob(E)||$.isReadableStream(E))return E;if($.isArrayBufferView(E))return E.buffer;if($.isURLSearchParams(E))return T.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),E.toString();if(t){if(R.indexOf("application/x-www-form-urlencoded")>-1){var S,O;return(S=E,O=this.formSerializer,Ee(S,new Ei.classes.URLSearchParams,{visitor:function(E,T,e,R){return Ei.isNode&&$.isBuffer(E)?(this.append(T,E.toString("base64")),!1):R.defaultVisitor.apply(this,arguments)},...O})).toString()}if((e=$.isFileList(E))||R.indexOf("multipart/form-data")>-1){let T=this.env&&this.env.FormData;return Ee(e?{"files[]":E}:E,T&&new T,this.formSerializer)}}if(t||A){T.setContentType("application/json",!1);var I=E;if($.isString(I))try{return(0,JSON.parse)(I),$.trim(I)}catch(E){if("SyntaxError"!==E.name)throw E}return(0,JSON.stringify)(I)}return E}],transformResponse:[function(E){let T=this.transitional||ED.transitional,e=T&&T.forcedJSONParsing,R="json"===this.responseType;if($.isResponse(E)||$.isReadableStream(E))return E;if(E&&$.isString(E)&&(e&&!this.responseType||R)){let e=T&&T.silentJSONParsing;try{return JSON.parse(E)}catch(E){if(!e&&R){if("SyntaxError"===E.name)throw Q.from(E,Q.ERR_BAD_RESPONSE,this,null,this.response);throw E}}}return E}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:Ei.classes.FormData,Blob:Ei.classes.Blob},validateStatus:function(E){return E>=200&&E<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};$.forEach(["delete","get","head","post","put","patch"],E=>{ED.headers[E]={}});let El=$.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),Ec=Symbol("internals");function EU(E){return E&&String(E).trim().toLowerCase()}function EM(E){return!1===E||null==E?E:$.isArray(E)?E.map(EM):String(E)}function Eu(E,T,e,R,A){if($.isFunction(R))return R.call(this,T,e);if(A&&(T=e),$.isString(T)){if($.isString(R))return -1!==T.indexOf(R);if($.isRegExp(R))return R.test(T)}}class Ep{constructor(E){E&&this.set(E)}set(E,T,e){let R=this;function A(E,T,e){let A=EU(T);if(!A)throw Error("header name must be a non-empty string");let t=$.findKey(R,A);t&&void 0!==R[t]&&!0!==e&&(void 0!==e||!1===R[t])||(R[t||T]=EM(E))}let t=(E,T)=>$.forEach(E,(E,e)=>A(E,e,T));if($.isPlainObject(E)||E instanceof this.constructor)t(E,T);else{let R;if($.isString(E)&&(E=E.trim())&&(R=E,!/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(R.trim())))t((E=>{let T,e,R,A={};return E&&E.split("\n").forEach(function(E){R=E.indexOf(":"),T=E.substring(0,R).trim().toLowerCase(),e=E.substring(R+1).trim(),!T||A[T]&&El[T]||("set-cookie"===T?A[T]?A[T].push(e):A[T]=[e]:A[T]=A[T]?A[T]+", "+e:e)}),A})(E),T);else if($.isObject(E)&&$.isIterable(E)){let e={},R,A;for(let T of E){if(!$.isArray(T))throw TypeError("Object iterator must return a key-value pair");e[A=T[0]]=(R=e[A])?$.isArray(R)?[...R,T[1]]:[R,T[1]]:T[1]}t(e,T)}else null!=E&&A(T,E,e)}return this}get(E,T){if(E=EU(E)){let e=$.findKey(this,E);if(e){let E=this[e];if(!T)return E;if(!0===T){let T,e=Object.create(null),R=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;for(;T=R.exec(E);)e[T[1]]=T[2];return e}if($.isFunction(T))return T.call(this,E,e);if($.isRegExp(T))return T.exec(E);throw TypeError("parser must be boolean|regexp|function")}}}has(E,T){if(E=EU(E)){let e=$.findKey(this,E);return!!(e&&void 0!==this[e]&&(!T||Eu(this,this[e],e,T)))}return!1}delete(E,T){let e=this,R=!1;function A(E){if(E=EU(E)){let A=$.findKey(e,E);A&&(!T||Eu(e,e[A],A,T))&&(delete e[A],R=!0)}}return $.isArray(E)?E.forEach(A):A(E),R}clear(E){let T=Object.keys(this),e=T.length,R=!1;for(;e--;){let A=T[e];(!E||Eu(this,this[A],A,E,!0))&&(delete this[A],R=!0)}return R}normalize(E){let T=this,e={};return $.forEach(this,(R,A)=>{let t=$.findKey(e,A);if(t){T[t]=EM(R),delete T[A];return}let S=E?A.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(E,T,e)=>T.toUpperCase()+e):String(A).trim();S!==A&&delete T[A],T[S]=EM(R),e[S]=!0}),this}concat(...E){return this.constructor.concat(this,...E)}toJSON(E){let T=Object.create(null);return $.forEach(this,(e,R)=>{null!=e&&!1!==e&&(T[R]=E&&$.isArray(e)?e.join(", "):e)}),T}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([E,T])=>E+": "+T).join("\n")}getSetCookie(){return this.get("set-cookie")||[]}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(E){return E instanceof this?E:new this(E)}static concat(E,...T){let e=new this(E);return T.forEach(E=>e.set(E)),e}static accessor(E){let T=(this[Ec]=this[Ec]={accessors:{}}).accessors,e=this.prototype;function R(E){let R=EU(E);if(!T[R]){let A=$.toCamelCase(" "+E);["get","set","has"].forEach(T=>{Object.defineProperty(e,T+A,{value:function(e,R,A){return this[T].call(this,E,e,R,A)},configurable:!0})}),T[R]=!0}}return $.isArray(E)?E.forEach(R):R(E),this}}function EG(E,T){let e=this||ED,R=T||e,A=Ep.from(R.headers),t=R.data;return $.forEach(E,function(E){t=E.call(e,t,A.normalize(),T?T.status:void 0)}),A.normalize(),t}function Ed(E){return!!(E&&E.__CANCEL__)}function Ef(E,T,e){Q.call(this,null==E?"canceled":E,Q.ERR_CANCELED,T,e),this.name="CanceledError"}function EB(E,T,e){let R=e.config.validateStatus;!e.status||!R||R(e.status)?E(e):T(new Q("Request failed with status code "+e.status,[Q.ERR_BAD_REQUEST,Q.ERR_BAD_RESPONSE][Math.floor(e.status/100)-4],e.config,e.request,e))}Ep.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]),$.reduceDescriptors(Ep.prototype,({value:E},T)=>{let e=T[0].toUpperCase()+T.slice(1);return{get:()=>E,set(E){this[e]=E}}}),$.freezeMethods(Ep),$.inherits(Ef,Q,{__CANCEL__:!0});let EH=function(E,T){let e,R=Array(E=E||10),A=Array(E),t=0,S=0;return T=void 0!==T?T:1e3,function(O){let I=Date.now(),N=A[S];e||(e=I),R[t]=O,A[t]=I;let r=S,n=0;for(;r!==t;)n+=R[r++],r%=E;if((t=(t+1)%E)===S&&(S=(S+1)%E),I-e<T)return;let s=N&&I-N;return s?Math.round(1e3*n/s):void 0}},Eh=function(E,T){let e,R,A=0,t=1e3/T,S=(T,t=Date.now())=>{A=t,e=null,R&&(clearTimeout(R),R=null),E(...T)};return[(...E)=>{let T=Date.now(),O=T-A;O>=t?S(E,T):(e=E,R||(R=setTimeout(()=>{R=null,S(e)},t-O)))},()=>e&&S(e)]},EF=(E,T,e=3)=>{let R=0,A=EH(50,250);return Eh(e=>{let t=e.loaded,S=e.lengthComputable?e.total:void 0,O=t-R,I=A(O);R=t,E({loaded:t,total:S,progress:S?t/S:void 0,bytes:O,rate:I||void 0,estimated:I&&S&&t<=S?(S-t)/I:void 0,event:e,lengthComputable:null!=S,[T?"download":"upload"]:!0})},e)},EY=(E,T)=>{let e=null!=E;return[R=>T[0]({lengthComputable:e,total:E,loaded:R}),T[1]]},Em=E=>(...T)=>$.asap(()=>E(...T)),Ey=Ei.hasStandardBrowserEnv?((E,T)=>e=>(e=new URL(e,Ei.origin),E.protocol===e.protocol&&E.host===e.host&&(T||E.port===e.port)))(new URL(Ei.origin),Ei.navigator&&/(msie|trident)/i.test(Ei.navigator.userAgent)):()=>!0,EV=Ei.hasStandardBrowserEnv?{write(E,T,e,R,A,t){let S=[E+"="+encodeURIComponent(T)];$.isNumber(e)&&S.push("expires="+new Date(e).toGMTString()),$.isString(R)&&S.push("path="+R),$.isString(A)&&S.push("domain="+A),!0===t&&S.push("secure"),document.cookie=S.join("; ")},read(E){let T=document.cookie.match(RegExp("(^|;\\s*)("+E+")=([^;]*)"));return T?decodeURIComponent(T[3]):null},remove(E){this.write(E,"",Date.now()-864e5)}}:{write(){},read:()=>null,remove(){}};function Eb(E,T,e){let R=!/^([a-z][a-z\d+\-.]*:)?\/\//i.test(T);return E&&(R||!1==e)?T?E.replace(/\/?\/$/,"")+"/"+T.replace(/^\/+/,""):E:T}let EW=E=>E instanceof Ep?{...E}:E;function Eg(E,T){T=T||{};let e={};function R(E,T,e,R){return $.isPlainObject(E)&&$.isPlainObject(T)?$.merge.call({caseless:R},E,T):$.isPlainObject(T)?$.merge({},T):$.isArray(T)?T.slice():T}function A(E,T,e,A){return $.isUndefined(T)?$.isUndefined(E)?void 0:R(void 0,E,e,A):R(E,T,e,A)}function t(E,T){if(!$.isUndefined(T))return R(void 0,T)}function S(E,T){return $.isUndefined(T)?$.isUndefined(E)?void 0:R(void 0,E):R(void 0,T)}function O(e,A,t){return t in T?R(e,A):t in E?R(void 0,e):void 0}let I={url:t,method:t,data:t,baseURL:S,transformRequest:S,transformResponse:S,paramsSerializer:S,timeout:S,timeoutMessage:S,withCredentials:S,withXSRFToken:S,adapter:S,responseType:S,xsrfCookieName:S,xsrfHeaderName:S,onUploadProgress:S,onDownloadProgress:S,decompress:S,maxContentLength:S,maxBodyLength:S,beforeRedirect:S,transport:S,httpAgent:S,httpsAgent:S,cancelToken:S,socketPath:S,responseEncoding:S,validateStatus:O,headers:(E,T,e)=>A(EW(E),EW(T),e,!0)};return $.forEach(Object.keys({...E,...T}),function(R){let t=I[R]||A,S=t(E[R],T[R],R);$.isUndefined(S)&&t!==O||(e[R]=S)}),e}let EX=E=>{let T,e=Eg({},E),{data:R,withXSRFToken:A,xsrfHeaderName:t,xsrfCookieName:S,headers:O,auth:I}=e;if(e.headers=O=Ep.from(O),e.url=EO(Eb(e.baseURL,e.url,e.allowAbsoluteUrls),E.params,E.paramsSerializer),I&&O.set("Authorization","Basic "+btoa((I.username||"")+":"+(I.password?unescape(encodeURIComponent(I.password)):""))),$.isFormData(R)){if(Ei.hasStandardBrowserEnv||Ei.hasStandardBrowserWebWorkerEnv)O.setContentType(void 0);else if(!1!==(T=O.getContentType())){let[E,...e]=T?T.split(";").map(E=>E.trim()).filter(Boolean):[];O.setContentType([E||"multipart/form-data",...e].join("; "))}}if(Ei.hasStandardBrowserEnv&&(A&&$.isFunction(A)&&(A=A(e)),A||!1!==A&&Ey(e.url))){let E=t&&S&&EV.read(S);E&&O.set(t,E)}return e},Ev="undefined"!=typeof XMLHttpRequest&&function(E){return new Promise(function(T,e){let R,A,t,S,O,I=EX(E),N=I.data,r=Ep.from(I.headers).normalize(),{responseType:n,onUploadProgress:s,onDownloadProgress:o}=I;function C(){S&&S(),O&&O(),I.cancelToken&&I.cancelToken.unsubscribe(R),I.signal&&I.signal.removeEventListener("abort",R)}let L=new XMLHttpRequest;function a(){if(!L)return;let R=Ep.from("getAllResponseHeaders"in L&&L.getAllResponseHeaders());EB(function(E){T(E),C()},function(E){e(E),C()},{data:n&&"text"!==n&&"json"!==n?L.response:L.responseText,status:L.status,statusText:L.statusText,headers:R,config:E,request:L}),L=null}L.open(I.method.toUpperCase(),I.url,!0),L.timeout=I.timeout,"onloadend"in L?L.onloadend=a:L.onreadystatechange=function(){L&&4===L.readyState&&(0!==L.status||L.responseURL&&0===L.responseURL.indexOf("file:"))&&setTimeout(a)},L.onabort=function(){L&&(e(new Q("Request aborted",Q.ECONNABORTED,E,L)),L=null)},L.onerror=function(){e(new Q("Network Error",Q.ERR_NETWORK,E,L)),L=null},L.ontimeout=function(){let T=I.timeout?"timeout of "+I.timeout+"ms exceeded":"timeout exceeded",R=I.transitional||EN;I.timeoutErrorMessage&&(T=I.timeoutErrorMessage),e(new Q(T,R.clarifyTimeoutError?Q.ETIMEDOUT:Q.ECONNABORTED,E,L)),L=null},void 0===N&&r.setContentType(null),"setRequestHeader"in L&&$.forEach(r.toJSON(),function(E,T){L.setRequestHeader(T,E)}),$.isUndefined(I.withCredentials)||(L.withCredentials=!!I.withCredentials),n&&"json"!==n&&(L.responseType=I.responseType),o&&([t,O]=EF(o,!0),L.addEventListener("progress",t)),s&&L.upload&&([A,S]=EF(s),L.upload.addEventListener("progress",A),L.upload.addEventListener("loadend",S)),(I.cancelToken||I.signal)&&(R=T=>{L&&(e(!T||T.type?new Ef(null,E,L):T),L.abort(),L=null)},I.cancelToken&&I.cancelToken.subscribe(R),I.signal&&(I.signal.aborted?R():I.signal.addEventListener("abort",R)));let _=function(E){let T=/^([-+\w]{1,25})(:?\/\/|:)/.exec(E);return T&&T[1]||""}(I.url);if(_&&-1===Ei.protocols.indexOf(_))return void e(new Q("Unsupported protocol "+_+":",Q.ERR_BAD_REQUEST,E));L.send(N||null)})},Ex=function*(E,T){let e,R=E.byteLength;if(!T||R<T)return void(yield E);let A=0;for(;A<R;)e=A+T,yield E.slice(A,e),A=e},EK=async function*(E,T){for await(let e of Ew(E))yield*Ex(e,T)},Ew=async function*(E){if(E[Symbol.asyncIterator])return void(yield*E);let T=E.getReader();try{for(;;){let{done:E,value:e}=await T.read();if(E)break;yield e}}finally{await T.cancel()}},EJ=(E,T,e,R)=>{let A,t=EK(E,T),S=0,O=E=>{!A&&(A=!0,R&&R(E))};return new ReadableStream({async pull(E){try{let{done:T,value:R}=await t.next();if(T){O(),E.close();return}let A=R.byteLength;if(e){let E=S+=A;e(E)}E.enqueue(new Uint8Array(R))}catch(E){throw O(E),E}},cancel:E=>(O(E),t.return())},{highWaterMark:2})},E$="function"==typeof fetch&&"function"==typeof Request&&"function"==typeof Response,EQ=E$&&"function"==typeof ReadableStream,Ek=E$&&("function"==typeof TextEncoder?(R=new TextEncoder,E=>R.encode(E)):async E=>new Uint8Array(await new Response(E).arrayBuffer())),EZ=(E,...T)=>{try{return!!E(...T)}catch(E){return!1}},Ej=EQ&&EZ(()=>{let E=!1,T=new Request(Ei.origin,{body:new ReadableStream,method:"POST",get duplex(){return E=!0,"half"}}).headers.has("Content-Type");return E&&!T}),Eq=EQ&&EZ(()=>$.isReadableStream(new Response("").body)),Ez={stream:Eq&&(E=>E.body)};E$&&(S=new Response,["text","arrayBuffer","blob","formData","stream"].forEach(E=>{Ez[E]||(Ez[E]=$.isFunction(S[E])?T=>T[E]():(T,e)=>{throw new Q(`Response type '${E}' is not supported`,Q.ERR_NOT_SUPPORT,e)})}));let E0=async E=>{if(null==E)return 0;if($.isBlob(E))return E.size;if($.isSpecCompliantForm(E)){let T=new Request(Ei.origin,{method:"POST",body:E});return(await T.arrayBuffer()).byteLength}return $.isArrayBufferView(E)||$.isArrayBuffer(E)?E.byteLength:($.isURLSearchParams(E)&&(E+=""),$.isString(E))?(await Ek(E)).byteLength:void 0},E1=async(E,T)=>{let e=$.toFiniteNumber(E.getContentLength());return null==e?E0(T):e},E2={http:null,xhr:Ev,fetch:E$&&(async E=>{let T,e,{url:R,method:A,data:t,signal:S,cancelToken:O,timeout:I,onDownloadProgress:N,onUploadProgress:r,responseType:n,headers:s,withCredentials:o="same-origin",fetchOptions:C}=EX(E);n=n?(n+"").toLowerCase():"text";let L=((E,T)=>{let{length:e}=E=E?E.filter(Boolean):[];if(T||e){let e,R=new AbortController,A=function(E){if(!e){e=!0,S();let T=E instanceof Error?E:this.reason;R.abort(T instanceof Q?T:new Ef(T instanceof Error?T.message:T))}},t=T&&setTimeout(()=>{t=null,A(new Q(`timeout ${T} of ms exceeded`,Q.ETIMEDOUT))},T),S=()=>{E&&(t&&clearTimeout(t),t=null,E.forEach(E=>{E.unsubscribe?E.unsubscribe(A):E.removeEventListener("abort",A)}),E=null)};E.forEach(E=>E.addEventListener("abort",A));let{signal:O}=R;return O.unsubscribe=()=>$.asap(S),O}})([S,O&&O.toAbortSignal()],I),a=L&&L.unsubscribe&&(()=>{L.unsubscribe()});try{if(r&&Ej&&"get"!==A&&"head"!==A&&0!==(e=await E1(s,t))){let E,T=new Request(R,{method:"POST",body:t,duplex:"half"});if($.isFormData(t)&&(E=T.headers.get("content-type"))&&s.setContentType(E),T.body){let[E,R]=EY(e,EF(Em(r)));t=EJ(T.body,65536,E,R)}}$.isString(o)||(o=o?"include":"omit");let S="credentials"in Request.prototype;T=new Request(R,{...C,signal:L,method:A.toUpperCase(),headers:s.normalize().toJSON(),body:t,duplex:"half",credentials:S?o:void 0});let O=await fetch(T,C),I=Eq&&("stream"===n||"response"===n);if(Eq&&(N||I&&a)){let E={};["status","statusText","headers"].forEach(T=>{E[T]=O[T]});let T=$.toFiniteNumber(O.headers.get("content-length")),[e,R]=N&&EY(T,EF(Em(N),!0))||[];O=new Response(EJ(O.body,65536,e,()=>{R&&R(),a&&a()}),E)}n=n||"text";let _=await Ez[$.findKey(Ez,n)||"text"](O,E);return!I&&a&&a(),await new Promise((e,R)=>{EB(e,R,{data:_,headers:Ep.from(O.headers),status:O.status,statusText:O.statusText,config:E,request:T})})}catch(e){if(a&&a(),e&&"TypeError"===e.name&&/Load failed|fetch/i.test(e.message))throw Object.assign(new Q("Network Error",Q.ERR_NETWORK,E,T),{cause:e.cause||e});throw Q.from(e,e&&e.code,E,T)}})};$.forEach(E2,(E,T)=>{if(E){try{Object.defineProperty(E,"name",{value:T})}catch(E){}Object.defineProperty(E,"adapterName",{value:T})}});let E6=E=>`- ${E}`,E4=E=>$.isFunction(E)||null===E||!1===E,E5={getAdapter:E=>{let T,e,{length:R}=E=$.isArray(E)?E:[E],A={};for(let t=0;t<R;t++){let R;if(e=T=E[t],!E4(T)&&void 0===(e=E2[(R=String(T)).toLowerCase()]))throw new Q(`Unknown adapter '${R}'`);if(e)break;A[R||"#"+t]=e}if(!e){let E=Object.entries(A).map(([E,T])=>`adapter ${E} `+(!1===T?"is not supported by the environment":"is not available in the build"));throw new Q("There is no suitable adapter to dispatch the request "+(R?E.length>1?"since :\n"+E.map(E6).join("\n"):" "+E6(E[0]):"as no adapter specified"),"ERR_NOT_SUPPORT")}return e}};function E8(E){if(E.cancelToken&&E.cancelToken.throwIfRequested(),E.signal&&E.signal.aborted)throw new Ef(null,E)}function E3(E){return E8(E),E.headers=Ep.from(E.headers),E.data=EG.call(E,E.transformRequest),-1!==["post","put","patch"].indexOf(E.method)&&E.headers.setContentType("application/x-www-form-urlencoded",!1),E5.getAdapter(E.adapter||ED.adapter)(E).then(function(T){return E8(E),T.data=EG.call(E,E.transformResponse,T),T.headers=Ep.from(T.headers),T},function(T){return!Ed(T)&&(E8(E),T&&T.response&&(T.response.data=EG.call(E,E.transformResponse,T.response),T.response.headers=Ep.from(T.response.headers))),Promise.reject(T)})}let E9="1.11.0",E7={};["object","boolean","number","function","string","symbol"].forEach((E,T)=>{E7[E]=function(e){return typeof e===E||"a"+(T<1?"n ":" ")+E}});let TE={};E7.transitional=function(E,T,e){function R(E,T){return"[Axios v"+E9+"] Transitional option '"+E+"'"+T+(e?". "+e:"")}return(e,A,t)=>{if(!1===E)throw new Q(R(A," has been removed"+(T?" in "+T:"")),Q.ERR_DEPRECATED);return T&&!TE[A]&&(TE[A]=!0,console.warn(R(A," has been deprecated since v"+T+" and will be removed in the near future"))),!E||E(e,A,t)}},E7.spelling=function(E){return(T,e)=>(console.warn(`${e} is likely a misspelling of ${E}`),!0)};let TT={assertOptions:function(E,T,e){if("object"!=typeof E)throw new Q("options must be an object",Q.ERR_BAD_OPTION_VALUE);let R=Object.keys(E),A=R.length;for(;A-- >0;){let t=R[A],S=T[t];if(S){let T=E[t],e=void 0===T||S(T,t,E);if(!0!==e)throw new Q("option "+t+" must be "+e,Q.ERR_BAD_OPTION_VALUE);continue}if(!0!==e)throw new Q("Unknown option "+t,Q.ERR_BAD_OPTION)}},validators:E7},Te=TT.validators;class TR{constructor(E){this.defaults=E||{},this.interceptors={request:new EI,response:new EI}}async request(E,T){try{return await this._request(E,T)}catch(E){if(E instanceof Error){let T={};Error.captureStackTrace?Error.captureStackTrace(T):T=Error();let e=T.stack?T.stack.replace(/^.+\n/,""):"";try{E.stack?e&&!String(E.stack).endsWith(e.replace(/^.+\n.+\n/,""))&&(E.stack+="\n"+e):E.stack=e}catch(E){}}throw E}}_request(E,T){let e,R;"string"==typeof E?(T=T||{}).url=E:T=E||{};let{transitional:A,paramsSerializer:t,headers:S}=T=Eg(this.defaults,T);void 0!==A&&TT.assertOptions(A,{silentJSONParsing:Te.transitional(Te.boolean),forcedJSONParsing:Te.transitional(Te.boolean),clarifyTimeoutError:Te.transitional(Te.boolean)},!1),null!=t&&($.isFunction(t)?T.paramsSerializer={serialize:t}:TT.assertOptions(t,{encode:Te.function,serialize:Te.function},!0)),void 0!==T.allowAbsoluteUrls||(void 0!==this.defaults.allowAbsoluteUrls?T.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:T.allowAbsoluteUrls=!0),TT.assertOptions(T,{baseUrl:Te.spelling("baseURL"),withXsrfToken:Te.spelling("withXSRFToken")},!0),T.method=(T.method||this.defaults.method||"get").toLowerCase();let O=S&&$.merge(S.common,S[T.method]);S&&$.forEach(["delete","get","head","post","put","patch","common"],E=>{delete S[E]}),T.headers=Ep.concat(O,S);let I=[],N=!0;this.interceptors.request.forEach(function(E){("function"!=typeof E.runWhen||!1!==E.runWhen(T))&&(N=N&&E.synchronous,I.unshift(E.fulfilled,E.rejected))});let r=[];this.interceptors.response.forEach(function(E){r.push(E.fulfilled,E.rejected)});let n=0;if(!N){let E=[E3.bind(this),void 0];for(E.unshift(...I),E.push(...r),R=E.length,e=Promise.resolve(T);n<R;)e=e.then(E[n++],E[n++]);return e}R=I.length;let s=T;for(n=0;n<R;){let E=I[n++],T=I[n++];try{s=E(s)}catch(E){T.call(this,E);break}}try{e=E3.call(this,s)}catch(E){return Promise.reject(E)}for(n=0,R=r.length;n<R;)e=e.then(r[n++],r[n++]);return e}getUri(E){return EO(Eb((E=Eg(this.defaults,E)).baseURL,E.url,E.allowAbsoluteUrls),E.params,E.paramsSerializer)}}$.forEach(["delete","get","head","options"],function(E){TR.prototype[E]=function(T,e){return this.request(Eg(e||{},{method:E,url:T,data:(e||{}).data}))}}),$.forEach(["post","put","patch"],function(E){function T(T){return function(e,R,A){return this.request(Eg(A||{},{method:E,headers:T?{"Content-Type":"multipart/form-data"}:{},url:e,data:R}))}}TR.prototype[E]=T(),TR.prototype[E+"Form"]=T(!0)});class TA{constructor(E){let T;if("function"!=typeof E)throw TypeError("executor must be a function.");this.promise=new Promise(function(E){T=E});let e=this;this.promise.then(E=>{if(!e._listeners)return;let T=e._listeners.length;for(;T-- >0;)e._listeners[T](E);e._listeners=null}),this.promise.then=E=>{let T,R=new Promise(E=>{e.subscribe(E),T=E}).then(E);return R.cancel=function(){e.unsubscribe(T)},R},E(function(E,R,A){e.reason||(e.reason=new Ef(E,R,A),T(e.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(E){if(this.reason)return void E(this.reason);this._listeners?this._listeners.push(E):this._listeners=[E]}unsubscribe(E){if(!this._listeners)return;let T=this._listeners.indexOf(E);-1!==T&&this._listeners.splice(T,1)}toAbortSignal(){let E=new AbortController,T=T=>{E.abort(T)};return this.subscribe(T),E.signal.unsubscribe=()=>this.unsubscribe(T),E.signal}static source(){let E;return{token:new TA(function(T){E=T}),cancel:E}}}let Tt={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Tt).forEach(([E,T])=>{Tt[T]=E});let TS=function E(T){let e=new TR(T),R=I(TR.prototype.request,e);return $.extend(R,TR.prototype,e,{allOwnKeys:!0}),$.extend(R,e,null,{allOwnKeys:!0}),R.create=function(e){return E(Eg(T,e))},R}(ED);TS.Axios=TR,TS.CanceledError=Ef,TS.CancelToken=TA,TS.isCancel=Ed,TS.VERSION=E9,TS.toFormData=Ee,TS.AxiosError=Q,TS.Cancel=TS.CanceledError,TS.all=function(E){return Promise.all(E)},TS.spread=function(E){return function(T){return E.apply(null,T)}},TS.isAxiosError=function(E){return $.isObject(E)&&!0===E.isAxiosError},TS.mergeConfig=Eg,TS.AxiosHeaders=Ep,TS.formToJSON=E=>EP($.isHTMLForm(E)?new FormData(E):E),TS.getAdapter=E5.getAdapter,TS.HttpStatusCode=Tt,TS.default=TS;let TO=TS},24376:(E,T,e)=>{E.exports=e(82500).Symbol},25898:function(E){var T;T=function(){function E(T,e,R){return this.id=++E.highestId,this.name=T,this.symbols=e,this.postprocess=R,this}function T(E,T,e,R){this.rule=E,this.dot=T,this.reference=e,this.data=[],this.wantedBy=R,this.isComplete=this.dot===E.symbols.length}function e(E,T){this.grammar=E,this.index=T,this.states=[],this.wants={},this.scannable=[],this.completed={}}function R(E,T){this.rules=E,this.start=T||this.rules[0].name;var e=this.byName={};this.rules.forEach(function(E){e.hasOwnProperty(E.name)||(e[E.name]=[]),e[E.name].push(E)})}function A(){this.reset("")}function t(E,T,t){if(E instanceof R)var S=E,t=T;else var S=R.fromCompiled(E,T);for(var O in this.grammar=S,this.options={keepHistory:!1,lexer:S.lexer||new A},t||{})this.options[O]=t[O];this.lexer=this.options.lexer,this.lexerState=void 0;var I=new e(S,0);this.table=[I],I.wants[S.start]=[],I.predict(S.start),I.process(),this.current=0}function S(E){var T=typeof E;if("string"===T)return E;if("object"===T)if(E.literal)return JSON.stringify(E.literal);else if(E instanceof RegExp)return E.toString();else if(E.type)return"%"+E.type;else if(E.test)return"<"+String(E.test)+">";else throw Error("Unknown symbol type: "+E)}return E.highestId=0,E.prototype.toString=function(E){var T=void 0===E?this.symbols.map(S).join(" "):this.symbols.slice(0,E).map(S).join(" ")+" ● "+this.symbols.slice(E).map(S).join(" ");return this.name+" → "+T},T.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},T.prototype.nextState=function(E){var e=new T(this.rule,this.dot+1,this.reference,this.wantedBy);return e.left=this,e.right=E,e.isComplete&&(e.data=e.build(),e.right=void 0),e},T.prototype.build=function(){var E=[],T=this;do E.push(T.right.data),T=T.left;while(T.left);return E.reverse(),E},T.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,t.fail))},e.prototype.process=function(E){for(var T=this.states,e=this.wants,R=this.completed,A=0;A<T.length;A++){var S=T[A];if(S.isComplete){if(S.finish(),S.data!==t.fail){for(var O=S.wantedBy,I=O.length;I--;){var N=O[I];this.complete(N,S)}if(S.reference===this.index){var r=S.rule.name;(this.completed[r]=this.completed[r]||[]).push(S)}}}else{var r=S.rule.symbols[S.dot];if("string"!=typeof r){this.scannable.push(S);continue}if(e[r]){if(e[r].push(S),R.hasOwnProperty(r))for(var n=R[r],I=0;I<n.length;I++){var s=n[I];this.complete(S,s)}}else e[r]=[S],this.predict(r)}}},e.prototype.predict=function(E){for(var e=this.grammar.byName[E]||[],R=0;R<e.length;R++){var A=e[R],t=this.wants[E],S=new T(A,0,this.index,t);this.states.push(S)}},e.prototype.complete=function(E,T){var e=E.nextState(T);this.states.push(e)},R.fromCompiled=function(T,e){var A=T.Lexer;T.ParserStart&&(e=T.ParserStart,T=T.ParserRules);var T=T.map(function(T){return new E(T.name,T.symbols,T.postprocess)}),t=new R(T,e);return t.lexer=A,t},A.prototype.reset=function(E,T){this.buffer=E,this.index=0,this.line=T?T.line:1,this.lastLineBreak=T?-T.col:0},A.prototype.next=function(){if(this.index<this.buffer.length){var E=this.buffer[this.index++];return"\n"===E&&(this.line+=1,this.lastLineBreak=this.index),{value:E}}},A.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},A.prototype.formatError=function(E,T){var e=this.buffer;if("string"!=typeof e)return T+" at index "+(this.index-1);var R=e.split("\n").slice(Math.max(0,this.line-5),this.line),A=e.indexOf("\n",this.index);-1===A&&(A=e.length);var t=this.index-this.lastLineBreak,S=String(this.line).length;return T+=" at line "+this.line+" col "+t+":\n\n",T+=R.map(function(E,T){return O(this.line-R.length+T+1,S)+" "+E},this).join("\n"),T+="\n"+O("",S+t)+"^\n";function O(E,T){var e=String(E);return Array(T-e.length+1).join(" ")+e}},t.fail={},t.prototype.feed=function(E){var T,R=this.lexer;for(R.reset(E,this.lexerState);;){try{if(!(T=R.next()))break}catch(E){var t=new e(this.grammar,this.current+1);this.table.push(t);var S=Error(this.reportLexerError(E));throw S.offset=this.current,S.token=E.token,S}var O=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var I=this.current+1,t=new e(this.grammar,I);this.table.push(t);for(var N=void 0!==T.text?T.text:T.value,r=R.constructor===A?T.value:T,n=O.scannable,s=n.length;s--;){var o=n[s],C=o.rule.symbols[o.dot];if(C.test?C.test(r):C.type?C.type===T.type:C.literal===N){var L=o.nextState({data:r,token:T,isToken:!0,reference:I-1});t.states.push(L)}}if(t.process(),0===t.states.length){var S=Error(this.reportError(T));throw S.offset=this.current,S.token=T,S}this.options.keepHistory&&(O.lexerState=R.save()),this.current++}return O&&(this.lexerState=R.save()),this.results=this.finish(),this},t.prototype.reportLexerError=function(E){var T,e,R=E.token;return R?(T="input "+JSON.stringify(R.text[0])+" (lexer error)",e=this.lexer.formatError(R,"Syntax error")):(T="input (lexer error)",e=E.message),this.reportErrorCommon(e,T)},t.prototype.reportError=function(E){var T=(E.type?E.type+" token: ":"")+JSON.stringify(void 0!==E.value?E.value:E),e=this.lexer.formatError(E,"Syntax error");return this.reportErrorCommon(e,T)},t.prototype.reportErrorCommon=function(E,T){var e=[];e.push(E);var R=this.table.length-2,A=this.table[R],t=A.states.filter(function(E){var T=E.rule.symbols[E.dot];return T&&"string"!=typeof T});return 0===t.length?(e.push("Unexpected "+T+". I did not expect any more input. Here is the state of my parse table:\n"),this.displayStateStack(A.states,e)):(e.push("Unexpected "+T+". Instead, I was expecting to see one of the following:\n"),t.map(function(E){return this.buildFirstStateStack(E,[])||[E]},this).forEach(function(E){var T=E[0],R=T.rule.symbols[T.dot],A=this.getSymbolDisplay(R);e.push("A "+A+" based on:"),this.displayStateStack(E,e)},this)),e.push(""),e.join("\n")},t.prototype.displayStateStack=function(E,T){for(var e,R=0,A=0;A<E.length;A++){var t=E[A],S=t.rule.toString(t.dot);S===e?R++:(R>0&&T.push("    ^ "+R+" more lines identical to this"),R=0,T.push("    "+S)),e=S}},t.prototype.getSymbolDisplay=function(E){var T=E,e=typeof T;if("string"===e)return T;if("object"===e)if(T.literal)return JSON.stringify(T.literal);else if(T instanceof RegExp)return"character matching "+T;else if(T.type)return T.type+" token";else if(T.test)return"token matching "+String(T.test);else throw Error("Unknown symbol type: "+T)},t.prototype.buildFirstStateStack=function(E,T){if(-1!==T.indexOf(E))return null;if(0===E.wantedBy.length)return[E];var e=E.wantedBy[0],R=[E].concat(T),A=this.buildFirstStateStack(e,R);return null===A?null:[E].concat(A)},t.prototype.save=function(){var E=this.table[this.current];return E.lexerState=this.lexerState,E},t.prototype.restore=function(E){var T=E.index;this.current=T,this.table[T]=E,this.table.splice(T+1),this.lexerState=E.lexerState,this.results=this.finish()},t.prototype.rewind=function(E){if(!this.options.keepHistory)throw Error("set option `keepHistory` to enable rewinding");this.restore(this.table[E])},t.prototype.finish=function(){var E=[],T=this.grammar.start;return this.table[this.table.length-1].states.forEach(function(e){e.rule.name===T&&e.dot===e.rule.symbols.length&&0===e.reference&&e.data!==t.fail&&E.push(e)}),E.map(function(E){return E.data})},{Parser:t,Grammar:R,Rule:E}},E.exports?E.exports=T():this.nearley=T()},30114:(E,T,e)=>{"use strict";e.d(T,{Tn:()=>R});var R=function(E){return"function"==typeof E}},30611:(E,T,e)=>{"use strict";e.d(T,{Ay:()=>a,BZ:()=>s,MG:()=>L,XM:()=>C,j_:()=>r,wj:()=>o});var R=e(85573),A=e(18184),t=e(67831),S=e(45431),O=e(61388),I=e(19086),N=e(35271);let r=E=>({"&::-moz-placeholder":{opacity:1},"&::placeholder":{color:E,userSelect:"none"},"&:placeholder-shown":{textOverflow:"ellipsis"}}),n=E=>{let{paddingBlockLG:T,lineHeightLG:e,borderRadiusLG:A,paddingInlineLG:t}=E;return{padding:"".concat((0,R.zA)(T)," ").concat((0,R.zA)(t)),fontSize:E.inputFontSizeLG,lineHeight:e,borderRadius:A}},s=E=>({padding:"".concat((0,R.zA)(E.paddingBlockSM)," ").concat((0,R.zA)(E.paddingInlineSM)),fontSize:E.inputFontSizeSM,borderRadius:E.borderRadiusSM}),o=E=>Object.assign(Object.assign({position:"relative",display:"inline-block",width:"100%",minWidth:0,padding:"".concat((0,R.zA)(E.paddingBlock)," ").concat((0,R.zA)(E.paddingInline)),color:E.colorText,fontSize:E.inputFontSize,lineHeight:E.lineHeight,borderRadius:E.borderRadius,transition:"all ".concat(E.motionDurationMid)},r(E.colorTextPlaceholder)),{"&-lg":Object.assign({},n(E)),"&-sm":Object.assign({},s(E)),"&-rtl, &-textarea-rtl":{direction:"rtl"}}),C=E=>{let{componentCls:T,antCls:e}=E;return{position:"relative",display:"table",width:"100%",borderCollapse:"separate",borderSpacing:0,"&[class*='col-']":{paddingInlineEnd:E.paddingXS,"&:last-child":{paddingInlineEnd:0}},["&-lg ".concat(T,", &-lg > ").concat(T,"-group-addon")]:Object.assign({},n(E)),["&-sm ".concat(T,", &-sm > ").concat(T,"-group-addon")]:Object.assign({},s(E)),["&-lg ".concat(e,"-select-single ").concat(e,"-select-selector")]:{height:E.controlHeightLG},["&-sm ".concat(e,"-select-single ").concat(e,"-select-selector")]:{height:E.controlHeightSM},["> ".concat(T)]:{display:"table-cell","&:not(:first-child):not(:last-child)":{borderRadius:0}},["".concat(T,"-group")]:{"&-addon, &-wrap":{display:"table-cell",width:1,whiteSpace:"nowrap",verticalAlign:"middle","&:not(:first-child):not(:last-child)":{borderRadius:0}},"&-wrap > *":{display:"block !important"},"&-addon":{position:"relative",padding:"0 ".concat((0,R.zA)(E.paddingInline)),color:E.colorText,fontWeight:"normal",fontSize:E.inputFontSize,textAlign:"center",borderRadius:E.borderRadius,transition:"all ".concat(E.motionDurationSlow),lineHeight:1,["".concat(e,"-select")]:{margin:"".concat((0,R.zA)(E.calc(E.paddingBlock).add(1).mul(-1).equal())," ").concat((0,R.zA)(E.calc(E.paddingInline).mul(-1).equal())),["&".concat(e,"-select-single:not(").concat(e,"-select-customize-input):not(").concat(e,"-pagination-size-changer)")]:{["".concat(e,"-select-selector")]:{backgroundColor:"inherit",border:"".concat((0,R.zA)(E.lineWidth)," ").concat(E.lineType," transparent"),boxShadow:"none"}}},["".concat(e,"-cascader-picker")]:{margin:"-9px ".concat((0,R.zA)(E.calc(E.paddingInline).mul(-1).equal())),backgroundColor:"transparent",["".concat(e,"-cascader-input")]:{textAlign:"start",border:0,boxShadow:"none"}}}},[T]:{width:"100%",marginBottom:0,textAlign:"inherit","&:focus":{zIndex:1,borderInlineEndWidth:1},"&:hover":{zIndex:1,borderInlineEndWidth:1,["".concat(T,"-search-with-button &")]:{zIndex:0}}},["> ".concat(T,":first-child, ").concat(T,"-group-addon:first-child")]:{borderStartEndRadius:0,borderEndEndRadius:0,["".concat(e,"-select ").concat(e,"-select-selector")]:{borderStartEndRadius:0,borderEndEndRadius:0}},["> ".concat(T,"-affix-wrapper")]:{["&:not(:first-child) ".concat(T)]:{borderStartStartRadius:0,borderEndStartRadius:0},["&:not(:last-child) ".concat(T)]:{borderStartEndRadius:0,borderEndEndRadius:0}},["> ".concat(T,":last-child, ").concat(T,"-group-addon:last-child")]:{borderStartStartRadius:0,borderEndStartRadius:0,["".concat(e,"-select ").concat(e,"-select-selector")]:{borderStartStartRadius:0,borderEndStartRadius:0}},["".concat(T,"-affix-wrapper")]:{"&:not(:last-child)":{borderStartEndRadius:0,borderEndEndRadius:0,["".concat(T,"-search &")]:{borderStartStartRadius:E.borderRadius,borderEndStartRadius:E.borderRadius}},["&:not(:first-child), ".concat(T,"-search &:not(:first-child)")]:{borderStartStartRadius:0,borderEndStartRadius:0}},["&".concat(T,"-group-compact")]:Object.assign(Object.assign({display:"block"},(0,A.t6)()),{["".concat(T,"-group-addon, ").concat(T,"-group-wrap, > ").concat(T)]:{"&:not(:first-child):not(:last-child)":{borderInlineEndWidth:E.lineWidth,"&:hover, &:focus":{zIndex:1}}},"& > *":{display:"inline-flex",float:"none",verticalAlign:"top",borderRadius:0},["\n        & > ".concat(T,"-affix-wrapper,\n        & > ").concat(T,"-number-affix-wrapper,\n        & > ").concat(e,"-picker-range\n      ")]:{display:"inline-flex"},"& > *:not(:last-child)":{marginInlineEnd:E.calc(E.lineWidth).mul(-1).equal(),borderInlineEndWidth:E.lineWidth},[T]:{float:"none"},["& > ".concat(e,"-select > ").concat(e,"-select-selector,\n      & > ").concat(e,"-select-auto-complete ").concat(T,",\n      & > ").concat(e,"-cascader-picker ").concat(T,",\n      & > ").concat(T,"-group-wrapper ").concat(T)]:{borderInlineEndWidth:E.lineWidth,borderRadius:0,"&:hover, &:focus":{zIndex:1}},["& > ".concat(e,"-select-focused")]:{zIndex:1},["& > ".concat(e,"-select > ").concat(e,"-select-arrow")]:{zIndex:1},["& > *:first-child,\n      & > ".concat(e,"-select:first-child > ").concat(e,"-select-selector,\n      & > ").concat(e,"-select-auto-complete:first-child ").concat(T,",\n      & > ").concat(e,"-cascader-picker:first-child ").concat(T)]:{borderStartStartRadius:E.borderRadius,borderEndStartRadius:E.borderRadius},["& > *:last-child,\n      & > ".concat(e,"-select:last-child > ").concat(e,"-select-selector,\n      & > ").concat(e,"-cascader-picker:last-child ").concat(T,",\n      & > ").concat(e,"-cascader-picker-focused:last-child ").concat(T)]:{borderInlineEndWidth:E.lineWidth,borderStartEndRadius:E.borderRadius,borderEndEndRadius:E.borderRadius},["& > ".concat(e,"-select-auto-complete ").concat(T)]:{verticalAlign:"top"},["".concat(T,"-group-wrapper + ").concat(T,"-group-wrapper")]:{marginInlineStart:E.calc(E.lineWidth).mul(-1).equal(),["".concat(T,"-affix-wrapper")]:{borderRadius:0}},["".concat(T,"-group-wrapper:not(:last-child)")]:{["&".concat(T,"-search > ").concat(T,"-group")]:{["& > ".concat(T,"-group-addon > ").concat(T,"-search-button")]:{borderRadius:0},["& > ".concat(T)]:{borderStartStartRadius:E.borderRadius,borderStartEndRadius:0,borderEndEndRadius:0,borderEndStartRadius:E.borderRadius}}}})}},L=(0,S.OF)(["Input","Shared"],E=>{let T=(0,O.oX)(E,(0,I.C)(E));return[(E=>{let{componentCls:T,controlHeightSM:e,lineWidth:R,calc:t}=E,S=t(e).sub(t(R).mul(2)).sub(16).div(2).equal();return{[T]:Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},(0,A.dF)(E)),o(E)),(0,N.Eb)(E)),(0,N.sA)(E)),(0,N.lB)(E)),(0,N.aP)(E)),{'&[type="color"]':{height:E.controlHeight,["&".concat(T,"-lg")]:{height:E.controlHeightLG},["&".concat(T,"-sm")]:{height:e,paddingTop:S,paddingBottom:S}},'&[type="search"]::-webkit-search-cancel-button, &[type="search"]::-webkit-search-decoration':{appearance:"none"}})}})(T),(E=>{let{componentCls:T,inputAffixPadding:e,colorTextDescription:A,motionDurationSlow:t,colorIcon:S,colorIconHover:O,iconCls:I}=E,N="".concat(T,"-affix-wrapper"),r="".concat(T,"-affix-wrapper-disabled");return{[N]:Object.assign(Object.assign(Object.assign(Object.assign({},o(E)),{display:"inline-flex",["&:not(".concat(T,"-disabled):hover")]:{zIndex:1,["".concat(T,"-search-with-button &")]:{zIndex:0}},"&-focused, &:focus":{zIndex:1},["> input".concat(T)]:{padding:0},["> input".concat(T,", > textarea").concat(T)]:{fontSize:"inherit",border:"none",borderRadius:0,outline:"none",background:"transparent",color:"inherit","&::-ms-reveal":{display:"none"},"&:focus":{boxShadow:"none !important"}},"&::before":{display:"inline-block",width:0,visibility:"hidden",content:'"\\a0"'},[T]:{"&-prefix, &-suffix":{display:"flex",flex:"none",alignItems:"center","> *:not(:last-child)":{marginInlineEnd:E.paddingXS}},"&-show-count-suffix":{color:A,direction:"ltr"},"&-show-count-has-suffix":{marginInlineEnd:E.paddingXXS},"&-prefix":{marginInlineEnd:e},"&-suffix":{marginInlineStart:e}}}),(E=>{let{componentCls:T}=E;return{["".concat(T,"-clear-icon")]:{margin:0,padding:0,lineHeight:0,color:E.colorTextQuaternary,fontSize:E.fontSizeIcon,verticalAlign:-1,cursor:"pointer",transition:"color ".concat(E.motionDurationSlow),border:"none",outline:"none",backgroundColor:"transparent","&:hover":{color:E.colorIcon},"&:active":{color:E.colorText},"&-hidden":{visibility:"hidden"},"&-has-suffix":{margin:"0 ".concat((0,R.zA)(E.inputAffixPadding))}}}})(E)),{["".concat(I).concat(T,"-password-icon")]:{color:S,cursor:"pointer",transition:"all ".concat(t),"&:hover":{color:O}}}),["".concat(T,"-underlined")]:{borderRadius:0},[r]:{["".concat(I).concat(T,"-password-icon")]:{color:S,cursor:"not-allowed","&:hover":{color:S}}}}})(T)]},I.b,{resetFont:!1}),a=(0,S.OF)(["Input","Component"],E=>{let T=(0,O.oX)(E,(0,I.C)(E));return[(E=>{let{componentCls:T,borderRadiusLG:e,borderRadiusSM:R}=E;return{["".concat(T,"-group")]:Object.assign(Object.assign(Object.assign({},(0,A.dF)(E)),C(E)),{"&-rtl":{direction:"rtl"},"&-wrapper":Object.assign(Object.assign(Object.assign({display:"inline-block",width:"100%",textAlign:"start",verticalAlign:"top","&-rtl":{direction:"rtl"},"&-lg":{["".concat(T,"-group-addon")]:{borderRadius:e,fontSize:E.inputFontSizeLG}},"&-sm":{["".concat(T,"-group-addon")]:{borderRadius:R}}},(0,N.nm)(E)),(0,N.Vy)(E)),{["&:not(".concat(T,"-compact-first-item):not(").concat(T,"-compact-last-item)").concat(T,"-compact-item")]:{["".concat(T,", ").concat(T,"-group-addon")]:{borderRadius:0}},["&:not(".concat(T,"-compact-last-item)").concat(T,"-compact-first-item")]:{["".concat(T,", ").concat(T,"-group-addon")]:{borderStartEndRadius:0,borderEndEndRadius:0}},["&:not(".concat(T,"-compact-first-item)").concat(T,"-compact-last-item")]:{["".concat(T,", ").concat(T,"-group-addon")]:{borderStartStartRadius:0,borderEndStartRadius:0}},["&:not(".concat(T,"-compact-last-item)").concat(T,"-compact-item")]:{["".concat(T,"-affix-wrapper")]:{borderStartEndRadius:0,borderEndEndRadius:0}},["&:not(".concat(T,"-compact-first-item)").concat(T,"-compact-item")]:{["".concat(T,"-affix-wrapper")]:{borderStartStartRadius:0,borderEndStartRadius:0}}})})}})(T),(E=>{let{componentCls:T,antCls:e}=E,R="".concat(T,"-search");return{[R]:{[T]:{"&:hover, &:focus":{["+ ".concat(T,"-group-addon ").concat(R,"-button:not(").concat(e,"-btn-color-primary):not(").concat(e,"-btn-variant-text)")]:{borderInlineStartColor:E.colorPrimaryHover}}},["".concat(T,"-affix-wrapper")]:{height:E.controlHeight,borderRadius:0},["".concat(T,"-lg")]:{lineHeight:E.calc(E.lineHeightLG).sub(2e-4).equal()},["> ".concat(T,"-group")]:{["> ".concat(T,"-group-addon:last-child")]:{insetInlineStart:-1,padding:0,border:0,["".concat(R,"-button")]:{marginInlineEnd:-1,borderStartStartRadius:0,borderEndStartRadius:0,boxShadow:"none"},["".concat(R,"-button:not(").concat(e,"-btn-color-primary)")]:{color:E.colorTextDescription,"&:hover":{color:E.colorPrimaryHover},"&:active":{color:E.colorPrimaryActive},["&".concat(e,"-btn-loading::before")]:{inset:0}}}},["".concat(R,"-button")]:{height:E.controlHeight,"&:hover, &:focus":{zIndex:1}},"&-large":{["".concat(T,"-affix-wrapper, ").concat(R,"-button")]:{height:E.controlHeightLG}},"&-small":{["".concat(T,"-affix-wrapper, ").concat(R,"-button")]:{height:E.controlHeightSM}},"&-rtl":{direction:"rtl"},["&".concat(T,"-compact-item")]:{["&:not(".concat(T,"-compact-last-item)")]:{["".concat(T,"-group-addon")]:{["".concat(T,"-search-button")]:{marginInlineEnd:E.calc(E.lineWidth).mul(-1).equal(),borderRadius:0}}},["&:not(".concat(T,"-compact-first-item)")]:{["".concat(T,",").concat(T,"-affix-wrapper")]:{borderRadius:0}},["> ".concat(T,"-group-addon ").concat(T,"-search-button,\n        > ").concat(T,",\n        ").concat(T,"-affix-wrapper")]:{"&:hover, &:focus, &:active":{zIndex:2}},["> ".concat(T,"-affix-wrapper-focused")]:{zIndex:2}}}}})(T),(E=>{let{componentCls:T}=E;return{["".concat(T,"-out-of-range")]:{["&, & input, & textarea, ".concat(T,"-show-count-suffix, ").concat(T,"-data-count")]:{color:E.colorError}}}})(T),(0,t.G)(T)]},I.b,{resetFont:!1})},35271:(E,T,e)=>{"use strict";e.d(T,{Eb:()=>I,Vy:()=>a,aP:()=>P,eT:()=>t,lB:()=>n,nI:()=>S,nm:()=>r,sA:()=>C});var R=e(85573),A=e(61388);let t=E=>({color:E.colorTextDisabled,backgroundColor:E.colorBgContainerDisabled,borderColor:E.colorBorder,boxShadow:"none",cursor:"not-allowed",opacity:1,"input[disabled], textarea[disabled]":{cursor:"not-allowed"},"&:hover:not([disabled])":Object.assign({},(E=>({borderColor:E.hoverBorderColor,backgroundColor:E.hoverBg}))((0,A.oX)(E,{hoverBorderColor:E.colorBorder,hoverBg:E.colorBgContainerDisabled})))}),S=(E,T)=>({background:E.colorBgContainer,borderWidth:E.lineWidth,borderStyle:E.lineType,borderColor:T.borderColor,"&:hover":{borderColor:T.hoverBorderColor,backgroundColor:E.hoverBg},"&:focus, &:focus-within":{borderColor:T.activeBorderColor,boxShadow:T.activeShadow,outline:0,backgroundColor:E.activeBg}}),O=(E,T)=>({["&".concat(E.componentCls,"-status-").concat(T.status,":not(").concat(E.componentCls,"-disabled)")]:Object.assign(Object.assign({},S(E,T)),{["".concat(E.componentCls,"-prefix, ").concat(E.componentCls,"-suffix")]:{color:T.affixColor}}),["&".concat(E.componentCls,"-status-").concat(T.status).concat(E.componentCls,"-disabled")]:{borderColor:T.borderColor}}),I=(E,T)=>({"&-outlined":Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},S(E,{borderColor:E.colorBorder,hoverBorderColor:E.hoverBorderColor,activeBorderColor:E.activeBorderColor,activeShadow:E.activeShadow})),{["&".concat(E.componentCls,"-disabled, &[disabled]")]:Object.assign({},t(E))}),O(E,{status:"error",borderColor:E.colorError,hoverBorderColor:E.colorErrorBorderHover,activeBorderColor:E.colorError,activeShadow:E.errorActiveShadow,affixColor:E.colorError})),O(E,{status:"warning",borderColor:E.colorWarning,hoverBorderColor:E.colorWarningBorderHover,activeBorderColor:E.colorWarning,activeShadow:E.warningActiveShadow,affixColor:E.colorWarning})),T)}),N=(E,T)=>({["&".concat(E.componentCls,"-group-wrapper-status-").concat(T.status)]:{["".concat(E.componentCls,"-group-addon")]:{borderColor:T.addonBorderColor,color:T.addonColor}}}),r=E=>({"&-outlined":Object.assign(Object.assign(Object.assign({["".concat(E.componentCls,"-group")]:{"&-addon":{background:E.addonBg,border:"".concat((0,R.zA)(E.lineWidth)," ").concat(E.lineType," ").concat(E.colorBorder)},"&-addon:first-child":{borderInlineEnd:0},"&-addon:last-child":{borderInlineStart:0}}},N(E,{status:"error",addonBorderColor:E.colorError,addonColor:E.colorErrorText})),N(E,{status:"warning",addonBorderColor:E.colorWarning,addonColor:E.colorWarningText})),{["&".concat(E.componentCls,"-group-wrapper-disabled")]:{["".concat(E.componentCls,"-group-addon")]:Object.assign({},t(E))}})}),n=(E,T)=>{let{componentCls:e}=E;return{"&-borderless":Object.assign({background:"transparent",border:"none","&:focus, &:focus-within":{outline:"none"},["&".concat(e,"-disabled, &[disabled]")]:{color:E.colorTextDisabled,cursor:"not-allowed"},["&".concat(e,"-status-error")]:{"&, & input, & textarea":{color:E.colorError}},["&".concat(e,"-status-warning")]:{"&, & input, & textarea":{color:E.colorWarning}}},T)}},s=(E,T)=>{var e;return{background:T.bg,borderWidth:E.lineWidth,borderStyle:E.lineType,borderColor:"transparent","input&, & input, textarea&, & textarea":{color:null!=(e=null==T?void 0:T.inputColor)?e:"unset"},"&:hover":{background:T.hoverBg},"&:focus, &:focus-within":{outline:0,borderColor:T.activeBorderColor,backgroundColor:E.activeBg}}},o=(E,T)=>({["&".concat(E.componentCls,"-status-").concat(T.status,":not(").concat(E.componentCls,"-disabled)")]:Object.assign(Object.assign({},s(E,T)),{["".concat(E.componentCls,"-prefix, ").concat(E.componentCls,"-suffix")]:{color:T.affixColor}})}),C=(E,T)=>({"&-filled":Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},s(E,{bg:E.colorFillTertiary,hoverBg:E.colorFillSecondary,activeBorderColor:E.activeBorderColor})),{["&".concat(E.componentCls,"-disabled, &[disabled]")]:Object.assign({},t(E))}),o(E,{status:"error",bg:E.colorErrorBg,hoverBg:E.colorErrorBgHover,activeBorderColor:E.colorError,inputColor:E.colorErrorText,affixColor:E.colorError})),o(E,{status:"warning",bg:E.colorWarningBg,hoverBg:E.colorWarningBgHover,activeBorderColor:E.colorWarning,inputColor:E.colorWarningText,affixColor:E.colorWarning})),T)}),L=(E,T)=>({["&".concat(E.componentCls,"-group-wrapper-status-").concat(T.status)]:{["".concat(E.componentCls,"-group-addon")]:{background:T.addonBg,color:T.addonColor}}}),a=E=>({"&-filled":Object.assign(Object.assign(Object.assign({["".concat(E.componentCls,"-group-addon")]:{background:E.colorFillTertiary,"&:last-child":{position:"static"}}},L(E,{status:"error",addonBg:E.colorErrorBg,addonColor:E.colorErrorText})),L(E,{status:"warning",addonBg:E.colorWarningBg,addonColor:E.colorWarningText})),{["&".concat(E.componentCls,"-group-wrapper-disabled")]:{["".concat(E.componentCls,"-group")]:{"&-addon":{background:E.colorFillTertiary,color:E.colorTextDisabled},"&-addon:first-child":{borderInlineStart:"".concat((0,R.zA)(E.lineWidth)," ").concat(E.lineType," ").concat(E.colorBorder),borderTop:"".concat((0,R.zA)(E.lineWidth)," ").concat(E.lineType," ").concat(E.colorBorder),borderBottom:"".concat((0,R.zA)(E.lineWidth)," ").concat(E.lineType," ").concat(E.colorBorder)},"&-addon:last-child":{borderInlineEnd:"".concat((0,R.zA)(E.lineWidth)," ").concat(E.lineType," ").concat(E.colorBorder),borderTop:"".concat((0,R.zA)(E.lineWidth)," ").concat(E.lineType," ").concat(E.colorBorder),borderBottom:"".concat((0,R.zA)(E.lineWidth)," ").concat(E.lineType," ").concat(E.colorBorder)}}}})}),_=(E,T)=>({background:E.colorBgContainer,borderWidth:"".concat((0,R.zA)(E.lineWidth)," 0"),borderStyle:"".concat(E.lineType," none"),borderColor:"transparent transparent ".concat(T.borderColor," transparent"),borderRadius:0,"&:hover":{borderColor:"transparent transparent ".concat(T.borderColor," transparent"),backgroundColor:E.hoverBg},"&:focus, &:focus-within":{borderColor:"transparent transparent ".concat(T.activeBorderColor," transparent"),outline:0,backgroundColor:E.activeBg}}),i=(E,T)=>({["&".concat(E.componentCls,"-status-").concat(T.status,":not(").concat(E.componentCls,"-disabled)")]:Object.assign(Object.assign({},_(E,T)),{["".concat(E.componentCls,"-prefix, ").concat(E.componentCls,"-suffix")]:{color:T.affixColor}}),["&".concat(E.componentCls,"-status-").concat(T.status).concat(E.componentCls,"-disabled")]:{borderColor:"transparent transparent ".concat(T.borderColor," transparent")}}),P=(E,T)=>({"&-underlined":Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({},_(E,{borderColor:E.colorBorder,hoverBorderColor:E.hoverBorderColor,activeBorderColor:E.activeBorderColor,activeShadow:E.activeShadow})),{["&".concat(E.componentCls,"-disabled, &[disabled]")]:{color:E.colorTextDisabled,boxShadow:"none",cursor:"not-allowed","&:hover":{borderColor:"transparent transparent ".concat(E.colorBorder," transparent")}},"input[disabled], textarea[disabled]":{cursor:"not-allowed"}}),i(E,{status:"error",borderColor:E.colorError,hoverBorderColor:E.colorErrorBorderHover,activeBorderColor:E.colorError,activeShadow:E.errorActiveShadow,affixColor:E.colorError})),i(E,{status:"warning",borderColor:E.colorWarning,hoverBorderColor:E.colorWarningBorderHover,activeBorderColor:E.colorWarning,activeShadow:E.warningActiveShadow,affixColor:E.colorWarning})),T)})},35695:(E,T,e)=>{"use strict";var R=e(18999);e.o(R,"useParams")&&e.d(T,{useParams:function(){return R.useParams}}),e.o(R,"usePathname")&&e.d(T,{usePathname:function(){return R.usePathname}}),e.o(R,"useRouter")&&e.d(T,{useRouter:function(){return R.useRouter}}),e.o(R,"useSearchParams")&&e.d(T,{useSearchParams:function(){return R.useSearchParams}})},36713:E=>{var T=/\s/;E.exports=function(E){for(var e=E.length;e--&&T.test(E.charAt(e)););return e}},36815:(E,T,e)=>{var R=e(4217),A=e(67460),t=e(70771),S=0/0,O=/^[-+]0x[0-9a-f]+$/i,I=/^0b[01]+$/i,N=/^0o[0-7]+$/i,r=parseInt;E.exports=function(E){if("number"==typeof E)return E;if(t(E))return S;if(A(E)){var T="function"==typeof E.valueOf?E.valueOf():E;E=A(T)?T+"":T}if("string"!=typeof E)return 0===E?E:+E;E=R(E);var e=I.test(E);return e||N.test(E)?r(E.slice(2),e?2:8):O.test(E)?S:+E}},37497:(E,T,e)=>{"use strict";e.d(T,{A:()=>v});var R,A=e(12115),t=e(29300),S=e.n(t),O=e(79630),I=e(40419),N=e(27061),r=e(85757),n=e(21858),s=e(20235),o=e(11261),C=e(52032),L=e(43717),a=e(48804),_=e(86608),i=e(32417),P=e(49172),D=e(16962),l=["letter-spacing","line-height","padding-top","padding-bottom","font-family","font-weight","font-size","font-variant","text-rendering","text-transform","width","text-indent","padding-left","padding-right","border-width","box-sizing","word-break","white-space"],c={},U=["prefixCls","defaultValue","value","autoSize","onResize","className","style","disabled","onChange","onInternalAutoSize"],M=A.forwardRef(function(E,T){var e=E.prefixCls,t=E.defaultValue,r=E.value,o=E.autoSize,C=E.onResize,L=E.className,M=E.style,u=E.disabled,p=E.onChange,G=(E.onInternalAutoSize,(0,s.A)(E,U)),d=(0,a.A)(t,{value:r,postState:function(E){return null!=E?E:""}}),f=(0,n.A)(d,2),B=f[0],H=f[1],h=A.useRef();A.useImperativeHandle(T,function(){return{textArea:h.current}});var F=A.useMemo(function(){return o&&"object"===(0,_.A)(o)?[o.minRows,o.maxRows]:[]},[o]),Y=(0,n.A)(F,2),m=Y[0],y=Y[1],V=!!o,b=A.useState(2),W=(0,n.A)(b,2),g=W[0],X=W[1],v=A.useState(),x=(0,n.A)(v,2),K=x[0],w=x[1],J=function(){X(0)};(0,P.A)(function(){V&&J()},[r,m,y,V]),(0,P.A)(function(){if(0===g)X(1);else if(1===g){var E=function(E){var T,e=arguments.length>1&&void 0!==arguments[1]&&arguments[1],A=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;R||((R=document.createElement("textarea")).setAttribute("tab-index","-1"),R.setAttribute("aria-hidden","true"),R.setAttribute("name","hiddenTextarea"),document.body.appendChild(R)),E.getAttribute("wrap")?R.setAttribute("wrap",E.getAttribute("wrap")):R.removeAttribute("wrap");var S=function(E){var T=arguments.length>1&&void 0!==arguments[1]&&arguments[1],e=E.getAttribute("id")||E.getAttribute("data-reactid")||E.getAttribute("name");if(T&&c[e])return c[e];var R=window.getComputedStyle(E),A=R.getPropertyValue("box-sizing")||R.getPropertyValue("-moz-box-sizing")||R.getPropertyValue("-webkit-box-sizing"),t=parseFloat(R.getPropertyValue("padding-bottom"))+parseFloat(R.getPropertyValue("padding-top")),S=parseFloat(R.getPropertyValue("border-bottom-width"))+parseFloat(R.getPropertyValue("border-top-width")),O={sizingStyle:l.map(function(E){return"".concat(E,":").concat(R.getPropertyValue(E))}).join(";"),paddingSize:t,borderSize:S,boxSizing:A};return T&&e&&(c[e]=O),O}(E,e),O=S.paddingSize,I=S.borderSize,N=S.boxSizing,r=S.sizingStyle;R.setAttribute("style","".concat(r,";").concat("\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important;\n  pointer-events: none !important;\n")),R.value=E.value||E.placeholder||"";var n=void 0,s=void 0,o=R.scrollHeight;if("border-box"===N?o+=I:"content-box"===N&&(o-=O),null!==A||null!==t){R.value=" ";var C=R.scrollHeight-O;null!==A&&(n=C*A,"border-box"===N&&(n=n+O+I),o=Math.max(n,o)),null!==t&&(s=C*t,"border-box"===N&&(s=s+O+I),T=o>s?"":"hidden",o=Math.min(s,o))}var L={height:o,overflowY:T,resize:"none"};return n&&(L.minHeight=n),s&&(L.maxHeight=s),L}(h.current,!1,m,y);X(2),w(E)}},[g]);var $=A.useRef(),Q=function(){D.A.cancel($.current)};A.useEffect(function(){return Q},[]);var k=(0,N.A)((0,N.A)({},M),V?K:null);return(0===g||1===g)&&(k.overflowY="hidden",k.overflowX="hidden"),A.createElement(i.A,{onResize:function(E){2===g&&(null==C||C(E),o&&(Q(),$.current=(0,D.A)(function(){J()})))},disabled:!(o||C)},A.createElement("textarea",(0,O.A)({},G,{ref:h,style:k,className:S()(e,L,(0,I.A)({},"".concat(e,"-disabled"),u)),disabled:u,value:B,onChange:function(E){H(E.target.value),null==p||p(E)}})))}),u=["defaultValue","value","onFocus","onBlur","onChange","allowClear","maxLength","onCompositionStart","onCompositionEnd","suffix","prefixCls","showCount","count","className","style","disabled","hidden","classNames","styles","onResize","onClear","onPressEnter","readOnly","autoSize","onKeyDown"],p=A.forwardRef(function(E,T){var e,R,t=E.defaultValue,_=E.value,i=E.onFocus,P=E.onBlur,D=E.onChange,l=E.allowClear,c=E.maxLength,U=E.onCompositionStart,p=E.onCompositionEnd,G=E.suffix,d=E.prefixCls,f=void 0===d?"rc-textarea":d,B=E.showCount,H=E.count,h=E.className,F=E.style,Y=E.disabled,m=E.hidden,y=E.classNames,V=E.styles,b=E.onResize,W=E.onClear,g=E.onPressEnter,X=E.readOnly,v=E.autoSize,x=E.onKeyDown,K=(0,s.A)(E,u),w=(0,a.A)(t,{value:_,defaultValue:t}),J=(0,n.A)(w,2),$=J[0],Q=J[1],k=null==$?"":String($),Z=A.useState(!1),j=(0,n.A)(Z,2),q=j[0],z=j[1],EE=A.useRef(!1),ET=A.useState(null),Ee=(0,n.A)(ET,2),ER=Ee[0],EA=Ee[1],Et=(0,A.useRef)(null),ES=(0,A.useRef)(null),EO=function(){var E;return null==(E=ES.current)?void 0:E.textArea},EI=function(){EO().focus()};(0,A.useImperativeHandle)(T,function(){var E;return{resizableTextArea:ES.current,focus:EI,blur:function(){EO().blur()},nativeElement:(null==(E=Et.current)?void 0:E.nativeElement)||EO()}}),(0,A.useEffect)(function(){z(function(E){return!Y&&E})},[Y]);var EN=A.useState(null),Er=(0,n.A)(EN,2),En=Er[0],Es=Er[1];A.useEffect(function(){if(En){var E;(E=EO()).setSelectionRange.apply(E,(0,r.A)(En))}},[En]);var Eo=(0,C.A)(H,B),EC=null!=(e=Eo.max)?e:c,EL=Number(EC)>0,Ea=Eo.strategy(k),E_=!!EC&&Ea>EC,Ei=function(E,T){var e=T;!EE.current&&Eo.exceedFormatter&&Eo.max&&Eo.strategy(T)>Eo.max&&(e=Eo.exceedFormatter(T,{max:Eo.max}),T!==e&&Es([EO().selectionStart||0,EO().selectionEnd||0])),Q(e),(0,L.gS)(E.currentTarget,E,D,e)},EP=G;Eo.show&&(R=Eo.showFormatter?Eo.showFormatter({value:k,count:Ea,maxLength:EC}):"".concat(Ea).concat(EL?" / ".concat(EC):""),EP=A.createElement(A.Fragment,null,EP,A.createElement("span",{className:S()("".concat(f,"-data-count"),null==y?void 0:y.count),style:null==V?void 0:V.count},R)));var ED=!v&&!B&&!l;return A.createElement(o.a,{ref:Et,value:k,allowClear:l,handleReset:function(E){Q(""),EI(),(0,L.gS)(EO(),E,D)},suffix:EP,prefixCls:f,classNames:(0,N.A)((0,N.A)({},y),{},{affixWrapper:S()(null==y?void 0:y.affixWrapper,(0,I.A)((0,I.A)({},"".concat(f,"-show-count"),B),"".concat(f,"-textarea-allow-clear"),l))}),disabled:Y,focused:q,className:S()(h,E_&&"".concat(f,"-out-of-range")),style:(0,N.A)((0,N.A)({},F),ER&&!ED?{height:"auto"}:{}),dataAttrs:{affixWrapper:{"data-count":"string"==typeof R?R:void 0}},hidden:m,readOnly:X,onClear:W},A.createElement(M,(0,O.A)({},K,{autoSize:v,maxLength:c,onKeyDown:function(E){"Enter"===E.key&&g&&g(E),null==x||x(E)},onChange:function(E){Ei(E,E.target.value)},onFocus:function(E){z(!0),null==i||i(E)},onBlur:function(E){z(!1),null==P||P(E)},onCompositionStart:function(E){EE.current=!0,null==U||U(E)},onCompositionEnd:function(E){EE.current=!1,Ei(E,E.currentTarget.value),null==p||p(E)},className:S()(null==y?void 0:y.textarea),style:(0,N.A)((0,N.A)({},null==V?void 0:V.textarea),{},{resize:null==F?void 0:F.resize}),disabled:Y,prefixCls:f,onResize:function(E){var T;null==b||b(E),null!=(T=EO())&&T.style.height&&EA(!0)},ref:ES,readOnly:X})))}),G=e(53014),d=e(79007),f=e(15982),B=e(44494),H=e(68151),h=e(9836),F=e(63568),Y=e(63893),m=e(18574),y=e(30611),V=e(45431),b=e(61388),W=e(19086);let g=(0,V.OF)(["Input","TextArea"],E=>(E=>{let{componentCls:T,paddingLG:e}=E,R="".concat(T,"-textarea");return{["textarea".concat(T)]:{maxWidth:"100%",height:"auto",minHeight:E.controlHeight,lineHeight:E.lineHeight,verticalAlign:"bottom",transition:"all ".concat(E.motionDurationSlow),resize:"vertical",["&".concat(T,"-mouse-active")]:{transition:"all ".concat(E.motionDurationSlow,", height 0s, width 0s")}},["".concat(T,"-textarea-affix-wrapper-resize-dirty")]:{width:"auto"},[R]:{position:"relative","&-show-count":{["".concat(T,"-data-count")]:{position:"absolute",bottom:E.calc(E.fontSize).mul(E.lineHeight).mul(-1).equal(),insetInlineEnd:0,color:E.colorTextDescription,whiteSpace:"nowrap",pointerEvents:"none"}},["\n        &-allow-clear > ".concat(T,",\n        &-affix-wrapper").concat(R,"-has-feedback ").concat(T,"\n      ")]:{paddingInlineEnd:e},["&-affix-wrapper".concat(T,"-affix-wrapper")]:{padding:0,["> textarea".concat(T)]:{fontSize:"inherit",border:"none",outline:"none",background:"transparent",minHeight:E.calc(E.controlHeight).sub(E.calc(E.lineWidth).mul(2)).equal(),"&:focus":{boxShadow:"none !important"}},["".concat(T,"-suffix")]:{margin:0,"> *:not(:last-child)":{marginInline:0},["".concat(T,"-clear-icon")]:{position:"absolute",insetInlineEnd:E.paddingInline,insetBlockStart:E.paddingXS},["".concat(R,"-suffix")]:{position:"absolute",top:0,insetInlineEnd:E.paddingInline,bottom:0,zIndex:1,display:"inline-flex",alignItems:"center",margin:"auto",pointerEvents:"none"}}},["&-affix-wrapper".concat(T,"-affix-wrapper-rtl")]:{["".concat(T,"-suffix")]:{["".concat(T,"-data-count")]:{direction:"ltr",insetInlineStart:0}}},["&-affix-wrapper".concat(T,"-affix-wrapper-sm")]:{["".concat(T,"-suffix")]:{["".concat(T,"-clear-icon")]:{insetInlineEnd:E.paddingInlineSM}}}}}})((0,b.oX)(E,(0,W.C)(E))),W.b,{resetFont:!1});var X=function(E,T){var e={};for(var R in E)Object.prototype.hasOwnProperty.call(E,R)&&0>T.indexOf(R)&&(e[R]=E[R]);if(null!=E&&"function"==typeof Object.getOwnPropertySymbols)for(var A=0,R=Object.getOwnPropertySymbols(E);A<R.length;A++)0>T.indexOf(R[A])&&Object.prototype.propertyIsEnumerable.call(E,R[A])&&(e[R[A]]=E[R[A]]);return e};let v=(0,A.forwardRef)((E,T)=>{var e;let{prefixCls:R,bordered:t=!0,size:O,disabled:I,status:N,allowClear:r,classNames:n,rootClassName:s,className:o,style:C,styles:a,variant:_,showCount:i,onMouseDown:P,onResize:D}=E,l=X(E,["prefixCls","bordered","size","disabled","status","allowClear","classNames","rootClassName","className","style","styles","variant","showCount","onMouseDown","onResize"]),{getPrefixCls:c,direction:U,allowClear:M,autoComplete:u,className:V,style:b,classNames:W,styles:v}=(0,f.TP)("textArea"),x=A.useContext(B.A),{status:K,hasFeedback:w,feedbackIcon:J}=A.useContext(F.$W),$=(0,d.v)(K,N),Q=A.useRef(null);A.useImperativeHandle(T,()=>{var E;return{resizableTextArea:null==(E=Q.current)?void 0:E.resizableTextArea,focus:E=>{var T,e;(0,L.F4)(null==(e=null==(T=Q.current)?void 0:T.resizableTextArea)?void 0:e.textArea,E)},blur:()=>{var E;return null==(E=Q.current)?void 0:E.blur()}}});let k=c("input",R),Z=(0,H.A)(k),[j,q,z]=(0,y.MG)(k,s),[EE]=g(k,Z),{compactSize:ET,compactItemClassnames:Ee}=(0,m.RQ)(k,U),ER=(0,h.A)(E=>{var T;return null!=(T=null!=O?O:ET)?T:E}),[EA,Et]=(0,Y.A)("textArea",_,t),ES=(0,G.A)(null!=r?r:M),[EO,EI]=A.useState(!1),[EN,Er]=A.useState(!1);return j(EE(A.createElement(p,Object.assign({autoComplete:u},l,{style:Object.assign(Object.assign({},b),C),styles:Object.assign(Object.assign({},v),a),disabled:null!=I?I:x,allowClear:ES,className:S()(z,Z,o,s,Ee,V,EN&&"".concat(k,"-textarea-affix-wrapper-resize-dirty")),classNames:Object.assign(Object.assign(Object.assign({},n),W),{textarea:S()({["".concat(k,"-sm")]:"small"===ER,["".concat(k,"-lg")]:"large"===ER},q,null==n?void 0:n.textarea,W.textarea,EO&&"".concat(k,"-mouse-active")),variant:S()({["".concat(k,"-").concat(EA)]:Et},(0,d.L)(k,$)),affixWrapper:S()("".concat(k,"-textarea-affix-wrapper"),{["".concat(k,"-affix-wrapper-rtl")]:"rtl"===U,["".concat(k,"-affix-wrapper-sm")]:"small"===ER,["".concat(k,"-affix-wrapper-lg")]:"large"===ER,["".concat(k,"-textarea-show-count")]:i||(null==(e=E.count)?void 0:e.show)},q)}),prefixCls:k,suffix:w&&A.createElement("span",{className:"".concat(k,"-textarea-suffix")},J),showCount:i,ref:Q,onResize:E=>{var T,e;if(null==D||D(E),EO&&"function"==typeof getComputedStyle){let E=null==(e=null==(T=Q.current)?void 0:T.nativeElement)?void 0:e.querySelector("textarea");E&&"both"===getComputedStyle(E).resize&&Er(!0)}},onMouseDown:E=>{EI(!0),null==P||P(E);let T=()=>{EI(!1),document.removeEventListener("mouseup",T)};document.addEventListener("mouseup",T)}}))))})},39249:(E,T,e)=>{"use strict";e.d(T,{C6:()=>A,Cl:()=>t,Ju:()=>N,Tt:()=>S,YH:()=>I,aN:()=>n,fX:()=>s,gn:()=>o,sH:()=>O,zs:()=>r});var R=function(E,T){return(R=Object.setPrototypeOf||({__proto__:[]})instanceof Array&&function(E,T){E.__proto__=T}||function(E,T){for(var e in T)Object.prototype.hasOwnProperty.call(T,e)&&(E[e]=T[e])})(E,T)};function A(E,T){if("function"!=typeof T&&null!==T)throw TypeError("Class extends value "+String(T)+" is not a constructor or null");function e(){this.constructor=E}R(E,T),E.prototype=null===T?Object.create(T):(e.prototype=T.prototype,new e)}var t=function(){return(t=Object.assign||function(E){for(var T,e=1,R=arguments.length;e<R;e++)for(var A in T=arguments[e])Object.prototype.hasOwnProperty.call(T,A)&&(E[A]=T[A]);return E}).apply(this,arguments)};function S(E,T){var e={};for(var R in E)Object.prototype.hasOwnProperty.call(E,R)&&0>T.indexOf(R)&&(e[R]=E[R]);if(null!=E&&"function"==typeof Object.getOwnPropertySymbols)for(var A=0,R=Object.getOwnPropertySymbols(E);A<R.length;A++)0>T.indexOf(R[A])&&Object.prototype.propertyIsEnumerable.call(E,R[A])&&(e[R[A]]=E[R[A]]);return e}function O(E,T,e,R){return new(e||(e=Promise))(function(A,t){function S(E){try{I(R.next(E))}catch(E){t(E)}}function O(E){try{I(R.throw(E))}catch(E){t(E)}}function I(E){var T;E.done?A(E.value):((T=E.value)instanceof e?T:new e(function(E){E(T)})).then(S,O)}I((R=R.apply(E,T||[])).next())})}function I(E,T){var e,R,A,t={label:0,sent:function(){if(1&A[0])throw A[1];return A[1]},trys:[],ops:[]},S=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return S.next=O(0),S.throw=O(1),S.return=O(2),"function"==typeof Symbol&&(S[Symbol.iterator]=function(){return this}),S;function O(O){return function(I){var N=[O,I];if(e)throw TypeError("Generator is already executing.");for(;S&&(S=0,N[0]&&(t=0)),t;)try{if(e=1,R&&(A=2&N[0]?R.return:N[0]?R.throw||((A=R.return)&&A.call(R),0):R.next)&&!(A=A.call(R,N[1])).done)return A;switch(R=0,A&&(N=[2&N[0],A.value]),N[0]){case 0:case 1:A=N;break;case 4:return t.label++,{value:N[1],done:!1};case 5:t.label++,R=N[1],N=[0];continue;case 7:N=t.ops.pop(),t.trys.pop();continue;default:if(!(A=(A=t.trys).length>0&&A[A.length-1])&&(6===N[0]||2===N[0])){t=0;continue}if(3===N[0]&&(!A||N[1]>A[0]&&N[1]<A[3])){t.label=N[1];break}if(6===N[0]&&t.label<A[1]){t.label=A[1],A=N;break}if(A&&t.label<A[2]){t.label=A[2],t.ops.push(N);break}A[2]&&t.ops.pop(),t.trys.pop();continue}N=T.call(E,t)}catch(E){N=[6,E],R=0}finally{e=A=0}if(5&N[0])throw N[1];return{value:N[0]?N[1]:void 0,done:!0}}}}function N(E){var T="function"==typeof Symbol&&Symbol.iterator,e=T&&E[T],R=0;if(e)return e.call(E);if(E&&"number"==typeof E.length)return{next:function(){return E&&R>=E.length&&(E=void 0),{value:E&&E[R++],done:!E}}};throw TypeError(T?"Object is not iterable.":"Symbol.iterator is not defined.")}function r(E,T){var e="function"==typeof Symbol&&E[Symbol.iterator];if(!e)return E;var R,A,t=e.call(E),S=[];try{for(;(void 0===T||T-- >0)&&!(R=t.next()).done;)S.push(R.value)}catch(E){A={error:E}}finally{try{R&&!R.done&&(e=t.return)&&e.call(t)}finally{if(A)throw A.error}}return S}function n(){for(var E=0,T=0,e=arguments.length;T<e;T++)E+=arguments[T].length;for(var R=Array(E),A=0,T=0;T<e;T++)for(var t=arguments[T],S=0,O=t.length;S<O;S++,A++)R[A]=t[S];return R}function s(E,T,e){if(e||2==arguments.length)for(var R,A=0,t=T.length;A<t;A++)!R&&A in T||(R||(R=Array.prototype.slice.call(T,0,A)),R[A]=T[A]);return E.concat(R||Array.prototype.slice.call(T))}Object.create;function o(E,T,e,R){if("a"===e&&!R)throw TypeError("Private accessor was defined without a getter");if("function"==typeof T?E!==T||!R:!T.has(E))throw TypeError("Cannot read private member from an object whose class did not declare it");return"m"===e?R:"a"===e?R.call(E):R?R.value:T.get(E)}Object.create,"function"==typeof SuppressedError&&SuppressedError},43717:(E,T,e)=>{"use strict";function R(E){return!!(E.addonBefore||E.addonAfter)}function A(E){return!!(E.prefix||E.suffix||E.allowClear)}function t(E,T,e){var R=T.cloneNode(!0),A=Object.create(E,{target:{value:R},currentTarget:{value:R}});return R.value=e,"number"==typeof T.selectionStart&&"number"==typeof T.selectionEnd&&(R.selectionStart=T.selectionStart,R.selectionEnd=T.selectionEnd),R.setSelectionRange=function(){T.setSelectionRange.apply(T,arguments)},A}function S(E,T,e,R){if(e){var A=T;if("click"===T.type)return void e(A=t(T,E,""));if("file"!==E.type&&void 0!==R)return void e(A=t(T,E,R));e(A)}}function O(E,T){if(E){E.focus(T);var e=(T||{}).cursor;if(e){var R=E.value.length;switch(e){case"start":E.setSelectionRange(0,0);break;case"end":E.setSelectionRange(R,R);break;default:E.setSelectionRange(0,R)}}}}e.d(T,{F4:()=>O,OL:()=>A,bk:()=>R,gS:()=>S})},45964:(E,T,e)=>{var R=e(67460),A=e(76685),t=e(36815),S=Math.max,O=Math.min;E.exports=function(E,T,e){var I,N,r,n,s,o,C=0,L=!1,a=!1,_=!0;if("function"!=typeof E)throw TypeError("Expected a function");function i(T){var e=I,R=N;return I=N=void 0,C=T,n=E.apply(R,e)}function P(E){var e=E-o,R=E-C;return void 0===o||e>=T||e<0||a&&R>=r}function D(){var E,e,R,t=A();if(P(t))return l(t);s=setTimeout(D,(E=t-o,e=t-C,R=T-E,a?O(R,r-e):R))}function l(E){return(s=void 0,_&&I)?i(E):(I=N=void 0,n)}function c(){var E,e=A(),R=P(e);if(I=arguments,N=this,o=e,R){if(void 0===s)return C=E=o,s=setTimeout(D,T),L?i(E):n;if(a)return clearTimeout(s),s=setTimeout(D,T),i(o)}return void 0===s&&(s=setTimeout(D,T)),n}return T=t(T)||0,R(e)&&(L=!!e.leading,r=(a="maxWait"in e)?S(t(e.maxWait)||0,T):r,_="trailing"in e?!!e.trailing:_),c.cancel=function(){void 0!==s&&clearTimeout(s),C=0,I=o=N=s=void 0},c.flush=function(){return void 0===s?n:l(A())},c}},48611:E=>{E.exports=function(E){return null!=E&&"object"==typeof E}},49641:E=>{!function(){var T={675:function(E,T){"use strict";T.byteLength=function(E){var T=I(E),e=T[0],R=T[1];return(e+R)*3/4-R},T.toByteArray=function(E){var T,e,t=I(E),S=t[0],O=t[1],N=new A((S+O)*3/4-O),r=0,n=O>0?S-4:S;for(e=0;e<n;e+=4)T=R[E.charCodeAt(e)]<<18|R[E.charCodeAt(e+1)]<<12|R[E.charCodeAt(e+2)]<<6|R[E.charCodeAt(e+3)],N[r++]=T>>16&255,N[r++]=T>>8&255,N[r++]=255&T;return 2===O&&(T=R[E.charCodeAt(e)]<<2|R[E.charCodeAt(e+1)]>>4,N[r++]=255&T),1===O&&(T=R[E.charCodeAt(e)]<<10|R[E.charCodeAt(e+1)]<<4|R[E.charCodeAt(e+2)]>>2,N[r++]=T>>8&255,N[r++]=255&T),N},T.fromByteArray=function(E){for(var T,R=E.length,A=R%3,t=[],S=0,O=R-A;S<O;S+=16383)t.push(function(E,T,R){for(var A,t=[],S=T;S<R;S+=3)A=(E[S]<<16&0xff0000)+(E[S+1]<<8&65280)+(255&E[S+2]),t.push(e[A>>18&63]+e[A>>12&63]+e[A>>6&63]+e[63&A]);return t.join("")}(E,S,S+16383>O?O:S+16383));return 1===A?t.push(e[(T=E[R-1])>>2]+e[T<<4&63]+"=="):2===A&&t.push(e[(T=(E[R-2]<<8)+E[R-1])>>10]+e[T>>4&63]+e[T<<2&63]+"="),t.join("")};for(var e=[],R=[],A="undefined"!=typeof Uint8Array?Uint8Array:Array,t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",S=0,O=t.length;S<O;++S)e[S]=t[S],R[t.charCodeAt(S)]=S;function I(E){var T=E.length;if(T%4>0)throw Error("Invalid string. Length must be a multiple of 4");var e=E.indexOf("=");-1===e&&(e=T);var R=e===T?0:4-e%4;return[e,R]}R[45]=62,R[95]=63},72:function(E,T,e){"use strict";var R=e(675),A=e(783),t="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;function S(E){if(E>0x7fffffff)throw RangeError('The value "'+E+'" is invalid for option "size"');var T=new Uint8Array(E);return Object.setPrototypeOf(T,O.prototype),T}function O(E,T,e){if("number"==typeof E){if("string"==typeof T)throw TypeError('The "string" argument must be of type string. Received type number');return r(E)}return I(E,T,e)}function I(E,T,e){if("string"==typeof E){var R=E,A=T;if(("string"!=typeof A||""===A)&&(A="utf8"),!O.isEncoding(A))throw TypeError("Unknown encoding: "+A);var t=0|o(R,A),I=S(t),N=I.write(R,A);return N!==t&&(I=I.slice(0,N)),I}if(ArrayBuffer.isView(E))return n(E);if(null==E)throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof E);if(f(E,ArrayBuffer)||E&&f(E.buffer,ArrayBuffer)||"undefined"!=typeof SharedArrayBuffer&&(f(E,SharedArrayBuffer)||E&&f(E.buffer,SharedArrayBuffer)))return function(E,T,e){var R;if(T<0||E.byteLength<T)throw RangeError('"offset" is outside of buffer bounds');if(E.byteLength<T+(e||0))throw RangeError('"length" is outside of buffer bounds');return Object.setPrototypeOf(R=void 0===T&&void 0===e?new Uint8Array(E):void 0===e?new Uint8Array(E,T):new Uint8Array(E,T,e),O.prototype),R}(E,T,e);if("number"==typeof E)throw TypeError('The "value" argument must not be of type number. Received type number');var r=E.valueOf&&E.valueOf();if(null!=r&&r!==E)return O.from(r,T,e);var C=function(E){if(O.isBuffer(E)){var T=0|s(E.length),e=S(T);return 0===e.length||E.copy(e,0,0,T),e}return void 0!==E.length?"number"!=typeof E.length||function(E){return E!=E}(E.length)?S(0):n(E):"Buffer"===E.type&&Array.isArray(E.data)?n(E.data):void 0}(E);if(C)return C;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof E[Symbol.toPrimitive])return O.from(E[Symbol.toPrimitive]("string"),T,e);throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof E)}function N(E){if("number"!=typeof E)throw TypeError('"size" argument must be of type number');if(E<0)throw RangeError('The value "'+E+'" is invalid for option "size"')}function r(E){return N(E),S(E<0?0:0|s(E))}function n(E){for(var T=E.length<0?0:0|s(E.length),e=S(T),R=0;R<T;R+=1)e[R]=255&E[R];return e}T.Buffer=O,T.SlowBuffer=function(E){return+E!=E&&(E=0),O.alloc(+E)},T.INSPECT_MAX_BYTES=50,T.kMaxLength=0x7fffffff,O.TYPED_ARRAY_SUPPORT=function(){try{var E=new Uint8Array(1),T={foo:function(){return 42}};return Object.setPrototypeOf(T,Uint8Array.prototype),Object.setPrototypeOf(E,T),42===E.foo()}catch(E){return!1}}(),O.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(O.prototype,"parent",{enumerable:!0,get:function(){if(O.isBuffer(this))return this.buffer}}),Object.defineProperty(O.prototype,"offset",{enumerable:!0,get:function(){if(O.isBuffer(this))return this.byteOffset}}),O.poolSize=8192,O.from=function(E,T,e){return I(E,T,e)},Object.setPrototypeOf(O.prototype,Uint8Array.prototype),Object.setPrototypeOf(O,Uint8Array),O.alloc=function(E,T,e){return(N(E),E<=0)?S(E):void 0!==T?"string"==typeof e?S(E).fill(T,e):S(E).fill(T):S(E)},O.allocUnsafe=function(E){return r(E)},O.allocUnsafeSlow=function(E){return r(E)};function s(E){if(E>=0x7fffffff)throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");return 0|E}function o(E,T){if(O.isBuffer(E))return E.length;if(ArrayBuffer.isView(E)||f(E,ArrayBuffer))return E.byteLength;if("string"!=typeof E)throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof E);var e=E.length,R=arguments.length>2&&!0===arguments[2];if(!R&&0===e)return 0;for(var A=!1;;)switch(T){case"ascii":case"latin1":case"binary":return e;case"utf8":case"utf-8":return u(E).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*e;case"hex":return e>>>1;case"base64":return G(E).length;default:if(A)return R?-1:u(E).length;T=(""+T).toLowerCase(),A=!0}}function C(E,T,e){var A,t,S,O=!1;if((void 0===T||T<0)&&(T=0),T>this.length||((void 0===e||e>this.length)&&(e=this.length),e<=0||(e>>>=0)<=(T>>>=0)))return"";for(E||(E="utf8");;)switch(E){case"hex":return function(E,T,e){var R=E.length;(!T||T<0)&&(T=0),(!e||e<0||e>R)&&(e=R);for(var A="",t=T;t<e;++t)A+=B[E[t]];return A}(this,T,e);case"utf8":case"utf-8":return i(this,T,e);case"ascii":return function(E,T,e){var R="";e=Math.min(E.length,e);for(var A=T;A<e;++A)R+=String.fromCharCode(127&E[A]);return R}(this,T,e);case"latin1":case"binary":return function(E,T,e){var R="";e=Math.min(E.length,e);for(var A=T;A<e;++A)R+=String.fromCharCode(E[A]);return R}(this,T,e);case"base64":return A=this,t=T,S=e,0===t&&S===A.length?R.fromByteArray(A):R.fromByteArray(A.slice(t,S));case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return function(E,T,e){for(var R=E.slice(T,e),A="",t=0;t<R.length;t+=2)A+=String.fromCharCode(R[t]+256*R[t+1]);return A}(this,T,e);default:if(O)throw TypeError("Unknown encoding: "+E);E=(E+"").toLowerCase(),O=!0}}function L(E,T,e){var R=E[T];E[T]=E[e],E[e]=R}function a(E,T,e,R,A){var t;if(0===E.length)return -1;if("string"==typeof e?(R=e,e=0):e>0x7fffffff?e=0x7fffffff:e<-0x80000000&&(e=-0x80000000),(t=e*=1)!=t&&(e=A?0:E.length-1),e<0&&(e=E.length+e),e>=E.length)if(A)return -1;else e=E.length-1;else if(e<0)if(!A)return -1;else e=0;if("string"==typeof T&&(T=O.from(T,R)),O.isBuffer(T))return 0===T.length?-1:_(E,T,e,R,A);if("number"==typeof T){if(T&=255,"function"==typeof Uint8Array.prototype.indexOf)if(A)return Uint8Array.prototype.indexOf.call(E,T,e);else return Uint8Array.prototype.lastIndexOf.call(E,T,e);return _(E,[T],e,R,A)}throw TypeError("val must be string, number or Buffer")}function _(E,T,e,R,A){var t,S=1,O=E.length,I=T.length;if(void 0!==R&&("ucs2"===(R=String(R).toLowerCase())||"ucs-2"===R||"utf16le"===R||"utf-16le"===R)){if(E.length<2||T.length<2)return -1;S=2,O/=2,I/=2,e/=2}function N(E,T){return 1===S?E[T]:E.readUInt16BE(T*S)}if(A){var r=-1;for(t=e;t<O;t++)if(N(E,t)===N(T,-1===r?0:t-r)){if(-1===r&&(r=t),t-r+1===I)return r*S}else -1!==r&&(t-=t-r),r=-1}else for(e+I>O&&(e=O-I),t=e;t>=0;t--){for(var n=!0,s=0;s<I;s++)if(N(E,t+s)!==N(T,s)){n=!1;break}if(n)return t}return -1}O.isBuffer=function(E){return null!=E&&!0===E._isBuffer&&E!==O.prototype},O.compare=function(E,T){if(f(E,Uint8Array)&&(E=O.from(E,E.offset,E.byteLength)),f(T,Uint8Array)&&(T=O.from(T,T.offset,T.byteLength)),!O.isBuffer(E)||!O.isBuffer(T))throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(E===T)return 0;for(var e=E.length,R=T.length,A=0,t=Math.min(e,R);A<t;++A)if(E[A]!==T[A]){e=E[A],R=T[A];break}return e<R?-1:+(R<e)},O.isEncoding=function(E){switch(String(E).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},O.concat=function(E,T){if(!Array.isArray(E))throw TypeError('"list" argument must be an Array of Buffers');if(0===E.length)return O.alloc(0);if(void 0===T)for(e=0,T=0;e<E.length;++e)T+=E[e].length;var e,R=O.allocUnsafe(T),A=0;for(e=0;e<E.length;++e){var t=E[e];if(f(t,Uint8Array)&&(t=O.from(t)),!O.isBuffer(t))throw TypeError('"list" argument must be an Array of Buffers');t.copy(R,A),A+=t.length}return R},O.byteLength=o,O.prototype._isBuffer=!0,O.prototype.swap16=function(){var E=this.length;if(E%2!=0)throw RangeError("Buffer size must be a multiple of 16-bits");for(var T=0;T<E;T+=2)L(this,T,T+1);return this},O.prototype.swap32=function(){var E=this.length;if(E%4!=0)throw RangeError("Buffer size must be a multiple of 32-bits");for(var T=0;T<E;T+=4)L(this,T,T+3),L(this,T+1,T+2);return this},O.prototype.swap64=function(){var E=this.length;if(E%8!=0)throw RangeError("Buffer size must be a multiple of 64-bits");for(var T=0;T<E;T+=8)L(this,T,T+7),L(this,T+1,T+6),L(this,T+2,T+5),L(this,T+3,T+4);return this},O.prototype.toString=function(){var E=this.length;return 0===E?"":0==arguments.length?i(this,0,E):C.apply(this,arguments)},O.prototype.toLocaleString=O.prototype.toString,O.prototype.equals=function(E){if(!O.isBuffer(E))throw TypeError("Argument must be a Buffer");return this===E||0===O.compare(this,E)},O.prototype.inspect=function(){var E="",e=T.INSPECT_MAX_BYTES;return E=this.toString("hex",0,e).replace(/(.{2})/g,"$1 ").trim(),this.length>e&&(E+=" ... "),"<Buffer "+E+">"},t&&(O.prototype[t]=O.prototype.inspect),O.prototype.compare=function(E,T,e,R,A){if(f(E,Uint8Array)&&(E=O.from(E,E.offset,E.byteLength)),!O.isBuffer(E))throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof E);if(void 0===T&&(T=0),void 0===e&&(e=E?E.length:0),void 0===R&&(R=0),void 0===A&&(A=this.length),T<0||e>E.length||R<0||A>this.length)throw RangeError("out of range index");if(R>=A&&T>=e)return 0;if(R>=A)return -1;if(T>=e)return 1;if(T>>>=0,e>>>=0,R>>>=0,A>>>=0,this===E)return 0;for(var t=A-R,S=e-T,I=Math.min(t,S),N=this.slice(R,A),r=E.slice(T,e),n=0;n<I;++n)if(N[n]!==r[n]){t=N[n],S=r[n];break}return t<S?-1:+(S<t)},O.prototype.includes=function(E,T,e){return -1!==this.indexOf(E,T,e)},O.prototype.indexOf=function(E,T,e){return a(this,E,T,e,!0)},O.prototype.lastIndexOf=function(E,T,e){return a(this,E,T,e,!1)};function i(E,T,e){e=Math.min(E.length,e);for(var R=[],A=T;A<e;){var t,S,O,I,N=E[A],r=null,n=N>239?4:N>223?3:N>191?2:1;if(A+n<=e)switch(n){case 1:N<128&&(r=N);break;case 2:(192&(t=E[A+1]))==128&&(I=(31&N)<<6|63&t)>127&&(r=I);break;case 3:t=E[A+1],S=E[A+2],(192&t)==128&&(192&S)==128&&(I=(15&N)<<12|(63&t)<<6|63&S)>2047&&(I<55296||I>57343)&&(r=I);break;case 4:t=E[A+1],S=E[A+2],O=E[A+3],(192&t)==128&&(192&S)==128&&(192&O)==128&&(I=(15&N)<<18|(63&t)<<12|(63&S)<<6|63&O)>65535&&I<1114112&&(r=I)}null===r?(r=65533,n=1):r>65535&&(r-=65536,R.push(r>>>10&1023|55296),r=56320|1023&r),R.push(r),A+=n}var s=R,o=s.length;if(o<=4096)return String.fromCharCode.apply(String,s);for(var C="",L=0;L<o;)C+=String.fromCharCode.apply(String,s.slice(L,L+=4096));return C}function P(E,T,e){if(E%1!=0||E<0)throw RangeError("offset is not uint");if(E+T>e)throw RangeError("Trying to access beyond buffer length")}function D(E,T,e,R,A,t){if(!O.isBuffer(E))throw TypeError('"buffer" argument must be a Buffer instance');if(T>A||T<t)throw RangeError('"value" argument is out of bounds');if(e+R>E.length)throw RangeError("Index out of range")}function l(E,T,e,R,A,t){if(e+R>E.length||e<0)throw RangeError("Index out of range")}function c(E,T,e,R,t){return T*=1,e>>>=0,t||l(E,T,e,4,34028234663852886e22,-34028234663852886e22),A.write(E,T,e,R,23,4),e+4}function U(E,T,e,R,t){return T*=1,e>>>=0,t||l(E,T,e,8,17976931348623157e292,-17976931348623157e292),A.write(E,T,e,R,52,8),e+8}O.prototype.write=function(E,T,e,R){if(void 0===T)R="utf8",e=this.length,T=0;else if(void 0===e&&"string"==typeof T)R=T,e=this.length,T=0;else if(isFinite(T))T>>>=0,isFinite(e)?(e>>>=0,void 0===R&&(R="utf8")):(R=e,e=void 0);else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var A,t,S,O,I,N,r,n,s=this.length-T;if((void 0===e||e>s)&&(e=s),E.length>0&&(e<0||T<0)||T>this.length)throw RangeError("Attempt to write outside buffer bounds");R||(R="utf8");for(var o=!1;;)switch(R){case"hex":return function(E,T,e,R){e=Number(e)||0;var A=E.length-e;R?(R=Number(R))>A&&(R=A):R=A;var t=T.length;R>t/2&&(R=t/2);for(var S=0;S<R;++S){var O,I=parseInt(T.substr(2*S,2),16);if((O=I)!=O)break;E[e+S]=I}return S}(this,E,T,e);case"utf8":case"utf-8":return A=T,t=e,d(u(E,this.length-A),this,A,t);case"ascii":return S=T,O=e,d(p(E),this,S,O);case"latin1":case"binary":return function(E,T,e,R){return d(p(T),E,e,R)}(this,E,T,e);case"base64":return I=T,N=e,d(G(E),this,I,N);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return r=T,n=e,d(function(E,T){for(var e,R,A=[],t=0;t<E.length&&!((T-=2)<0);++t)R=(e=E.charCodeAt(t))>>8,A.push(e%256),A.push(R);return A}(E,this.length-r),this,r,n);default:if(o)throw TypeError("Unknown encoding: "+R);R=(""+R).toLowerCase(),o=!0}},O.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},O.prototype.slice=function(E,T){var e=this.length;E=~~E,T=void 0===T?e:~~T,E<0?(E+=e)<0&&(E=0):E>e&&(E=e),T<0?(T+=e)<0&&(T=0):T>e&&(T=e),T<E&&(T=E);var R=this.subarray(E,T);return Object.setPrototypeOf(R,O.prototype),R},O.prototype.readUIntLE=function(E,T,e){E>>>=0,T>>>=0,e||P(E,T,this.length);for(var R=this[E],A=1,t=0;++t<T&&(A*=256);)R+=this[E+t]*A;return R},O.prototype.readUIntBE=function(E,T,e){E>>>=0,T>>>=0,e||P(E,T,this.length);for(var R=this[E+--T],A=1;T>0&&(A*=256);)R+=this[E+--T]*A;return R},O.prototype.readUInt8=function(E,T){return E>>>=0,T||P(E,1,this.length),this[E]},O.prototype.readUInt16LE=function(E,T){return E>>>=0,T||P(E,2,this.length),this[E]|this[E+1]<<8},O.prototype.readUInt16BE=function(E,T){return E>>>=0,T||P(E,2,this.length),this[E]<<8|this[E+1]},O.prototype.readUInt32LE=function(E,T){return E>>>=0,T||P(E,4,this.length),(this[E]|this[E+1]<<8|this[E+2]<<16)+0x1000000*this[E+3]},O.prototype.readUInt32BE=function(E,T){return E>>>=0,T||P(E,4,this.length),0x1000000*this[E]+(this[E+1]<<16|this[E+2]<<8|this[E+3])},O.prototype.readIntLE=function(E,T,e){E>>>=0,T>>>=0,e||P(E,T,this.length);for(var R=this[E],A=1,t=0;++t<T&&(A*=256);)R+=this[E+t]*A;return R>=(A*=128)&&(R-=Math.pow(2,8*T)),R},O.prototype.readIntBE=function(E,T,e){E>>>=0,T>>>=0,e||P(E,T,this.length);for(var R=T,A=1,t=this[E+--R];R>0&&(A*=256);)t+=this[E+--R]*A;return t>=(A*=128)&&(t-=Math.pow(2,8*T)),t},O.prototype.readInt8=function(E,T){return(E>>>=0,T||P(E,1,this.length),128&this[E])?-((255-this[E]+1)*1):this[E]},O.prototype.readInt16LE=function(E,T){E>>>=0,T||P(E,2,this.length);var e=this[E]|this[E+1]<<8;return 32768&e?0xffff0000|e:e},O.prototype.readInt16BE=function(E,T){E>>>=0,T||P(E,2,this.length);var e=this[E+1]|this[E]<<8;return 32768&e?0xffff0000|e:e},O.prototype.readInt32LE=function(E,T){return E>>>=0,T||P(E,4,this.length),this[E]|this[E+1]<<8|this[E+2]<<16|this[E+3]<<24},O.prototype.readInt32BE=function(E,T){return E>>>=0,T||P(E,4,this.length),this[E]<<24|this[E+1]<<16|this[E+2]<<8|this[E+3]},O.prototype.readFloatLE=function(E,T){return E>>>=0,T||P(E,4,this.length),A.read(this,E,!0,23,4)},O.prototype.readFloatBE=function(E,T){return E>>>=0,T||P(E,4,this.length),A.read(this,E,!1,23,4)},O.prototype.readDoubleLE=function(E,T){return E>>>=0,T||P(E,8,this.length),A.read(this,E,!0,52,8)},O.prototype.readDoubleBE=function(E,T){return E>>>=0,T||P(E,8,this.length),A.read(this,E,!1,52,8)},O.prototype.writeUIntLE=function(E,T,e,R){if(E*=1,T>>>=0,e>>>=0,!R){var A=Math.pow(2,8*e)-1;D(this,E,T,e,A,0)}var t=1,S=0;for(this[T]=255&E;++S<e&&(t*=256);)this[T+S]=E/t&255;return T+e},O.prototype.writeUIntBE=function(E,T,e,R){if(E*=1,T>>>=0,e>>>=0,!R){var A=Math.pow(2,8*e)-1;D(this,E,T,e,A,0)}var t=e-1,S=1;for(this[T+t]=255&E;--t>=0&&(S*=256);)this[T+t]=E/S&255;return T+e},O.prototype.writeUInt8=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,1,255,0),this[T]=255&E,T+1},O.prototype.writeUInt16LE=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,2,65535,0),this[T]=255&E,this[T+1]=E>>>8,T+2},O.prototype.writeUInt16BE=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,2,65535,0),this[T]=E>>>8,this[T+1]=255&E,T+2},O.prototype.writeUInt32LE=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,4,0xffffffff,0),this[T+3]=E>>>24,this[T+2]=E>>>16,this[T+1]=E>>>8,this[T]=255&E,T+4},O.prototype.writeUInt32BE=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,4,0xffffffff,0),this[T]=E>>>24,this[T+1]=E>>>16,this[T+2]=E>>>8,this[T+3]=255&E,T+4},O.prototype.writeIntLE=function(E,T,e,R){if(E*=1,T>>>=0,!R){var A=Math.pow(2,8*e-1);D(this,E,T,e,A-1,-A)}var t=0,S=1,O=0;for(this[T]=255&E;++t<e&&(S*=256);)E<0&&0===O&&0!==this[T+t-1]&&(O=1),this[T+t]=(E/S|0)-O&255;return T+e},O.prototype.writeIntBE=function(E,T,e,R){if(E*=1,T>>>=0,!R){var A=Math.pow(2,8*e-1);D(this,E,T,e,A-1,-A)}var t=e-1,S=1,O=0;for(this[T+t]=255&E;--t>=0&&(S*=256);)E<0&&0===O&&0!==this[T+t+1]&&(O=1),this[T+t]=(E/S|0)-O&255;return T+e},O.prototype.writeInt8=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,1,127,-128),E<0&&(E=255+E+1),this[T]=255&E,T+1},O.prototype.writeInt16LE=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,2,32767,-32768),this[T]=255&E,this[T+1]=E>>>8,T+2},O.prototype.writeInt16BE=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,2,32767,-32768),this[T]=E>>>8,this[T+1]=255&E,T+2},O.prototype.writeInt32LE=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,4,0x7fffffff,-0x80000000),this[T]=255&E,this[T+1]=E>>>8,this[T+2]=E>>>16,this[T+3]=E>>>24,T+4},O.prototype.writeInt32BE=function(E,T,e){return E*=1,T>>>=0,e||D(this,E,T,4,0x7fffffff,-0x80000000),E<0&&(E=0xffffffff+E+1),this[T]=E>>>24,this[T+1]=E>>>16,this[T+2]=E>>>8,this[T+3]=255&E,T+4},O.prototype.writeFloatLE=function(E,T,e){return c(this,E,T,!0,e)},O.prototype.writeFloatBE=function(E,T,e){return c(this,E,T,!1,e)},O.prototype.writeDoubleLE=function(E,T,e){return U(this,E,T,!0,e)},O.prototype.writeDoubleBE=function(E,T,e){return U(this,E,T,!1,e)},O.prototype.copy=function(E,T,e,R){if(!O.isBuffer(E))throw TypeError("argument should be a Buffer");if(e||(e=0),R||0===R||(R=this.length),T>=E.length&&(T=E.length),T||(T=0),R>0&&R<e&&(R=e),R===e||0===E.length||0===this.length)return 0;if(T<0)throw RangeError("targetStart out of bounds");if(e<0||e>=this.length)throw RangeError("Index out of range");if(R<0)throw RangeError("sourceEnd out of bounds");R>this.length&&(R=this.length),E.length-T<R-e&&(R=E.length-T+e);var A=R-e;if(this===E&&"function"==typeof Uint8Array.prototype.copyWithin)this.copyWithin(T,e,R);else if(this===E&&e<T&&T<R)for(var t=A-1;t>=0;--t)E[t+T]=this[t+e];else Uint8Array.prototype.set.call(E,this.subarray(e,R),T);return A},O.prototype.fill=function(E,T,e,R){if("string"==typeof E){if("string"==typeof T?(R=T,T=0,e=this.length):"string"==typeof e&&(R=e,e=this.length),void 0!==R&&"string"!=typeof R)throw TypeError("encoding must be a string");if("string"==typeof R&&!O.isEncoding(R))throw TypeError("Unknown encoding: "+R);if(1===E.length){var A,t=E.charCodeAt(0);("utf8"===R&&t<128||"latin1"===R)&&(E=t)}}else"number"==typeof E?E&=255:"boolean"==typeof E&&(E=Number(E));if(T<0||this.length<T||this.length<e)throw RangeError("Out of range index");if(e<=T)return this;if(T>>>=0,e=void 0===e?this.length:e>>>0,E||(E=0),"number"==typeof E)for(A=T;A<e;++A)this[A]=E;else{var S=O.isBuffer(E)?E:O.from(E,R),I=S.length;if(0===I)throw TypeError('The value "'+E+'" is invalid for argument "value"');for(A=0;A<e-T;++A)this[A+T]=S[A%I]}return this};var M=/[^+/0-9A-Za-z-_]/g;function u(E,T){T=T||1/0;for(var e,R=E.length,A=null,t=[],S=0;S<R;++S){if((e=E.charCodeAt(S))>55295&&e<57344){if(!A){if(e>56319||S+1===R){(T-=3)>-1&&t.push(239,191,189);continue}A=e;continue}if(e<56320){(T-=3)>-1&&t.push(239,191,189),A=e;continue}e=(A-55296<<10|e-56320)+65536}else A&&(T-=3)>-1&&t.push(239,191,189);if(A=null,e<128){if((T-=1)<0)break;t.push(e)}else if(e<2048){if((T-=2)<0)break;t.push(e>>6|192,63&e|128)}else if(e<65536){if((T-=3)<0)break;t.push(e>>12|224,e>>6&63|128,63&e|128)}else if(e<1114112){if((T-=4)<0)break;t.push(e>>18|240,e>>12&63|128,e>>6&63|128,63&e|128)}else throw Error("Invalid code point")}return t}function p(E){for(var T=[],e=0;e<E.length;++e)T.push(255&E.charCodeAt(e));return T}function G(E){return R.toByteArray(function(E){if((E=(E=E.split("=")[0]).trim().replace(M,"")).length<2)return"";for(;E.length%4!=0;)E+="=";return E}(E))}function d(E,T,e,R){for(var A=0;A<R&&!(A+e>=T.length)&&!(A>=E.length);++A)T[A+e]=E[A];return A}function f(E,T){return E instanceof T||null!=E&&null!=E.constructor&&null!=E.constructor.name&&E.constructor.name===T.name}var B=function(){for(var E="0123456789abcdef",T=Array(256),e=0;e<16;++e)for(var R=16*e,A=0;A<16;++A)T[R+A]=E[e]+E[A];return T}()},783:function(E,T){T.read=function(E,T,e,R,A){var t,S,O=8*A-R-1,I=(1<<O)-1,N=I>>1,r=-7,n=e?A-1:0,s=e?-1:1,o=E[T+n];for(n+=s,t=o&(1<<-r)-1,o>>=-r,r+=O;r>0;t=256*t+E[T+n],n+=s,r-=8);for(S=t&(1<<-r)-1,t>>=-r,r+=R;r>0;S=256*S+E[T+n],n+=s,r-=8);if(0===t)t=1-N;else{if(t===I)return S?NaN:1/0*(o?-1:1);S+=Math.pow(2,R),t-=N}return(o?-1:1)*S*Math.pow(2,t-R)},T.write=function(E,T,e,R,A,t){var S,O,I,N=8*t-A-1,r=(1<<N)-1,n=r>>1,s=5960464477539062e-23*(23===A),o=R?0:t-1,C=R?1:-1,L=+(T<0||0===T&&1/T<0);for(isNaN(T=Math.abs(T))||T===1/0?(O=+!!isNaN(T),S=r):(S=Math.floor(Math.log(T)/Math.LN2),T*(I=Math.pow(2,-S))<1&&(S--,I*=2),S+n>=1?T+=s/I:T+=s*Math.pow(2,1-n),T*I>=2&&(S++,I/=2),S+n>=r?(O=0,S=r):S+n>=1?(O=(T*I-1)*Math.pow(2,A),S+=n):(O=T*Math.pow(2,n-1)*Math.pow(2,A),S=0));A>=8;E[e+o]=255&O,o+=C,O/=256,A-=8);for(S=S<<A|O,N+=A;N>0;E[e+o]=255&S,o+=C,S/=256,N-=8);E[e+o-C]|=128*L}}},e={};function R(E){var A=e[E];if(void 0!==A)return A.exports;var t=e[E]={exports:{}},S=!0;try{T[E](t,t.exports,R),S=!1}finally{S&&delete e[E]}return t.exports}R.ab="//",E.exports=R(72)}()},52032:(E,T,e)=>{"use strict";e.d(T,{A:()=>I});var R=e(20235),A=e(27061),t=e(86608),S=e(12115),O=["show"];function I(E,T){return S.useMemo(function(){var e={};T&&(e.show="object"===(0,t.A)(T)&&T.formatter?T.formatter:!!T);var S=e=(0,A.A)((0,A.A)({},e),E),I=S.show,N=(0,R.A)(S,O);return(0,A.A)((0,A.A)({},N),{},{show:!!I,showFormatter:"function"==typeof I?I:void 0,strategy:N.strategy||function(E){return E.length}})},[E,T])}},53014:(E,T,e)=>{"use strict";e.d(T,{A:()=>t});var R=e(12115),A=e(51754);let t=E=>{let T;return"object"==typeof E&&(null==E?void 0:E.clearIcon)?T=E:E&&(T={clearIcon:R.createElement(A.A,null)}),T}},54099:(E,T,e)=>{"use strict";e.d(T,{A:()=>X});var R=e(39249),A=e(12115),t=e(80804),S=function(E,T){var e=T.manual,S=T.ready,O=void 0===S||S,I=T.defaultParams,N=void 0===I?[]:I,r=T.refreshDeps,n=T.refreshDepsAction,s=(0,A.useRef)(!1);return s.current=!1,(0,t.A)(function(){!e&&O&&(s.current=!0,E.run.apply(E,(0,R.fX)([],(0,R.zs)(N),!1)))},[O]),(0,t.A)(function(){!s.current&&(e||(s.current=!0,n?n():E.refresh()))},(0,R.fX)([],(0,R.zs)(void 0===r?[]:r),!1)),{onBefore:function(){if(!O)return{stopNow:!0}}}};S.onInit=function(E){var T=E.ready;return{loading:!E.manual&&(void 0===T||T)}};let O=function(E,T){if(E===T)return!0;for(var e=0;e<E.length;e++)if(!Object.is(E[e],T[e]))return!1;return!0},I=function(E,T){var e=(0,A.useRef)({deps:T,obj:void 0,initialized:!1}).current;return!1!==e.initialized&&O(e.deps,T)||(e.deps=T,e.obj=E(),e.initialized=!0),e.obj};var N=e(56406),r=new Map,n=function(E,T,e){var A=r.get(E);(null==A?void 0:A.timer)&&clearTimeout(A.timer);var t=void 0;T>-1&&(t=setTimeout(function(){r.delete(E)},T)),r.set(E,(0,R.Cl)((0,R.Cl)({},e),{timer:t}))},s=new Map,o=function(E,T){s.set(E,T),T.then(function(T){return s.delete(E),T}).catch(function(){s.delete(E)})},C={},L=function(E,T){C[E]&&C[E].forEach(function(E){return E(T)})},a=function(E,T){return C[E]||(C[E]=[]),C[E].push(T),function(){var e=C[E].indexOf(T);C[E].splice(e,1)}};let _=function(E,T){var e=T.cacheKey,t=T.cacheTime,S=void 0===t?3e5:t,O=T.staleTime,C=void 0===O?0:O,_=T.setCache,i=T.getCache,P=(0,A.useRef)(void 0),D=(0,A.useRef)(void 0),l=function(E,T){_?_(T):n(E,S,T),L(E,T.data)},c=function(E,T){return(void 0===T&&(T=[]),i)?i(T):r.get(E)};return(I(function(){if(e){var T=c(e);T&&Object.hasOwnProperty.call(T,"data")&&(E.state.data=T.data,E.state.params=T.params,(-1===C||Date.now()-T.time<=C)&&(E.state.loading=!1)),P.current=a(e,function(T){E.setState({data:T})})}},[]),(0,N.A)(function(){var E;null==(E=P.current)||E.call(P)}),e)?{onBefore:function(E){var T=c(e,E);return T&&Object.hasOwnProperty.call(T,"data")?-1===C||Date.now()-T.time<=C?{loading:!1,data:null==T?void 0:T.data,error:void 0,returnNow:!0}:{data:null==T?void 0:T.data,error:void 0}:{}},onRequest:function(E,T){var A=s.get(e);return A&&A!==D.current||(D.current=A=E.apply(void 0,(0,R.fX)([],(0,R.zs)(T),!1)),o(e,A)),{servicePromise:A}},onSuccess:function(T,R){var A;e&&(null==(A=P.current)||A.call(P),l(e,{data:T,params:R,time:Date.now()}),P.current=a(e,function(T){E.setState({data:T})}))},onMutate:function(T){var R;e&&(null==(R=P.current)||R.call(P),l(e,{data:T,params:E.state.params,time:Date.now()}),P.current=a(e,function(T){E.setState({data:T})}))}}:{}};var i=e(45964),P=e.n(i);let D=function(E,T){var e=T.debounceWait,t=T.debounceLeading,S=T.debounceTrailing,O=T.debounceMaxWait,I=(0,A.useRef)(void 0),N=(0,A.useMemo)(function(){var E={};return void 0!==t&&(E.leading=t),void 0!==S&&(E.trailing=S),void 0!==O&&(E.maxWait=O),E},[t,S,O]);return((0,A.useEffect)(function(){if(e){var T=E.runAsync.bind(E);return I.current=P()(function(E){E()},e,N),E.runAsync=function(){for(var E=[],e=0;e<arguments.length;e++)E[e]=arguments[e];return new Promise(function(e,A){var t;null==(t=I.current)||t.call(I,function(){T.apply(void 0,(0,R.fX)([],(0,R.zs)(E),!1)).then(e).catch(A)})})},function(){var e;null==(e=I.current)||e.cancel(),E.runAsync=T}}},[e,N]),e)?{onCancel:function(){var E;null==(E=I.current)||E.cancel()}}:{}},l=function(E,T){var e=T.loadingDelay,R=T.ready,t=(0,A.useRef)(void 0);if(!e)return{};var S=function(){t.current&&clearTimeout(t.current)};return{onBefore:function(){return S(),!1!==R&&(t.current=setTimeout(function(){E.setState({loading:!0})},e)),{loading:!1}},onFinally:function(){S()},onCancel:function(){S()}}};var c=!!("undefined"!=typeof window&&window.document&&window.document.createElement);function U(){return!c||"hidden"!==document.visibilityState}var M=new Set;c&&window.addEventListener("visibilitychange",function(){U()&&M.forEach(function(E){return E()})},!1);let u=function(E,T){var e=T.pollingInterval,R=T.pollingWhenHidden,S=void 0===R||R,O=T.pollingErrorRetryCount,I=void 0===O?-1:O,N=(0,A.useRef)(void 0),r=(0,A.useRef)(void 0),n=(0,A.useRef)(0),s=function(){var E;N.current&&clearTimeout(N.current),null==(E=r.current)||E.call(r)};return((0,t.A)(function(){e||s()},[e]),e)?{onBefore:function(){s()},onError:function(){n.current+=1},onSuccess:function(){n.current=0},onFinally:function(){-1===I||-1!==I&&n.current<=I?N.current=setTimeout(function(){if(S||U())E.refresh();else{var T;T=function(){E.refresh()},M.add(T),r.current=function(){M.has(T)&&M.delete(T)}}},e):n.current=0},onCancel:function(){s()}}:{}};var p=new Set;if(c){var G=function(){U()&&(!c||void 0===navigator.onLine||navigator.onLine)&&p.forEach(function(E){return E()})};window.addEventListener("visibilitychange",G,!1),window.addEventListener("focus",G,!1)}let d=function(E,T){var e=T.refreshOnWindowFocus,t=T.focusTimespan,S=void 0===t?5e3:t,O=(0,A.useRef)(void 0),I=function(){var E;null==(E=O.current)||E.call(O)};return(0,A.useEffect)(function(){if(e){var T,A,t,N=(T=E.refresh.bind(E),A=!1,function(){for(var E=[],e=0;e<arguments.length;e++)E[e]=arguments[e];A||(A=!0,T.apply(void 0,(0,R.fX)([],(0,R.zs)(E),!1)),setTimeout(function(){A=!1},S))});t=function(){N()},p.add(t),O.current=function(){p.has(t)&&p.delete(t)}}return function(){I()}},[e,S]),(0,N.A)(function(){I()}),{}},f=function(E,T){var e=T.retryInterval,R=T.retryCount,t=(0,A.useRef)(void 0),S=(0,A.useRef)(0),O=(0,A.useRef)(!1);return R?{onBefore:function(){O.current||(S.current=0),O.current=!1,t.current&&clearTimeout(t.current)},onSuccess:function(){S.current=0},onError:function(){S.current+=1,-1===R||S.current<=R?t.current=setTimeout(function(){O.current=!0,E.refresh()},null!=e?e:Math.min(1e3*Math.pow(2,S.current),3e4)):S.current=0},onCancel:function(){S.current=0,t.current&&clearTimeout(t.current)}}:{}};var B=e(91959),H=e.n(B);let h=function(E,T){var e=T.throttleWait,t=T.throttleLeading,S=T.throttleTrailing,O=(0,A.useRef)(void 0),I={};return(void 0!==t&&(I.leading=t),void 0!==S&&(I.trailing=S),(0,A.useEffect)(function(){if(e){var T=E.runAsync.bind(E);return O.current=H()(function(E){E()},e,I),E.runAsync=function(){for(var E=[],e=0;e<arguments.length;e++)E[e]=arguments[e];return new Promise(function(e,A){var t;null==(t=O.current)||t.call(O,function(){T.apply(void 0,(0,R.fX)([],(0,R.zs)(E),!1)).then(e).catch(A)})})},function(){var e;E.runAsync=T,null==(e=O.current)||e.cancel()}}},[e,t,S]),e)?{onCancel:function(){var E;null==(E=O.current)||E.cancel()}}:{}};var F=e(56795),Y=e(30114),m=e(4365);let y=function(E){m.A&&!(0,Y.Tn)(E)&&console.error("useMemoizedFn expected parameter is a function, got ".concat(typeof E));var T=(0,A.useRef)(E);T.current=(0,A.useMemo)(function(){return E},[E]);var e=(0,A.useRef)(void 0);return e.current||(e.current=function(){for(var E=[],e=0;e<arguments.length;e++)E[e]=arguments[e];return T.current.apply(this,E)}),e.current},V=function(E){m.A&&!(0,Y.Tn)(E)&&console.error('useMount: parameter `fn` expected to be a function, but got "'.concat(typeof E,'".')),(0,A.useEffect)(function(){var T=null==E?void 0:E();if(!T||"object"!=typeof T||"function"!=typeof T.then)return T},[])},b=function(){var E=(0,R.zs)((0,A.useState)({}),2)[1];return(0,A.useCallback)(function(){return E({})},[])};var W=function(){function E(E,T,e,A){void 0===A&&(A={}),this.serviceRef=E,this.options=T,this.subscribe=e,this.initState=A,this.count=0,this.state={loading:!1,params:void 0,data:void 0,error:void 0},this.state=(0,R.Cl)((0,R.Cl)((0,R.Cl)({},this.state),{loading:!T.manual}),A)}return E.prototype.setState=function(E){void 0===E&&(E={}),this.state=(0,R.Cl)((0,R.Cl)({},this.state),E),this.subscribe()},E.prototype.runPluginHandler=function(E){for(var T=[],e=1;e<arguments.length;e++)T[e-1]=arguments[e];var A=this.pluginImpls.map(function(e){var A;return null==(A=e[E])?void 0:A.call.apply(A,(0,R.fX)([e],(0,R.zs)(T),!1))}).filter(Boolean);return Object.assign.apply(Object,(0,R.fX)([{}],(0,R.zs)(A),!1))},E.prototype.runAsync=function(){for(var E=[],T=0;T<arguments.length;T++)E[T]=arguments[T];return(0,R.sH)(this,void 0,void 0,function(){var T,e,A,t,S,O,I,N,r,n,s,o,C,L,a,_,i,P,D,l,c;return(0,R.YH)(this,function(U){switch(U.label){case 0:if(this.count+=1,T=this.count,t=void 0!==(A=(e=this.runPluginHandler("onBefore",E)).stopNow)&&A,O=void 0!==(S=e.returnNow)&&S,I=(0,R.Tt)(e,["stopNow","returnNow"]),t)return[2,new Promise(function(){})];if(this.setState((0,R.Cl)({loading:!0,params:E},I)),O)return[2,Promise.resolve(I.data)];null==(C=(o=this.options).onBefore)||C.call(o,E),U.label=1;case 1:return U.trys.push([1,3,,4]),(N=this.runPluginHandler("onRequest",this.serviceRef.current,E).servicePromise)||(N=(s=this.serviceRef).current.apply(s,(0,R.fX)([],(0,R.zs)(E),!1))),[4,N];case 2:if(r=U.sent(),T!==this.count)return[2,new Promise(function(){})];return this.setState({data:r,error:void 0,loading:!1}),null==(a=(L=this.options).onSuccess)||a.call(L,r,E),this.runPluginHandler("onSuccess",r,E),null==(i=(_=this.options).onFinally)||i.call(_,E,r,void 0),T===this.count&&this.runPluginHandler("onFinally",E,r,void 0),[2,r];case 3:if(n=U.sent(),T!==this.count)return[2,new Promise(function(){})];throw this.setState({error:n,loading:!1}),null==(D=(P=this.options).onError)||D.call(P,n,E),this.runPluginHandler("onError",n,E),null==(c=(l=this.options).onFinally)||c.call(l,E,void 0,n),T===this.count&&this.runPluginHandler("onFinally",E,void 0,n),n;case 4:return[2]}})})},E.prototype.run=function(){for(var E=this,T=[],e=0;e<arguments.length;e++)T[e]=arguments[e];this.runAsync.apply(this,(0,R.fX)([],(0,R.zs)(T),!1)).catch(function(T){E.options.onError||console.error(T)})},E.prototype.cancel=function(){this.count+=1,this.setState({loading:!1}),this.runPluginHandler("onCancel")},E.prototype.refresh=function(){this.run.apply(this,(0,R.fX)([],(0,R.zs)(this.state.params||[]),!1))},E.prototype.refreshAsync=function(){return this.runAsync.apply(this,(0,R.fX)([],(0,R.zs)(this.state.params||[]),!1))},E.prototype.mutate=function(E){var T=(0,Y.Tn)(E)?E(this.state.data):E;this.runPluginHandler("onMutate",T),this.setState({data:T})},E}();let g=function(E,T,e){void 0===T&&(T={}),void 0===e&&(e=[]);var A=T.manual,t=void 0!==A&&A,S=T.ready,O=void 0===S||S,r=(0,R.Tt)(T,["manual","ready"]);m.A&&T.defaultParams&&!Array.isArray(T.defaultParams)&&console.warn("expected defaultParams is array, got ".concat(typeof T.defaultParams));var n=(0,R.Cl)({manual:t,ready:O},r),s=(0,F.A)(E),o=b(),C=I(function(){var E=e.map(function(E){var T;return null==(T=null==E?void 0:E.onInit)?void 0:T.call(E,n)}).filter(Boolean);return new W(s,n,o,Object.assign.apply(Object,(0,R.fX)([{}],(0,R.zs)(E),!1)))},[]);return C.options=n,C.pluginImpls=e.map(function(E){return E(C,n)}),V(function(){if(!t&&O){var E=C.state.params||T.defaultParams||[];C.run.apply(C,(0,R.fX)([],(0,R.zs)(E),!1))}}),(0,N.A)(function(){C.cancel()}),{loading:C.state.loading,data:C.state.data,error:C.state.error,params:C.state.params||[],cancel:y(C.cancel.bind(C)),refresh:y(C.refresh.bind(C)),refreshAsync:y(C.refreshAsync.bind(C)),run:y(C.run.bind(C)),runAsync:y(C.runAsync.bind(C)),mutate:y(C.mutate.bind(C))}},X=function(E,T,e){return g(E,T,(0,R.fX)((0,R.fX)([],(0,R.zs)(e||[]),!1),[D,l,u,d,h,S,_,f],!1))}},56406:(E,T,e)=>{"use strict";e.d(T,{A:()=>O});var R=e(12115),A=e(56795),t=e(30114),S=e(4365);let O=function(E){S.A&&!(0,t.Tn)(E)&&console.error("useUnmount expected parameter is a function, got ".concat(typeof E));var T=(0,A.A)(E);(0,R.useEffect)(function(){return function(){T.current()}},[])}},56795:(E,T,e)=>{"use strict";e.d(T,{A:()=>A});var R=e(12115);let A=function(E){var T=(0,R.useRef)(E);return T.current=E,T}},59362:(E,T,e)=>{"use strict";e.d(T,{pe:()=>A});let{Axios:R,AxiosError:A,CanceledError:t,isCancel:S,CancelToken:O,VERSION:I,all:N,Cancel:r,isAxiosError:n,spread:s,toFormData:o,AxiosHeaders:C,HttpStatusCode:L,formToJSON:a,getAdapter:_,mergeConfig:i}=e(23464).A},64439:E=>{var T=Object.prototype.toString;E.exports=function(E){return T.call(E)}},67460:E=>{E.exports=function(E){var T=typeof E;return null!=E&&("object"==T||"function"==T)}},70762:E=>{E.exports={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0}},70771:(E,T,e)=>{var R=e(98233),A=e(48611);E.exports=function(E){return"symbol"==typeof E||A(E)&&"[object Symbol]"==R(E)}},76685:(E,T,e)=>{var R=e(82500);E.exports=function(){return R.Date.now()}},80804:(E,T,e)=>{"use strict";e.d(T,{A:()=>A});var R=e(12115);let A=function(E){return function(T,e){var A=(0,R.useRef)(!1);E(function(){return function(){A.current=!1}},[]),E(function(){if(A.current)return T();A.current=!0},e)}}(R.useEffect)},82500:(E,T,e)=>{var R=e(7985),A="object"==typeof self&&self&&self.Object===Object&&self;E.exports=R||A||Function("return this")()},82724:(E,T,e)=>{"use strict";e.d(T,{A:()=>l});var R=e(12115),A=e(29300),t=e.n(A),S=e(11261),O=e(74686),I=e(9184),N=e(53014),r=e(79007),n=e(15982),s=e(44494),o=e(68151),C=e(9836),L=e(63568),a=e(63893),_=e(18574),i=e(84311),P=e(30611),D=function(E,T){var e={};for(var R in E)Object.prototype.hasOwnProperty.call(E,R)&&0>T.indexOf(R)&&(e[R]=E[R]);if(null!=E&&"function"==typeof Object.getOwnPropertySymbols)for(var A=0,R=Object.getOwnPropertySymbols(E);A<R.length;A++)0>T.indexOf(R[A])&&Object.prototype.propertyIsEnumerable.call(E,R[A])&&(e[R[A]]=E[R[A]]);return e};let l=(0,R.forwardRef)((E,T)=>{let{prefixCls:e,bordered:A=!0,status:l,size:c,disabled:U,onBlur:M,onFocus:u,suffix:p,allowClear:G,addonAfter:d,addonBefore:f,className:B,style:H,styles:h,rootClassName:F,onChange:Y,classNames:m,variant:y}=E,V=D(E,["prefixCls","bordered","status","size","disabled","onBlur","onFocus","suffix","allowClear","addonAfter","addonBefore","className","style","styles","rootClassName","onChange","classNames","variant"]),{getPrefixCls:b,direction:W,allowClear:g,autoComplete:X,className:v,style:x,classNames:K,styles:w}=(0,n.TP)("input"),J=b("input",e),$=(0,R.useRef)(null),Q=(0,o.A)(J),[k,Z,j]=(0,P.MG)(J,F),[q]=(0,P.Ay)(J,Q),{compactSize:z,compactItemClassnames:EE}=(0,_.RQ)(J,W),ET=(0,C.A)(E=>{var T;return null!=(T=null!=c?c:z)?T:E}),Ee=R.useContext(s.A),{status:ER,hasFeedback:EA,feedbackIcon:Et}=(0,R.useContext)(L.$W),ES=(0,r.v)(ER,l),EO=function(E){return!!(E.prefix||E.suffix||E.allowClear||E.showCount)}(E)||!!EA;(0,R.useRef)(EO);let EI=(0,i.A)($,!0),EN=(EA||p)&&R.createElement(R.Fragment,null,p,EA&&Et),Er=(0,N.A)(null!=G?G:g),[En,Es]=(0,a.A)("input",y,A);return k(q(R.createElement(S.A,Object.assign({ref:(0,O.K4)(T,$),prefixCls:J,autoComplete:X},V,{disabled:null!=U?U:Ee,onBlur:E=>{EI(),null==M||M(E)},onFocus:E=>{EI(),null==u||u(E)},style:Object.assign(Object.assign({},x),H),styles:Object.assign(Object.assign({},w),h),suffix:EN,allowClear:Er,className:t()(B,F,j,Q,EE,v),onChange:E=>{EI(),null==Y||Y(E)},addonBefore:f&&R.createElement(I.A,{form:!0,space:!0},f),addonAfter:d&&R.createElement(I.A,{form:!0,space:!0},d),classNames:Object.assign(Object.assign(Object.assign({},m),K),{input:t()({["".concat(J,"-sm")]:"small"===ET,["".concat(J,"-lg")]:"large"===ET,["".concat(J,"-rtl")]:"rtl"===W},null==m?void 0:m.input,K.input,Z),variant:t()({["".concat(J,"-").concat(En)]:Es},(0,r.L)(J,ES)),affixWrapper:t()({["".concat(J,"-affix-wrapper-sm")]:"small"===ET,["".concat(J,"-affix-wrapper-lg")]:"large"===ET,["".concat(J,"-affix-wrapper-rtl")]:"rtl"===W},Z),wrapper:t()({["".concat(J,"-group-rtl")]:"rtl"===W},Z),groupWrapper:t()({["".concat(J,"-group-wrapper-sm")]:"small"===ET,["".concat(J,"-group-wrapper-lg")]:"large"===ET,["".concat(J,"-group-wrapper-rtl")]:"rtl"===W,["".concat(J,"-group-wrapper-").concat(En)]:Es},(0,r.L)("".concat(J,"-group-wrapper"),ES,EA),Z)})}))))})},84311:(E,T,e)=>{"use strict";e.d(T,{A:()=>A});var R=e(12115);function A(E,T){let e=(0,R.useRef)([]),A=()=>{e.current.push(setTimeout(()=>{var T,e,R,A;(null==(T=E.current)?void 0:T.input)&&(null==(e=E.current)?void 0:e.input.getAttribute("type"))==="password"&&(null==(R=E.current)?void 0:R.input.hasAttribute("value"))&&(null==(A=E.current)||A.input.removeAttribute("value"))}))};return(0,R.useEffect)(()=>(T&&A(),()=>e.current.forEach(E=>{E&&clearTimeout(E)})),[]),A}},91218:(E,T,e)=>{"use strict";let R;e.d(T,{r9:()=>L,Bd:()=>P});var A=e(12115);e(70762),Object.create(null);let t={},S=(E,T,e,R)=>{r(e)&&t[e]||(r(e)&&(t[e]=new Date),((E,T,e,R)=>{let A=[e,{code:T,...R||{}}];if(E?.services?.logger?.forward)return E.services.logger.forward(A,"warn","react-i18next::",!0);r(A[0])&&(A[0]=`react-i18next:: ${A[0]}`),E?.services?.logger?.warn?E.services.logger.warn(...A):console?.warn&&console.warn(...A)})(E,T,e,R))},O=(E,T)=>()=>{if(E.isInitialized)T();else{let e=()=>{setTimeout(()=>{E.off("initialized",e)},0),T()};E.on("initialized",e)}},I=(E,T,e)=>{E.loadNamespaces(T,O(E,e))},N=(E,T,e,R)=>{if(r(e)&&(e=[e]),E.options.preload&&E.options.preload.indexOf(T)>-1)return I(E,e,R);e.forEach(T=>{0>E.options.ns.indexOf(T)&&E.options.ns.push(T)}),E.loadLanguages(T,O(E,R))},r=E=>"string"==typeof E,n=/&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g,s={"&amp;":"&","&#38;":"&","&lt;":"<","&#60;":"<","&gt;":">","&#62;":">","&apos;":"'","&#39;":"'","&quot;":'"',"&#34;":'"',"&nbsp;":" ","&#160;":" ","&copy;":"\xa9","&#169;":"\xa9","&reg;":"\xae","&#174;":"\xae","&hellip;":"…","&#8230;":"…","&#x2F;":"/","&#47;":"/"},o=E=>s[E],C={bindI18n:"languageChanged",bindI18nStore:"",transEmptyNodeValue:"",transSupportBasicHtmlNodes:!0,transWrapTextNodes:"",transKeepBasicHtmlNodesFor:["br","strong","i","p"],useSuspense:!0,unescape:E=>E.replace(n,o)},L={type:"3rdParty",init(E){((E={})=>{C={...C,...E}})(E.options.react),R=E}},a=(0,A.createContext)();class _{constructor(){this.usedNamespaces={}}addUsedNamespaces(E){E.forEach(E=>{this.usedNamespaces[E]||(this.usedNamespaces[E]=!0)})}getUsedNamespaces(){return Object.keys(this.usedNamespaces)}}let i=(E,T,e,R)=>E.getFixedT(T,e,R),P=(E,T={})=>{let{i18n:e}=T,{i18n:t,defaultNS:O}=(0,A.useContext)(a)||{},n=e||t||R;if(n&&!n.reportNamespaces&&(n.reportNamespaces=new _),!n){S(n,"NO_I18NEXT_INSTANCE","useTranslation: You will need to pass in an i18next instance by using initReactI18next");let E=(E,T)=>r(T)?T:(E=>"object"==typeof E&&null!==E)(T)&&r(T.defaultValue)?T.defaultValue:Array.isArray(E)?E[E.length-1]:E,T=[E,{},!1];return T.t=E,T.i18n={},T.ready=!1,T}n.options.react?.wait&&S(n,"DEPRECATED_OPTION","useTranslation: It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.");let s={...C,...n.options.react,...T},{useSuspense:o,keyPrefix:L}=s,P=E||O||n.options?.defaultNS;P=r(P)?[P]:P||["translation"],n.reportNamespaces.addUsedNamespaces?.(P);let D=(n.isInitialized||n.initializedStoreOnce)&&P.every(E=>((E,T,e={})=>T.languages&&T.languages.length?T.hasLoadedNamespace(E,{lng:e.lng,precheck:(T,R)=>{if(e.bindI18n&&e.bindI18n.indexOf("languageChanging")>-1&&T.services.backendConnector.backend&&T.isLanguageChangingTo&&!R(T.isLanguageChangingTo,E))return!1}}):(S(T,"NO_LANGUAGES","i18n.languages were undefined or empty",{languages:T.languages}),!0))(E,n,s)),l=((E,T,e,R)=>(0,A.useCallback)(i(E,T,e,R),[E,T,e,R]))(n,T.lng||null,"fallback"===s.nsMode?P:P[0],L),c=()=>l,U=()=>i(n,T.lng||null,"fallback"===s.nsMode?P:P[0],L),[M,u]=(0,A.useState)(c),p=P.join();T.lng&&(p=`${T.lng}${p}`);let G=((E,T)=>{let e=(0,A.useRef)();return(0,A.useEffect)(()=>{e.current=T?e.current:E},[E,T]),e.current})(p),d=(0,A.useRef)(!0);(0,A.useEffect)(()=>{let{bindI18n:E,bindI18nStore:e}=s;d.current=!0,D||o||(T.lng?N(n,T.lng,P,()=>{d.current&&u(U)}):I(n,P,()=>{d.current&&u(U)})),D&&G&&G!==p&&d.current&&u(U);let R=()=>{d.current&&u(U)};return E&&n?.on(E,R),e&&n?.store.on(e,R),()=>{d.current=!1,n&&E&&E?.split(" ").forEach(E=>n.off(E,R)),e&&n&&e.split(" ").forEach(E=>n.store.off(E,R))}},[n,p]),(0,A.useEffect)(()=>{d.current&&D&&u(c)},[n,L,D]);let f=[M,n,D];if(f.t=M,f.i18n=n,f.ready=D,D||!D&&!o)return f;throw new Promise(E=>{T.lng?N(n,T.lng,P,()=>E()):I(n,P,()=>E())})}},91959:(E,T,e)=>{var R=e(45964),A=e(67460);E.exports=function(E,T,e){var t=!0,S=!0;if("function"!=typeof E)throw TypeError("Expected a function");return A(e)&&(t="leading"in e?!!e.leading:t,S="trailing"in e?!!e.trailing:S),R(E,T,{leading:t,maxWait:T,trailing:S})}},94936:(E,T,e)=>{"use strict";e.d(T,{GP:()=>eX});var R,A,t,S={};e.r(S),e.d(S,{bigquery:()=>f,db2:()=>V,db2i:()=>K,duckdb:()=>j,hive:()=>EA,mariadb:()=>Es,mysql:()=>EP,n1ql:()=>Eh,plsql:()=>EW,postgresql:()=>EJ,redshift:()=>Ez,singlestoredb:()=>TH,snowflake:()=>Tb,spark:()=>E8,sql:()=>Tr,sqlite:()=>TR,tidb:()=>Ep,transactsql:()=>TM,trino:()=>T_});let O=E=>E.flatMap(I),I=E=>a(r(E)).map(N),N=E=>E.replace(/ +/g," ").trim(),r=E=>({type:"mandatory_block",items:n(E,0)[0]}),n=(E,T,e)=>{let R=[];for(;E[T];){let[A,t]=s(E,T);if(R.push(A),"|"===E[T=t])T++;else if("}"===E[T]||"]"===E[T]){if(e!==E[T])throw Error(`Unbalanced parenthesis in: ${E}`);T++;break}else if(T===E.length){if(e)throw Error(`Unbalanced parenthesis in: ${E}`);break}else throw Error(`Unexpected "${E[T]}"`)}return[R,T]},s=(E,T)=>{let e=[];for(;;){let[R,A]=o(E,T);if(R)e.push(R),T=A;else break}return 1===e.length?[e[0],T]:[{type:"concatenation",items:e},T]},o=(E,T)=>{if("{"===E[T])return C(E,T+1);{if("["===E[T])return L(E,T+1);let e="";for(;E[T]&&/[A-Za-z0-9_ ]/.test(E[T]);)e+=E[T],T++;return[e,T]}},C=(E,T)=>{let[e,R]=n(E,T,"}");return[{type:"mandatory_block",items:e},R]},L=(E,T)=>{let[e,R]=n(E,T,"]");return[{type:"optional_block",items:e},R]},a=E=>{if("string"==typeof E)return[E];if("concatenation"===E.type)return E.items.map(a).reduce(_,[""]);if("mandatory_block"===E.type)return E.items.flatMap(a);if("optional_block"===E.type)return["",...E.items.flatMap(a)];throw Error(`Unknown node type: ${E}`)},_=(E,T)=>{let e=[];for(let R of E)for(let E of T)e.push(R+E);return e};!function(E){E.QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",E.IDENTIFIER="IDENTIFIER",E.STRING="STRING",E.VARIABLE="VARIABLE",E.RESERVED_DATA_TYPE="RESERVED_DATA_TYPE",E.RESERVED_PARAMETERIZED_DATA_TYPE="RESERVED_PARAMETERIZED_DATA_TYPE",E.RESERVED_KEYWORD="RESERVED_KEYWORD",E.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",E.RESERVED_KEYWORD_PHRASE="RESERVED_KEYWORD_PHRASE",E.RESERVED_DATA_TYPE_PHRASE="RESERVED_DATA_TYPE_PHRASE",E.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",E.RESERVED_CLAUSE="RESERVED_CLAUSE",E.RESERVED_SELECT="RESERVED_SELECT",E.RESERVED_JOIN="RESERVED_JOIN",E.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",E.ARRAY_KEYWORD="ARRAY_KEYWORD",E.CASE="CASE",E.END="END",E.WHEN="WHEN",E.ELSE="ELSE",E.THEN="THEN",E.LIMIT="LIMIT",E.BETWEEN="BETWEEN",E.AND="AND",E.OR="OR",E.XOR="XOR",E.OPERATOR="OPERATOR",E.COMMA="COMMA",E.ASTERISK="ASTERISK",E.PROPERTY_ACCESS_OPERATOR="PROPERTY_ACCESS_OPERATOR",E.OPEN_PAREN="OPEN_PAREN",E.CLOSE_PAREN="CLOSE_PAREN",E.LINE_COMMENT="LINE_COMMENT",E.BLOCK_COMMENT="BLOCK_COMMENT",E.DISABLE_COMMENT="DISABLE_COMMENT",E.NUMBER="NUMBER",E.NAMED_PARAMETER="NAMED_PARAMETER",E.QUOTED_PARAMETER="QUOTED_PARAMETER",E.NUMBERED_PARAMETER="NUMBERED_PARAMETER",E.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",E.CUSTOM_PARAMETER="CUSTOM_PARAMETER",E.DELIMITER="DELIMITER",E.EOF="EOF"}(R=R||(R={}));let i=E=>({type:R.EOF,raw:"\xabEOF\xbb",text:"\xabEOF\xbb",start:E}),P=i(1/0),D=E=>T=>T.type===E.type&&T.text===E.text,l={ARRAY:D({text:"ARRAY",type:R.RESERVED_DATA_TYPE}),BY:D({text:"BY",type:R.RESERVED_KEYWORD}),SET:D({text:"SET",type:R.RESERVED_CLAUSE}),STRUCT:D({text:"STRUCT",type:R.RESERVED_DATA_TYPE}),WINDOW:D({text:"WINDOW",type:R.RESERVED_CLAUSE}),VALUES:D({text:"VALUES",type:R.RESERVED_CLAUSE})},c=E=>E===R.RESERVED_DATA_TYPE||E===R.RESERVED_KEYWORD||E===R.RESERVED_FUNCTION_NAME||E===R.RESERVED_KEYWORD_PHRASE||E===R.RESERVED_DATA_TYPE_PHRASE||E===R.RESERVED_CLAUSE||E===R.RESERVED_SELECT||E===R.RESERVED_SET_OPERATION||E===R.RESERVED_JOIN||E===R.ARRAY_KEYWORD||E===R.CASE||E===R.END||E===R.WHEN||E===R.ELSE||E===R.THEN||E===R.LIMIT||E===R.BETWEEN||E===R.AND||E===R.OR||E===R.XOR,U=O(["SELECT [ALL | DISTINCT] [AS STRUCT | AS VALUE]"]),M=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","OMIT RECORD IF","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY SOURCE | BY TARGET] [THEN]","UPDATE SET","CLUSTER BY","FOR SYSTEM_TIME AS OF","WITH CONNECTION","WITH PARTITION COLUMNS","REMOTE WITH CONNECTION"]),u=O(["CREATE [OR REPLACE] [TEMP|TEMPORARY|SNAPSHOT|EXTERNAL] TABLE [IF NOT EXISTS]"]),p=O(["CREATE [OR REPLACE] [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE [FROM]","DROP [SNAPSHOT | EXTERNAL] TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME TO","ALTER COLUMN [IF EXISTS]","SET DEFAULT COLLATE","SET OPTIONS","DROP NOT NULL","SET DATA TYPE","ALTER SCHEMA [IF EXISTS]","ALTER [MATERIALIZED] VIEW [IF EXISTS]","ALTER BI_CAPACITY","TRUNCATE TABLE","CREATE SCHEMA [IF NOT EXISTS]","DEFAULT COLLATE","CREATE [OR REPLACE] [TEMP|TEMPORARY|TABLE] FUNCTION [IF NOT EXISTS]","CREATE [OR REPLACE] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] ROW ACCESS POLICY [IF NOT EXISTS]","GRANT TO","FILTER USING","CREATE CAPACITY","AS JSON","CREATE RESERVATION","CREATE ASSIGNMENT","CREATE SEARCH INDEX [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","DROP [MATERIALIZED] VIEW [IF EXISTS]","DROP [TABLE] FUNCTION [IF EXISTS]","DROP PROCEDURE [IF EXISTS]","DROP ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","DROP CAPACITY [IF EXISTS]","DROP RESERVATION [IF EXISTS]","DROP ASSIGNMENT [IF EXISTS]","DROP SEARCH INDEX [IF EXISTS]","DROP [IF EXISTS]","GRANT","REVOKE","DECLARE","EXECUTE IMMEDIATE","LOOP","END LOOP","REPEAT","END REPEAT","WHILE","END WHILE","BREAK","LEAVE","CONTINUE","ITERATE","FOR","END FOR","BEGIN","BEGIN TRANSACTION","COMMIT TRANSACTION","ROLLBACK TRANSACTION","RAISE","RETURN","CALL","ASSERT","EXPORT DATA"]),G=O(["UNION {ALL | DISTINCT}","EXCEPT DISTINCT","INTERSECT DISTINCT"]),d=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),f={name:"bigquery",tokenizerOptions:{reservedSelect:U,reservedClauses:[...M,...p,...u],reservedSetOperations:G,reservedJoins:d,reservedKeywordPhrases:O(["TABLESAMPLE SYSTEM","ANY TYPE","ALL COLUMNS","NOT DETERMINISTIC","{ROWS | RANGE} BETWEEN","IS [NOT] DISTINCT FROM"]),reservedDataTypePhrases:O([]),reservedKeywords:["ALL","AND","ANY","AS","ASC","ASSERT_ROWS_MODIFIED","AT","BETWEEN","BY","CASE","CAST","COLLATE","CONTAINS","CREATE","CROSS","CUBE","CURRENT","DEFAULT","DEFINE","DESC","DISTINCT","ELSE","END","ENUM","ESCAPE","EXCEPT","EXCLUDE","EXISTS","EXTRACT","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","GROUP","GROUPING","GROUPS","HASH","HAVING","IF","IGNORE","IN","INNER","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LIMIT","LOOKUP","MERGE","NATURAL","NEW","NO","NOT","NULL","NULLS","OF","ON","OR","ORDER","OUTER","OVER","PARTITION","PRECEDING","PROTO","RANGE","RECURSIVE","RESPECT","RIGHT","ROLLUP","ROWS","SELECT","SET","SOME","TABLE","TABLESAMPLE","THEN","TO","TREAT","TRUE","UNBOUNDED","UNION","UNNEST","USING","WHEN","WHERE","WINDOW","WITH","WITHIN","SAFE","LIKE","COPY","CLONE","IN","OUT","INOUT","RETURNS","LANGUAGE","CASCADE","RESTRICT","DETERMINISTIC"],reservedDataTypes:["ARRAY","BOOL","BYTES","DATE","DATETIME","GEOGRAPHY","INTERVAL","INT64","INT","SMALLINT","INTEGER","BIGINT","TINYINT","BYTEINT","NUMERIC","DECIMAL","BIGNUMERIC","BIGDECIMAL","FLOAT64","STRING","STRUCT","TIME","TIMEZONE"],reservedFunctionNames:["KEYS.NEW_KEYSET","KEYS.ADD_KEY_FROM_RAW_BYTES","AEAD.DECRYPT_BYTES","AEAD.DECRYPT_STRING","AEAD.ENCRYPT","KEYS.KEYSET_CHAIN","KEYS.KEYSET_FROM_JSON","KEYS.KEYSET_TO_JSON","KEYS.ROTATE_KEYSET","KEYS.KEYSET_LENGTH","ANY_VALUE","ARRAY_AGG","AVG","CORR","COUNT","COUNTIF","COVAR_POP","COVAR_SAMP","MAX","MIN","ST_CLUSTERDBSCAN","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","VAR_POP","VAR_SAMP","ANY_VALUE","ARRAY_AGG","ARRAY_CONCAT_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","COUNT","COUNTIF","LOGICAL_AND","LOGICAL_OR","MAX","MIN","STRING_AGG","SUM","APPROX_COUNT_DISTINCT","APPROX_QUANTILES","APPROX_TOP_COUNT","APPROX_TOP_SUM","ARRAY_CONCAT","ARRAY_LENGTH","ARRAY_TO_STRING","GENERATE_ARRAY","GENERATE_DATE_ARRAY","GENERATE_TIMESTAMP_ARRAY","ARRAY_REVERSE","OFFSET","SAFE_OFFSET","ORDINAL","SAFE_ORDINAL","BIT_COUNT","PARSE_BIGNUMERIC","PARSE_NUMERIC","SAFE_CAST","CURRENT_DATE","EXTRACT","DATE","DATE_ADD","DATE_SUB","DATE_DIFF","DATE_TRUNC","DATE_FROM_UNIX_DATE","FORMAT_DATE","LAST_DAY","PARSE_DATE","UNIX_DATE","CURRENT_DATETIME","DATETIME","EXTRACT","DATETIME_ADD","DATETIME_SUB","DATETIME_DIFF","DATETIME_TRUNC","FORMAT_DATETIME","LAST_DAY","PARSE_DATETIME","ERROR","EXTERNAL_QUERY","S2_CELLIDFROMPOINT","S2_COVERINGCELLIDS","ST_ANGLE","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_AZIMUTH","ST_BOUNDARY","ST_BOUNDINGBOX","ST_BUFFER","ST_BUFFERWITHTOLERANCE","ST_CENTROID","ST_CENTROID_AGG","ST_CLOSESTPOINT","ST_CLUSTERDBSCAN","ST_CONTAINS","ST_CONVEXHULL","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DUMP","ST_DWITHIN","ST_ENDPOINT","ST_EQUALS","ST_EXTENT","ST_EXTERIORRING","ST_GEOGFROM","ST_GEOGFROMGEOJSON","ST_GEOGFROMTEXT","ST_GEOGFROMWKB","ST_GEOGPOINT","ST_GEOGPOINTFROMGEOHASH","ST_GEOHASH","ST_GEOMETRYTYPE","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_INTERSECTSBOX","ST_ISCOLLECTION","ST_ISEMPTY","ST_LENGTH","ST_MAKELINE","ST_MAKEPOLYGON","ST_MAKEPOLYGONORIENTED","ST_MAXDISTANCE","ST_NPOINTS","ST_NUMGEOMETRIES","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SIMPLIFY","ST_SNAPTOGRID","ST_STARTPOINT","ST_TOUCHES","ST_UNION","ST_UNION_AGG","ST_WITHIN","ST_X","ST_Y","FARM_FINGERPRINT","MD5","SHA1","SHA256","SHA512","HLL_COUNT.INIT","HLL_COUNT.MERGE","HLL_COUNT.MERGE_PARTIAL","HLL_COUNT.EXTRACT","MAKE_INTERVAL","EXTRACT","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","JSON_EXTRACT","JSON_QUERY","JSON_EXTRACT_SCALAR","JSON_VALUE","JSON_EXTRACT_ARRAY","JSON_QUERY_ARRAY","JSON_EXTRACT_STRING_ARRAY","JSON_VALUE_ARRAY","TO_JSON_STRING","ABS","SIGN","IS_INF","IS_NAN","IEEE_DIVIDE","RAND","SQRT","POW","POWER","EXP","LN","LOG","LOG10","GREATEST","LEAST","DIV","SAFE_DIVIDE","SAFE_MULTIPLY","SAFE_NEGATE","SAFE_ADD","SAFE_SUBTRACT","MOD","ROUND","TRUNC","CEIL","CEILING","FLOOR","COS","COSH","ACOS","ACOSH","SIN","SINH","ASIN","ASINH","TAN","TANH","ATAN","ATANH","ATAN2","RANGE_BUCKET","FIRST_VALUE","LAST_VALUE","NTH_VALUE","LEAD","LAG","PERCENTILE_CONT","PERCENTILE_DISC","NET.IP_FROM_STRING","NET.SAFE_IP_FROM_STRING","NET.IP_TO_STRING","NET.IP_NET_MASK","NET.IP_TRUNC","NET.IPV4_FROM_INT64","NET.IPV4_TO_INT64","NET.HOST","NET.PUBLIC_SUFFIX","NET.REG_DOMAIN","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","NTILE","ROW_NUMBER","SESSION_USER","CORR","COVAR_POP","COVAR_SAMP","STDDEV_POP","STDDEV_SAMP","STDDEV","VAR_POP","VAR_SAMP","VARIANCE","ASCII","BYTE_LENGTH","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CODE_POINTS_TO_BYTES","CODE_POINTS_TO_STRING","CONCAT","CONTAINS_SUBSTR","ENDS_WITH","FORMAT","FROM_BASE32","FROM_BASE64","FROM_HEX","INITCAP","INSTR","LEFT","LENGTH","LPAD","LOWER","LTRIM","NORMALIZE","NORMALIZE_AND_CASEFOLD","OCTET_LENGTH","REGEXP_CONTAINS","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","REPEAT","REVERSE","RIGHT","RPAD","RTRIM","SAFE_CONVERT_BYTES_TO_STRING","SOUNDEX","SPLIT","STARTS_WITH","STRPOS","SUBSTR","SUBSTRING","TO_BASE32","TO_BASE64","TO_CODE_POINTS","TO_HEX","TRANSLATE","TRIM","UNICODE","UPPER","CURRENT_TIME","TIME","EXTRACT","TIME_ADD","TIME_SUB","TIME_DIFF","TIME_TRUNC","FORMAT_TIME","PARSE_TIME","CURRENT_TIMESTAMP","EXTRACT","STRING","TIMESTAMP","TIMESTAMP_ADD","TIMESTAMP_SUB","TIMESTAMP_DIFF","TIMESTAMP_TRUNC","FORMAT_TIMESTAMP","PARSE_TIMESTAMP","TIMESTAMP_SECONDS","TIMESTAMP_MILLIS","TIMESTAMP_MICROS","UNIX_SECONDS","UNIX_MILLIS","UNIX_MICROS","GENERATE_UUID","COALESCE","IF","IFNULL","NULLIF","AVG","BIT_AND","BIT_OR","BIT_XOR","CORR","COUNT","COVAR_POP","COVAR_SAMP","EXACT_COUNT_DISTINCT","FIRST","GROUP_CONCAT","GROUP_CONCAT_UNQUOTED","LAST","MAX","MIN","NEST","NTH","QUANTILES","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","TOP","UNIQUE","VARIANCE","VAR_POP","VAR_SAMP","BIT_COUNT","BOOLEAN","BYTES","CAST","FLOAT","HEX_STRING","INTEGER","STRING","COALESCE","GREATEST","IFNULL","IS_INF","IS_NAN","IS_EXPLICITLY_DEFINED","LEAST","NVL","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE","DATE_ADD","DATEDIFF","DAY","DAYOFWEEK","DAYOFYEAR","FORMAT_UTC_USEC","HOUR","MINUTE","MONTH","MSEC_TO_TIMESTAMP","NOW","PARSE_UTC_USEC","QUARTER","SEC_TO_TIMESTAMP","SECOND","STRFTIME_UTC_USEC","TIME","TIMESTAMP","TIMESTAMP_TO_MSEC","TIMESTAMP_TO_SEC","TIMESTAMP_TO_USEC","USEC_TO_TIMESTAMP","UTC_USEC_TO_DAY","UTC_USEC_TO_HOUR","UTC_USEC_TO_MONTH","UTC_USEC_TO_WEEK","UTC_USEC_TO_YEAR","WEEK","YEAR","FORMAT_IP","PARSE_IP","FORMAT_PACKED_IP","PARSE_PACKED_IP","JSON_EXTRACT","JSON_EXTRACT_SCALAR","ABS","ACOS","ACOSH","ASIN","ASINH","ATAN","ATANH","ATAN2","CEIL","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG2","LOG10","PI","POW","RADIANS","RAND","ROUND","SIN","SINH","SQRT","TAN","TANH","REGEXP_MATCH","REGEXP_EXTRACT","REGEXP_REPLACE","CONCAT","INSTR","LEFT","LENGTH","LOWER","LPAD","LTRIM","REPLACE","RIGHT","RPAD","RTRIM","SPLIT","SUBSTR","UPPER","TABLE_DATE_RANGE","TABLE_DATE_RANGE_STRICT","TABLE_QUERY","HOST","DOMAIN","TLD","AVG","COUNT","MAX","MIN","STDDEV","SUM","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","CURRENT_USER","EVERY","FROM_BASE64","HASH","FARM_FINGERPRINT","IF","POSITION","SHA1","SOME","TO_BASE64","BQ.JOBS.CANCEL","BQ.REFRESH_MATERIALIZED_VIEW","OPTIONS","PIVOT","UNPIVOT"],extraParens:["[]"],stringTypes:[{quote:'""".."""',prefixes:["R","B","RB","BR"]},{quote:"'''..'''",prefixes:["R","B","RB","BR"]},'""-bs',"''-bs",{quote:'""-raw',prefixes:["R","B","RB","BR"],requirePrefix:!0},{quote:"''-raw",prefixes:["R","B","RB","BR"],requirePrefix:!0}],identTypes:["``"],identChars:{dashes:!0},paramTypes:{positional:!0,named:["@"],quoted:["@"]},variableTypes:[{regex:String.raw`@@\w+`}],lineCommentTypes:["--","#"],operators:["&","|","^","~",">>","<<","||","=>"],postProcess:function(E){var T;let e;return T=function(E){var T;let e=[];for(let A=0;A<E.length;A++){let t=E[A];if((l.ARRAY(t)||l.STRUCT(t))&&(null==(T=E[A+1])?void 0:T.text)==="<"){let T=function(E,T){let e=0;for(let R=T;R<E.length;R++){let T=E[R];if("<"===T.text?e++:">"===T.text?e--:">>"===T.text&&(e-=2),0===e)return R}return E.length-1}(E,A+1),S=E.slice(A,T+1);e.push({type:R.IDENTIFIER,raw:S.map(B("raw")).join(""),text:S.map(B("text")).join(""),start:t.start}),A=T}else e.push(t)}return e}(E),e=P,T.map(E=>"OFFSET"===E.text&&"["===e.text?(e=E,Object.assign(Object.assign({},E),{type:R.RESERVED_FUNCTION_NAME})):(e=E,E))}},formatOptions:{onelineClauses:[...u,...p],tabularOnelineClauses:p}},B=E=>T=>T.type===R.IDENTIFIER||T.type===R.COMMA?T[E]+" ":T[E],H=O(["SELECT [ALL | DISTINCT]"]),h=O(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH NEXT","FOR UPDATE [OF]","FOR {READ | FETCH} ONLY","FOR {RR | CS | UR | RS} [USE AND KEEP {SHARE | UPDATE | EXCLUSIVE} LOCKS]","WAIT FOR OUTCOME","SKIP LOCKED DATA","INTO","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT"]),F=O(["CREATE [GLOBAL TEMPORARY | EXTERNAL] TABLE [IF NOT EXISTS]"]),Y=O(["CREATE [OR REPLACE] VIEW","UPDATE","WHERE CURRENT OF","WITH {RR | RS | CS | UR}","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME COLUMN","ALTER [COLUMN]","SET DATA TYPE","SET NOT NULL","DROP {DEFAULT | GENERATED | NOT NULL}","TRUNCATE [TABLE]","ALLOCATE","ALTER AUDIT POLICY","ALTER BUFFERPOOL","ALTER DATABASE PARTITION GROUP","ALTER DATABASE","ALTER EVENT MONITOR","ALTER FUNCTION","ALTER HISTOGRAM TEMPLATE","ALTER INDEX","ALTER MASK","ALTER METHOD","ALTER MODULE","ALTER NICKNAME","ALTER PACKAGE","ALTER PERMISSION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SECURITY LABEL COMPONENT","ALTER SECURITY POLICY","ALTER SEQUENCE","ALTER SERVER","ALTER SERVICE CLASS","ALTER STOGROUP","ALTER TABLESPACE","ALTER THRESHOLD","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER TYPE","ALTER USAGE LIST","ALTER USER MAPPING","ALTER VIEW","ALTER WORK ACTION SET","ALTER WORK CLASS SET","ALTER WORKLOAD","ALTER WRAPPER","ALTER XSROBJECT","ALTER STOGROUP","ALTER TABLESPACE","ALTER TRIGGER","ALTER TRUSTED CONTEXT","ALTER VIEW","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","AUDIT","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON","COMMIT [WORK]","CONNECT","CREATE [OR REPLACE] [PUBLIC] ALIAS","CREATE AUDIT POLICY","CREATE BUFFERPOOL","CREATE DATABASE PARTITION GROUP","CREATE EVENT MONITOR","CREATE [OR REPLACE] FUNCTION","CREATE FUNCTION MAPPING","CREATE HISTOGRAM TEMPLATE","CREATE [UNIQUE] INDEX","CREATE INDEX EXTENSION","CREATE [OR REPLACE] MASK","CREATE [SPECIFIC] METHOD","CREATE [OR REPLACE] MODULE","CREATE [OR REPLACE] NICKNAME","CREATE [OR REPLACE] PERMISSION","CREATE [OR REPLACE] PROCEDURE","CREATE ROLE","CREATE SCHEMA","CREATE SECURITY LABEL [COMPONENT]","CREATE SECURITY POLICY","CREATE [OR REPLACE] SEQUENCE","CREATE SERVICE CLASS","CREATE SERVER","CREATE STOGROUP","CREATE SYNONYM","CREATE [LARGE | REGULAR | {SYSTEM | USER} TEMPORARY] TABLESPACE","CREATE THRESHOLD","CREATE {TRANSFORM | TRANSFORMS} FOR","CREATE [OR REPLACE] TRIGGER","CREATE TRUSTED CONTEXT","CREATE [OR REPLACE] TYPE","CREATE TYPE MAPPING","CREATE USAGE LIST","CREATE USER MAPPING FOR","CREATE [OR REPLACE] VARIABLE","CREATE WORK ACTION SET","CREATE WORK CLASS SET","CREATE WORKLOAD","CREATE WRAPPER","DECLARE","DECLARE GLOBAL TEMPORARY TABLE","DESCRIBE [INPUT | OUTPUT]","DISCONNECT","DROP [PUBLIC] ALIAS","DROP AUDIT POLICY","DROP BUFFERPOOL","DROP DATABASE PARTITION GROUP","DROP EVENT MONITOR","DROP [SPECIFIC] FUNCTION","DROP FUNCTION MAPPING","DROP HISTOGRAM TEMPLATE","DROP INDEX [EXTENSION]","DROP MASK","DROP [SPECIFIC] METHOD","DROP MODULE","DROP NICKNAME","DROP PACKAGE","DROP PERMISSION","DROP [SPECIFIC] PROCEDURE","DROP ROLE","DROP SCHEMA","DROP SECURITY LABEL [COMPONENT]","DROP SECURITY POLICY","DROP SEQUENCE","DROP SERVER","DROP SERVICE CLASS","DROP STOGROUP","DROP TABLE HIERARCHY","DROP {TABLESPACE | TABLESPACES}","DROP {TRANSFORM | TRANSFORMS}","DROP THRESHOLD","DROP TRIGGER","DROP TRUSTED CONTEXT","DROP TYPE [MAPPING]","DROP USAGE LIST","DROP USER MAPPING FOR","DROP VARIABLE","DROP VIEW [HIERARCHY]","DROP WORK {ACTION | CLASS} SET","DROP WORKLOAD","DROP WRAPPER","DROP XSROBJECT","END DECLARE SECTION","EXECUTE [IMMEDIATE]","EXPLAIN {PLAN [SECTION] | ALL}","FETCH [FROM]","FLUSH {BUFFERPOOL | BUFFERPOOLS} ALL","FLUSH EVENT MONITOR","FLUSH FEDERATED CACHE","FLUSH OPTIMIZATION PROFILE CACHE","FLUSH PACKAGE CACHE [DYNAMIC]","FLUSH AUTHENTICATION CACHE [FOR ALL]","FREE LOCATOR","GET DIAGNOSTICS","GOTO","GRANT","INCLUDE","ITERATE","LEAVE","LOCK TABLE","LOOP","OPEN","PIPE","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX | STOGROUP | TABLESPACE]","REPEAT","RESIGNAL","RETURN","REVOKE","ROLLBACK [WORK] [TO SAVEPOINT]","SAVEPOINT","SET COMPILATION ENVIRONMENT","SET CONNECTION","SET CURRENT","SET ENCRYPTION PASSWORD","SET EVENT MONITOR STATE","SET INTEGRITY","SET PASSTHRU","SET PATH","SET ROLE","SET SCHEMA","SET SERVER OPTION","SET {SESSION AUTHORIZATION | SESSION_USER}","SET USAGE LIST","SIGNAL","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}","WHILE"]),m=O(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),y=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN"]),V={name:"db2",tokenizerOptions:{reservedSelect:H,reservedClauses:[...h,...F,...Y],reservedSetOperations:m,reservedJoins:y,reservedKeywordPhrases:O(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),reservedDataTypePhrases:O([]),reservedKeywords:["ACTIVATE","ADD","AFTER","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","AS","ASENSITIVE","ASSOCIATE","ASUTIME","AT","ATTRIBUTES","AUDIT","AUTHORIZATION","AUX","AUXILIARY","BEFORE","BEGIN","BETWEEN","BINARY","BUFFERPOOL","BY","CACHE","CALL","CALLED","CAPTURE","CARDINALITY","CASCADED","CASE","CAST","CHECK","CLONE","CLOSE","CLUSTER","COLLECTION","COLLID","COLUMN","COMMENT","COMMIT","CONCAT","CONDITION","CONNECT","CONNECTION","CONSTRAINT","CONTAINS","CONTINUE","COUNT","COUNT_BIG","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_LC_CTYPE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFINITION","DELETE","DENSERANK","DENSE_RANK","DESCRIBE","DESCRIPTOR","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DSSIZE","DYNAMIC","EACH","EDITPROC","ELSE","ELSEIF","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ERASE","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXPLAIN","EXTENDED","EXTERNAL","EXTRACT","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST1","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GRAPHIC","GROUP","HANDLER","HASH","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IMMEDIATE","IMPORT","IN","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDICATOR","INDICATORS","INF","INFINITY","INHERIT","INNER","INOUT","INSENSITIVE","INSERT","INTEGRITY","INTERSECT","INTO","IS","ISNULL","ISOBID","ISOLATION","ITERATE","JAR","JAVA","JOIN","KEEP","KEY","LABEL","LANGUAGE","LAST3","LATERAL","LC_CTYPE","LEAVE","LEFT","LIKE","LIMIT","LINKTYPE","LOCAL","LOCALDATE","LOCALE","LOCALTIME","LOCALTIMESTAMP","LOCATOR","LOCATORS","LOCK","LOCKMAX","LOCKSIZE","LOOP","MAINTAINED","MATERIALIZED","MAXVALUE","MICROSECOND","MICROSECONDS","MINUTE","MINUTES","MINVALUE","MODE","MODIFIES","MONTH","MONTHS","NAN","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT2","NOTNULL","NULL","NULLS","NUMPARTS","OBID","OF","OFF","OFFSET","OLD","OLD_TABLE","ON","OPEN","OPTIMIZATION","OPTIMIZE","OPTION","OR","ORDER","OUT","OUTER","OVER","OVERRIDING","PACKAGE","PADDED","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSWORD","PATH","PERCENT","PIECESIZE","PLAN","POSITION","PRECISION","PREPARE","PREVVAL","PRIMARY","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PSID","PUBLIC","QUERY","QUERYNO","RANGE","RANK","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESTRICT","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROUND_CEILING","ROUND_DOWN","ROUND_FLOOR","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_UP","ROUND_UP","ROUTINE","ROW","ROWNUMBER","ROWS","ROWSET","ROW_NUMBER","RRN","RUN","SAVEPOINT","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURITY","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","STACKED","STANDARD","START","STARTING","STATEMENT","STATIC","STATMENT","STAY","STOGROUP","STORES","STYLE","SUBSTRING","SUMMARY","SYNONYM","SYSFUN","SYSIBM","SYSPROC","SYSTEM","SYSTEM_USER","TABLE","TABLESPACE","THEN","TO","TRANSACTION","TRIGGER","TRIM","TRUNCATE","TYPE","UNDO","UNION","UNIQUE","UNTIL","UPDATE","USAGE","USER","USING","VALIDPROC","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VIEW","VOLATILE","VOLUMES","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHOUT","WLM","WRITE","XMLELEMENT","XMLEXISTS","XMLNAMESPACES","YEAR","YEARS"],reservedDataTypes:["ARRAY","BIGINT","BINARY","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATE","DATETIME","DBCLOB","DEC","DECIMAL","DOUBLE","DOUBLE PRECISION","FLOAT","FLOAT4","FLOAT8","GRAPHIC","INT","INT2","INT4","INT8","INTEGER","INTERVAL","LONG VARCHAR","LONG VARGRAPHIC","NCHAR","NCHR","NCLOB","NVARCHAR","NUMERIC","SMALLINT","REAL","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC"],reservedFunctionNames:["ARRAY_AGG","AVG","CORRELATION","COUNT","COUNT_BIG","COVARIANCE","COVARIANCE_SAMP","CUME_DIST","GROUPING","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_ICPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_SAMP","SUM","VARIANCE","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","AGE","ARRAY_DELETE","ARRAY_FIRST","ARRAY_LAST","ARRAY_NEXT","ARRAY_PRIOR","ASCII","ASCII_STR","ASIN","ATAN","ATAN2","ATANH","BITAND","BITANDNOT","BITOR","BITXOR","BITNOT","BPCHAR","BSON_TO_JSON","BTRIM","CARDINALITY","CEILING","CEIL","CHARACTER_LENGTH","CHR","COALESCE","COLLATION_KEY","COLLATION_KEY_BIT","COMPARE_DECFLOAT","CONCAT","COS","COSH","COT","CURSOR_ROWCOUNT","DATAPARTITIONNUM","DATE_PART","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFWEEK_ISO","DAYOFYEAR","DAYS","DAYS_BETWEEN","DAYS_TO_END_OF_MONTH","DBPARTITIONNUM","DECFLOAT","DECFLOAT_FORMAT","DECODE","DECRYPT_BIN","DECRYPT_CHAR","DEGREES","DEREF","DIFFERENCE","DIGITS","DOUBLE_PRECISION","EMPTY_BLOB","EMPTY_CLOB","EMPTY_DBCLOB","EMPTY_NCLOB","ENCRYPT","EVENT_MON_STATE","EXP","EXTRACT","FIRST_DAY","FLOOR","FROM_UTC_TIMESTAMP","GENERATE_UNIQUE","GETHINT","GREATEST","HASH","HASH4","HASH8","HASHEDVALUE","HEX","HEXTORAW","HOUR","HOURS_BETWEEN","IDENTITY_VAL_LOCAL","IFNULL","INITCAP","INSERT","INSTR","INSTR2","INSTR4","INSTRB","INTNAND","INTNOR","INTNXOR","INTNNOT","ISNULL","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_VALUE","JULIAN_DAY","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LENGTH2","LENGTH4","LENGTHB","LN","LOCATE","LOCATE_IN_STRING","LOG10","LONG_VARCHAR","LONG_VARGRAPHIC","LOWER","LPAD","LTRIM","MAX","MAX_CARDINALITY","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MINUTES_BETWEEN","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MULTIPLY_ALT","NEXT_DAY","NEXT_MONTH","NEXT_QUARTER","NEXT_WEEK","NEXT_YEAR","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARAMETER","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","QUOTE_IDENT","QUOTE_LITERAL","RADIANS","RAISE_ERROR","RAND","RANDOM","RAWTOHEX","REC2XML","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_MATCH_COUNT","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RID_BIT","RIGHT","ROUND","ROUND_TIMESTAMP","RPAD","RTRIM","SECLABEL","SECLABEL_BY_NAME","SECLABEL_TO_CHAR","SECOND","SECONDS_BETWEEN","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTR2","SUBSTR4","SUBSTRB","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","THIS_MONTH","THIS_QUARTER","THIS_WEEK","THIS_YEAR","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF","TIMEZONE","TO_CHAR","TO_CLOB","TO_DATE","TO_HEX","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_UTC_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM","TRIM_ARRAY","TRUNC_TIMESTAMP","TRUNCATE","TRUNC","TYPE_ID","TYPE_NAME","TYPE_SCHEMA","UCASE","UNICODE_STR","UPPER","VALUE","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT","VARCHAR_FORMAT_BIT","VERIFY_GROUP_FOR_USER","VERIFY_ROLE_FOR_USER","VERIFY_TRUSTED_CONTEXT_ROLE_FOR_USER","WEEK","WEEK_ISO","WEEKS_BETWEEN","WIDTH_BUCKET","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLQUERY","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XMLXSROBJECTID","XSLTRANSFORM","YEAR","YEARS_BETWEEN","YMD_BETWEEN","BASE_TABLE","JSON_TABLE","UNNEST","XMLTABLE","RANK","DENSE_RANK","NTILE","LAG","LEAD","ROW_NUMBER","FIRST_VALUE","LAST_VALUE","NTH_VALUE","RATIO_TO_REPORT","CAST"],extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N","U&"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","%","|","&","^","~","\xac=","\xac>","\xac<","!>","!<","^=","^>","^<","||","->","=>"]},formatOptions:{onelineClauses:[...F,...Y],tabularOnelineClauses:Y}},b=O(["SELECT [ALL | DISTINCT]"]),W=O(["WITH [RECURSIVE]","INTO","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY [INPUT SEQUENCE]","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","FOR READ ONLY","OPTIMIZE FOR","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","DELETE","INSERT","FOR SYSTEM NAME"]),g=O(["CREATE [OR REPLACE] TABLE"]),X=O(["CREATE [OR REPLACE] [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","WITH {NC | RR | RS | CS | UR}","DELETE FROM","DROP TABLE","ALTER TABLE","ADD [COLUMN]","ALTER [COLUMN]","DROP [COLUMN]","SET DATA TYPE","SET {GENERATED ALWAYS | GENERATED BY DEFAULT}","SET NOT NULL","SET {NOT HIDDEN | IMPLICITLY HIDDEN}","SET FIELDPROC","DROP {DEFAULT | NOT NULL | GENERATED | IDENTITY | ROW CHANGE TIMESTAMP | FIELDPROC}","TRUNCATE [TABLE]","SET [CURRENT] SCHEMA","SET CURRENT_SCHEMA","ALLOCATE CURSOR","ALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL] SQL","ALTER [SPECIFIC] {FUNCTION | PROCEDURE}","ALTER {MASK | PERMISSION | SEQUENCE | TRIGGER}","ASSOCIATE [RESULT SET] {LOCATOR | LOCATORS}","BEGIN DECLARE SECTION","CALL","CLOSE","COMMENT ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PARAMETER | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","COMMENT ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON PARAMETER SPECIFIC {FUNCTION | PROCEDURE | ROUTINE}","COMMENT ON [TABLE FUNCTION] RETURN COLUMN","COMMENT ON [TABLE FUNCTION] RETURN COLUMN SPECIFIC [PROCEDURE | ROUTINE]","COMMIT [WORK] [HOLD]","CONNECT [TO | RESET] USER","CREATE [OR REPLACE] {ALIAS | FUNCTION | MASK | PERMISSION | PROCEDURE | SEQUENCE | TRIGGER | VARIABLE}","CREATE [ENCODED VECTOR] INDEX","CREATE UNIQUE [WHERE NOT NULL] INDEX","CREATE SCHEMA","CREATE TYPE","DEALLOCATE [SQL] DESCRIPTOR [LOCAL | GLOBAL]","DECLARE CURSOR","DECLARE GLOBAL TEMPORARY TABLE","DECLARE","DESCRIBE CURSOR","DESCRIBE INPUT","DESCRIBE [OUTPUT]","DESCRIBE {PROCEDURE | ROUTINE}","DESCRIBE TABLE","DISCONNECT ALL [SQL]","DISCONNECT [CURRENT]","DROP {ALIAS | INDEX | MASK | PACKAGE | PERMISSION | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT} [IF EXISTS]","DROP [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE} [IF EXISTS]","END DECLARE SECTION","EXECUTE [IMMEDIATE]","FREE LOCATOR","GET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","GET [CURRENT | STACKED] DIAGNOSTICS","GRANT {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","HOLD LOCATOR","INCLUDE","LABEL ON {ALIAS | COLUMN | CONSTRAINT | INDEX | MASK | PACKAGE | PERMISSION | SEQUENCE | TABLE | TRIGGER | VARIABLE | XSROBJECT}","LABEL ON [SPECIFIC] {FUNCTION | PROCEDURE | ROUTINE}","LOCK TABLE","OPEN","PREPARE","REFRESH TABLE","RELEASE","RELEASE [TO] SAVEPOINT","RENAME [TABLE | INDEX] TO","REVOKE {ALL [PRIVILEGES] | ALTER | EXECUTE} ON {FUNCTION | PROCEDURE | ROUTINE | PACKAGE | SCHEMA | SEQUENCE | TABLE | TYPE | VARIABLE | XSROBJECT}","ROLLBACK [WORK] [HOLD | TO SAVEPOINT]","SAVEPOINT","SET CONNECTION","SET CURRENT {DEBUG MODE | DECFLOAT ROUNDING MODE | DEGREE | IMPLICIT XMLPARSE OPTION | TEMPORAL SYSTEM_TIME}","SET [SQL] DESCRIPTOR [LOCAL | GLOBAL]","SET ENCRYPTION PASSWORD","SET OPTION","SET {[CURRENT [FUNCTION]] PATH | CURRENT_PATH}","SET RESULT SETS [WITH RETURN [TO CALLER | TO CLIENT]]","SET SESSION AUTHORIZATION","SET SESSION_USER","SET TRANSACTION","SIGNAL SQLSTATE [VALUE]","TAG","TRANSFER OWNERSHIP OF","WHENEVER {NOT FOUND | SQLERROR | SQLWARNING}"]),v=O(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),x=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT | RIGHT] EXCEPTION JOIN","{INNER | CROSS} JOIN"]),K={name:"db2i",tokenizerOptions:{reservedSelect:b,reservedClauses:[...W,...g,...X],reservedSetOperations:v,reservedJoins:x,reservedKeywordPhrases:O(["ON DELETE","ON UPDATE","SET NULL","{ROWS | RANGE} BETWEEN"]),reservedDataTypePhrases:O([]),reservedKeywords:["ABSENT","ACCORDING","ACCTNG","ACTION","ACTIVATE","ADD","ALIAS","ALL","ALLOCATE","ALLOW","ALTER","AND","ANY","APPEND","APPLNAME","ARRAY","ARRAY_AGG","ARRAY_TRIM","AS","ASC","ASENSITIVE","ASSOCIATE","ATOMIC","ATTACH","ATTRIBUTES","AUTHORIZATION","AUTONOMOUS","BEFORE","BEGIN","BETWEEN","BIND","BSON","BUFFERPOOL","BY","CACHE","CALL","CALLED","CARDINALITY","CASE","CAST","CHECK","CL","CLOSE","CLUSTER","COLLECT","COLLECTION","COLUMN","COMMENT","COMMIT","COMPACT","COMPARISONS","COMPRESS","CONCAT","CONCURRENT","CONDITION","CONNECT","CONNECT_BY_ROOT","CONNECTION","CONSTANT","CONSTRAINT","CONTAINS","CONTENT","CONTINUE","COPY","COUNT","COUNT_BIG","CREATE","CREATEIN","CROSS","CUBE","CUME_DIST","CURRENT","CURRENT_DATE","CURRENT_PATH","CURRENT_SCHEMA","CURRENT_SERVER","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","CURSOR","CYCLE","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYS","DB2GENERAL","DB2GENRL","DB2SQL","DBINFO","DBPARTITIONNAME","DBPARTITIONNUM","DEACTIVATE","DEALLOCATE","DECLARE","DEFAULT","DEFAULTS","DEFER","DEFINE","DEFINITION","DELETE","DELETING","DENSE_RANK","DENSERANK","DESC","DESCRIBE","DESCRIPTOR","DETACH","DETERMINISTIC","DIAGNOSTICS","DISABLE","DISALLOW","DISCONNECT","DISTINCT","DO","DOCUMENT","DROP","DYNAMIC","EACH","ELSE","ELSEIF","EMPTY","ENABLE","ENCODING","ENCRYPTION","END","END-EXEC","ENDING","ENFORCED","ERROR","ESCAPE","EVERY","EXCEPT","EXCEPTION","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTEND","EXTERNAL","EXTRACT","FALSE","FENCED","FETCH","FIELDPROC","FILE","FINAL","FIRST_VALUE","FOR","FOREIGN","FORMAT","FREE","FREEPAGE","FROM","FULL","FUNCTION","GBPCACHE","GENERAL","GENERATED","GET","GLOBAL","GO","GOTO","GRANT","GROUP","HANDLER","HASH","HASH_ROW","HASHED_VALUE","HAVING","HINT","HOLD","HOUR","HOURS","IDENTITY","IF","IGNORE","IMMEDIATE","IMPLICITLY","IN","INCLUDE","INCLUDING","INCLUSIVE","INCREMENT","INDEX","INDEXBP","INDICATOR","INF","INFINITY","INHERIT","INLINE","INNER","INOUT","INSENSITIVE","INSERT","INSERTING","INTEGRITY","INTERPRET","INTERSECT","INTO","IS","ISNULL","ISOLATION","ITERATE","JAVA","JOIN","JSON","JSON_ARRAY","JSON_ARRAYAGG","JSON_EXISTS","JSON_OBJECT","JSON_OBJECTAGG","JSON_QUERY","JSON_TABLE","JSON_VALUE","KEEP","KEY","KEYS","LABEL","LAG","LANGUAGE","LAST_VALUE","LATERAL","LEAD","LEAVE","LEFT","LEVEL2","LIKE","LIMIT","LINKTYPE","LISTAGG","LOCAL","LOCALDATE","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCATOR","LOCK","LOCKSIZE","LOG","LOGGED","LOOP","MAINTAINED","MASK","MATCHED","MATERIALIZED","MAXVALUE","MERGE","MICROSECOND","MICROSECONDS","MINPCTUSED","MINUTE","MINUTES","MINVALUE","MIRROR","MIXED","MODE","MODIFIES","MONTH","MONTHS","NAMESPACE","NAN","NATIONAL","NCHAR","NCLOB","NESTED","NEW","NEW_TABLE","NEXTVAL","NO","NOCACHE","NOCYCLE","NODENAME","NODENUMBER","NOMAXVALUE","NOMINVALUE","NONE","NOORDER","NORMALIZED","NOT","NOTNULL","NTH_VALUE","NTILE","NULL","NULLS","NVARCHAR","OBID","OBJECT","OF","OFF","OFFSET","OLD","OLD_TABLE","OMIT","ON","ONLY","OPEN","OPTIMIZE","OPTION","OR","ORDER","ORDINALITY","ORGANIZE","OUT","OUTER","OVER","OVERLAY","OVERRIDING","PACKAGE","PADDED","PAGE","PAGESIZE","PARAMETER","PART","PARTITION","PARTITIONED","PARTITIONING","PARTITIONS","PASSING","PASSWORD","PATH","PCTFREE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PERIOD","PERMISSION","PIECESIZE","PIPE","PLAN","POSITION","PREPARE","PREVVAL","PRIMARY","PRIOR","PRIQTY","PRIVILEGES","PROCEDURE","PROGRAM","PROGRAMID","QUERY","RANGE","RANK","RATIO_TO_REPORT","RCDFMT","READ","READS","RECOVERY","REFERENCES","REFERENCING","REFRESH","REGEXP_LIKE","RELEASE","RENAME","REPEAT","RESET","RESIGNAL","RESTART","RESULT","RESULT_SET_LOCATOR","RETURN","RETURNING","RETURNS","REVOKE","RID","RIGHT","ROLLBACK","ROLLUP","ROUTINE","ROW","ROW_NUMBER","ROWNUMBER","ROWS","RRN","RUN","SAVEPOINT","SBCS","SCALAR","SCHEMA","SCRATCHPAD","SCROLL","SEARCH","SECOND","SECONDS","SECQTY","SECURED","SELECT","SENSITIVE","SEQUENCE","SESSION","SESSION_USER","SET","SIGNAL","SIMPLE","SKIP","SNAN","SOME","SOURCE","SPECIFIC","SQL","SQLID","SQLIND_DEFAULT","SQLIND_UNASSIGNED","STACKED","START","STARTING","STATEMENT","STATIC","STOGROUP","SUBSTRING","SUMMARY","SYNONYM","SYSTEM_TIME","SYSTEM_USER","TABLE","TABLESPACE","TABLESPACES","TAG","THEN","THREADSAFE","TO","TRANSACTION","TRANSFER","TRIGGER","TRIM","TRIM_ARRAY","TRUE","TRUNCATE","TRY_CAST","TYPE","UNDO","UNION","UNIQUE","UNIT","UNKNOWN","UNNEST","UNTIL","UPDATE","UPDATING","URI","USAGE","USE","USER","USERID","USING","VALUE","VALUES","VARIABLE","VARIANT","VCAT","VERSION","VERSIONING","VIEW","VOLATILE","WAIT","WHEN","WHENEVER","WHERE","WHILE","WITH","WITHIN","WITHOUT","WRAPPED","WRAPPER","WRITE","WRKSTNNAME","XMLAGG","XMLATTRIBUTES","XMLCAST","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLGROUP","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTABLE","XMLTEXT","XMLVALIDATE","XSLTRANSFORM","XSROBJECT","YEAR","YEARS","YES","ZONE"],reservedDataTypes:["ARRAY","BIGINT","BINARY","BIT","BLOB","BOOLEAN","CCSID","CHAR","CHARACTER","CLOB","DATA","DATALINK","DATE","DBCLOB","DECFLOAT","DECIMAL","DEC","DOUBLE","DOUBLE PRECISION","FLOAT","GRAPHIC","INT","INTEGER","LONG","NUMERIC","REAL","ROWID","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR","VARGRAPHIC","XML"],reservedFunctionNames:["ARRAY_AGG","AVG","CORR","CORRELATION","COUNT","COUNT_BIG","COVAR_POP","COVARIANCE","COVAR","COVAR_SAMP","COVARIANCE_SAMP","EVERY","GROUPING","JSON_ARRAYAGG","JSON_OBJECTAGG","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","SOME","STDDEV_POP","STDDEV","STDDEV_SAMP","SUM","VAR_POP","VARIANCE","VAR","VAR_SAMP","VARIANCE_SAMP","XMLAGG","XMLGROUP","ABS","ABSVAL","ACOS","ADD_DAYS","ADD_HOURS","ADD_MINUTES","ADD_MONTHS","ADD_SECONDS","ADD_YEARS","ANTILOG","ARRAY_MAX_CARDINALITY","ARRAY_TRIM","ASCII","ASIN","ATAN","ATAN2","ATANH","BASE64_DECODE","BASE64_ENCODE","BIT_LENGTH","BITAND","BITANDNOT","BITNOT","BITOR","BITXOR","BSON_TO_JSON","CARDINALITY","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","COALESCE","COMPARE_DECFLOAT","CONCAT","CONTAINS","COS","COSH","COT","CURDATE","CURTIME","DATABASE","DATAPARTITIONNAME","DATAPARTITIONNUM","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK_ISO","DAYOFWEEK","DAYOFYEAR","DAYS","DBPARTITIONNAME","DBPARTITIONNUM","DECFLOAT_FORMAT","DECFLOAT_SORTKEY","DECRYPT_BINARY","DECRYPT_BIT","DECRYPT_CHAR","DECRYPT_DB","DEGREES","DIFFERENCE","DIGITS","DLCOMMENT","DLLINKTYPE","DLURLCOMPLETE","DLURLPATH","DLURLPATHONLY","DLURLSCHEME","DLURLSERVER","DLVALUE","DOUBLE_PRECISION","DOUBLE","ENCRPYT","ENCRYPT_AES","ENCRYPT_AES256","ENCRYPT_RC2","ENCRYPT_TDES","EXP","EXTRACT","FIRST_DAY","FLOOR","GENERATE_UNIQUE","GET_BLOB_FROM_FILE","GET_CLOB_FROM_FILE","GET_DBCLOB_FROM_FILE","GET_XML_FILE","GETHINT","GREATEST","HASH_MD5","HASH_ROW","HASH_SHA1","HASH_SHA256","HASH_SHA512","HASH_VALUES","HASHED_VALUE","HEX","HEXTORAW","HOUR","HTML_ENTITY_DECODE","HTML_ENTITY_ENCODE","HTTP_DELETE_BLOB","HTTP_DELETE","HTTP_GET_BLOB","HTTP_GET","HTTP_PATCH_BLOB","HTTP_PATCH","HTTP_POST_BLOB","HTTP_POST","HTTP_PUT_BLOB","HTTP_PUT","IDENTITY_VAL_LOCAL","IFNULL","INSERT","INSTR","INTERPRET","ISFALSE","ISNOTFALSE","ISNOTTRUE","ISTRUE","JSON_ARRAY","JSON_OBJECT","JSON_QUERY","JSON_TO_BSON","JSON_UPDATE","JSON_VALUE","JULIAN_DAY","LAND","LAST_DAY","LCASE","LEAST","LEFT","LENGTH","LN","LNOT","LOCATE_IN_STRING","LOCATE","LOG10","LOR","LOWER","LPAD","LTRIM","MAX_CARDINALITY","MAX","MICROSECOND","MIDNIGHT_SECONDS","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","MQREAD","MQREADCLOB","MQRECEIVE","MQRECEIVECLOB","MQSEND","MULTIPLY_ALT","NEXT_DAY","NORMALIZE_DECFLOAT","NOW","NULLIF","NVL","OCTET_LENGTH","OVERLAY","PI","POSITION","POSSTR","POW","POWER","QUANTIZE","QUARTER","RADIANS","RAISE_ERROR","RANDOM","RAND","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","RID","RIGHT","ROUND_TIMESTAMP","ROUND","RPAD","RRN","RTRIM","SCORE","SECOND","SIGN","SIN","SINH","SOUNDEX","SPACE","SQRT","STRIP","STRLEFT","STRPOS","STRRIGHT","SUBSTR","SUBSTRING","TABLE_NAME","TABLE_SCHEMA","TAN","TANH","TIMESTAMP_FORMAT","TIMESTAMP_ISO","TIMESTAMPDIFF_BIG","TIMESTAMPDIFF","TO_CHAR","TO_CLOB","TO_DATE","TO_NUMBER","TO_TIMESTAMP","TOTALORDER","TRANSLATE","TRIM_ARRAY","TRIM","TRUNC_TIMESTAMP","TRUNC","TRUNCATE","UCASE","UPPER","URL_DECODE","URL_ENCODE","VALUE","VARBINARY_FORMAT","VARCHAR_BIT_FORMAT","VARCHAR_FORMAT_BINARY","VARCHAR_FORMAT","VERIFY_GROUP_FOR_USER","WEEK_ISO","WEEK","WRAP","XMLATTRIBUTES","XMLCOMMENT","XMLCONCAT","XMLDOCUMENT","XMLELEMENT","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROW","XMLSERIALIZE","XMLTEXT","XMLVALIDATE","XOR","XSLTRANSFORM","YEAR","ZONED","BASE_TABLE","HTTP_DELETE_BLOB_VERBOSE","HTTP_DELETE_VERBOSE","HTTP_GET_BLOB_VERBOSE","HTTP_GET_VERBOSE","HTTP_PATCH_BLOB_VERBOSE","HTTP_PATCH_VERBOSE","HTTP_POST_BLOB_VERBOSE","HTTP_POST_VERBOSE","HTTP_PUT_BLOB_VERBOSE","HTTP_PUT_VERBOSE","JSON_TABLE","MQREADALL","MQREADALLCLOB","MQRECEIVEALL","MQRECEIVEALLCLOB","XMLTABLE","UNPACK","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","RATIO_TO_REPORT","ROW_NUMBER","CAST"],nestedBlockComments:!0,extraParens:["[]"],stringTypes:[{quote:"''-qq",prefixes:["G","N"]},{quote:"''-raw",prefixes:["X","BX","GX","UX"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{first:"@#$",rest:"@#$"},paramTypes:{positional:!0,named:[":"]},paramChars:{first:"@#$",rest:"@#$"},operators:["**","\xac=","\xac>","\xac<","!>","!<","||","=>"]},formatOptions:{onelineClauses:[...g,...X],tabularOnelineClauses:X}},w=O(["SELECT [ALL | DISTINCT]"]),J=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL]","HAVING","WINDOW","PARTITION BY","ORDER BY [ALL]","LIMIT","OFFSET","USING SAMPLE","QUALIFY","INSERT [OR REPLACE] INTO","VALUES","DEFAULT VALUES","SET","RETURNING"]),$=O(["CREATE [OR REPLACE] [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),Q=O(["UPDATE","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","TRUNCATE","ALTER TABLE","ADD [COLUMN] [IF NOT EXISTS]","ADD PRIMARY KEY","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","RENAME [COLUMN]","RENAME TO","SET [DATA] TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","CREATE [OR REPLACE] [TEMPORARY | TEMP] {MACRO | FUNCTION}","DROP MACRO [TABLE] [IF EXISTS]","DROP FUNCTION [IF EXISTS]","CREATE [UNIQUE] INDEX [IF NOT EXISTS]","DROP INDEX [IF EXISTS]","CREATE [OR REPLACE] SCHEMA [IF NOT EXISTS]","DROP SCHEMA [IF EXISTS]","CREATE [OR REPLACE] [PERSISTENT | TEMPORARY] SECRET [IF NOT EXISTS]","DROP [PERSISTENT | TEMPORARY] SECRET [IF EXISTS]","CREATE [OR REPLACE] [TEMPORARY | TEMP] SEQUENCE","DROP SEQUENCE [IF EXISTS]","CREATE [OR REPLACE] [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","DROP VIEW [IF EXISTS]","ALTER VIEW","CREATE TYPE","DROP TYPE [IF EXISTS]","ANALYZE","ATTACH [DATABASE] [IF NOT EXISTS]","DETACH [DATABASE] [IF EXISTS]","CALL","[FORCE] CHECKPOINT","COMMENT ON [TABLE | COLUMN | VIEW | INDEX | SEQUENCE | TYPE | MACRO | MACRO TABLE]","COPY [FROM DATABASE]","DESCRIBE","EXPORT DATABASE","IMPORT DATABASE","INSTALL","LOAD","PIVOT","PIVOT_WIDER","UNPIVOT","EXPLAIN [ANALYZE]","SET {LOCAL | SESSION | GLOBAL}","RESET [LOCAL | SESSION | GLOBAL]","{SET | RESET} VARIABLE","SUMMARIZE","BEGIN TRANSACTION","ROLLBACK","COMMIT","ABORT","USE","VACUUM [ANALYZE]","PREPARE","EXECUTE","DEALLOCATE [PREPARE]"]),k=O(["UNION [ALL | BY NAME]","EXCEPT [ALL]","INTERSECT [ALL]"]),Z=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{NATURAL | ASOF} [INNER] JOIN","{NATURAL | ASOF} {LEFT | RIGHT | FULL} [OUTER] JOIN","POSITIONAL JOIN","ANTI JOIN","SEMI JOIN"]),j={name:"duckdb",tokenizerOptions:{reservedSelect:w,reservedClauses:[...J,...$,...Q],reservedSetOperations:k,reservedJoins:Z,reservedKeywordPhrases:O(["{ROWS | RANGE | GROUPS} BETWEEN","SIMILAR TO","IS [NOT] DISTINCT FROM"]),reservedDataTypePhrases:O(["TIMESTAMP WITH TIME ZONE"]),supportsXor:!0,reservedKeywords:["ALL","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ATTACH","ASYMMETRIC","BOTH","CASE","CAST","CHECK","COLLATE","COLUMN","CONSTRAINT","CREATE","DEFAULT","DEFERRABLE","DESC","DESCRIBE","DETACH","DISTINCT","DO","ELSE","END","EXCEPT","FALSE","FETCH","FOR","FOREIGN","FROM","GRANT","GROUP","HAVING","IN","INITIALLY","INTERSECT","INTO","IS","LATERAL","LEADING","LIMIT","NOT","NULL","OFFSET","ON","ONLY","OR","ORDER","PIVOT","PIVOT_LONGER","PIVOT_WIDER","PLACING","PRIMARY","REFERENCES","RETURNING","SELECT","SHOW","SOME","SUMMARIZE","SYMMETRIC","TABLE","THEN","TO","TRAILING","TRUE","UNION","UNIQUE","UNPIVOT","USING","VARIADIC","WHEN","WHERE","WINDOW","WITH"],reservedDataTypes:["ARRAY","BIGINT","BINARY","BIT","BITSTRING","BLOB","BOOL","BOOLEAN","BPCHAR","BYTEA","CHAR","DATE","DATETIME","DEC","DECIMAL","DOUBLE","ENUM","FLOAT","FLOAT4","FLOAT8","GUID","HUGEINT","INET","INT","INT1","INT128","INT16","INT2","INT32","INT4","INT64","INT8","INTEGER","INTEGRAL","INTERVAL","JSON","LIST","LOGICAL","LONG","MAP","NUMERIC","NVARCHAR","OID","REAL","ROW","SHORT","SIGNED","SMALLINT","STRING","STRUCT","TEXT","TIME","TIMESTAMP_MS","TIMESTAMP_NS","TIMESTAMP_S","TIMESTAMP_US","TIMESTAMP","TIMESTAMPTZ","TIMETZ","TINYINT","UBIGINT","UHUGEINT","UINT128","UINT16","UINT32","UINT64","UINT8","UINTEGER","UNION","USMALLINT","UTINYINT","UUID","VARBINARY","VARCHAR"],reservedFunctionNames:["ABS","ACOS","ADD","ADD_PARQUET_KEY","AGE","AGGREGATE","ALIAS","ALL_PROFILING_OUTPUT","ANY_VALUE","APPLY","APPROX_COUNT_DISTINCT","APPROX_QUANTILE","ARBITRARY","ARGMAX","ARGMIN","ARG_MAX","ARG_MAX_NULL","ARG_MIN","ARG_MIN_NULL","ARRAY_AGG","ARRAY_AGGR","ARRAY_AGGREGATE","ARRAY_APPEND","ARRAY_APPLY","ARRAY_CAT","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COSINE_SIMILARITY","ARRAY_CROSS_PRODUCT","ARRAY_DISTANCE","ARRAY_DISTINCT","ARRAY_DOT_PRODUCT","ARRAY_EXTRACT","ARRAY_FILTER","ARRAY_GRADE_UP","ARRAY_HAS","ARRAY_HAS_ALL","ARRAY_HAS_ANY","ARRAY_INDEXOF","ARRAY_INNER_PRODUCT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_POP_BACK","ARRAY_POP_FRONT","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUSH_BACK","ARRAY_PUSH_FRONT","ARRAY_REDUCE","ARRAY_RESIZE","ARRAY_REVERSE","ARRAY_REVERSE_SORT","ARRAY_SELECT","ARRAY_SLICE","ARRAY_SORT","ARRAY_TO_JSON","ARRAY_TO_STRING","ARRAY_TRANSFORM","ARRAY_UNIQUE","ARRAY_VALUE","ARRAY_WHERE","ARRAY_ZIP","ARROW_SCAN","ARROW_SCAN_DUMB","ASCII","ASIN","ATAN","ATAN2","AVG","BASE64","BIN","BITSTRING","BITSTRING_AGG","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_POSITION","BIT_XOR","BOOL_AND","BOOL_OR","CARDINALITY","CBRT","CEIL","CEILING","CENTURY","CHECKPOINT","CHR","COLLATIONS","COL_DESCRIPTION","COMBINE","CONCAT","CONCAT_WS","CONSTANT_OR_NULL","CONTAINS","COPY_DATABASE","CORR","COS","COT","COUNT","COUNT_IF","COUNT_STAR","COVAR_POP","COVAR_SAMP","CREATE_SORT_KEY","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_DATE","CURRENT_LOCALTIME","CURRENT_LOCALTIMESTAMP","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SETTING","CURRENT_USER","CURRVAL","DAMERAU_LEVENSHTEIN","DATABASE_LIST","DATABASE_SIZE","DATEDIFF","DATEPART","DATESUB","DATETRUNC","DATE_ADD","DATE_DIFF","DATE_PART","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECADE","DECODE","DEGREES","DISABLE_CHECKPOINT_ON_SHUTDOWN","DISABLE_OBJECT_CACHE","DISABLE_OPTIMIZER","DISABLE_PRINT_PROGRESS_BAR","DISABLE_PROFILE","DISABLE_PROFILING","DISABLE_PROGRESS_BAR","DISABLE_VERIFICATION","DISABLE_VERIFY_EXTERNAL","DISABLE_VERIFY_FETCH_ROW","DISABLE_VERIFY_PARALLELISM","DISABLE_VERIFY_SERIALIZER","DIVIDE","DUCKDB_COLUMNS","DUCKDB_CONSTRAINTS","DUCKDB_DATABASES","DUCKDB_DEPENDENCIES","DUCKDB_EXTENSIONS","DUCKDB_FUNCTIONS","DUCKDB_INDEXES","DUCKDB_KEYWORDS","DUCKDB_MEMORY","DUCKDB_OPTIMIZERS","DUCKDB_SCHEMAS","DUCKDB_SECRETS","DUCKDB_SEQUENCES","DUCKDB_SETTINGS","DUCKDB_TABLES","DUCKDB_TEMPORARY_FILES","DUCKDB_TYPES","DUCKDB_VIEWS","EDIT","EDITDIST3","ELEMENT_AT","ENABLE_CHECKPOINT_ON_SHUTDOWN","ENABLE_OBJECT_CACHE","ENABLE_OPTIMIZER","ENABLE_PRINT_PROGRESS_BAR","ENABLE_PROFILE","ENABLE_PROFILING","ENABLE_PROGRESS_BAR","ENABLE_VERIFICATION","ENCODE","ENDS_WITH","ENTROPY","ENUM_CODE","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","ENUM_RANGE_BOUNDARY","EPOCH","EPOCH_MS","EPOCH_NS","EPOCH_US","ERA","ERROR","EVEN","EXP","FACTORIAL","FAVG","FDIV","FILTER","FINALIZE","FIRST","FLATTEN","FLOOR","FMOD","FORCE_CHECKPOINT","FORMAT","FORMATREADABLEDECIMALSIZE","FORMATREADABLESIZE","FORMAT_BYTES","FORMAT_PG_TYPE","FORMAT_TYPE","FROM_BASE64","FROM_BINARY","FROM_HEX","FROM_JSON","FROM_JSON_STRICT","FSUM","FUNCTIONS","GAMMA","GCD","GENERATE_SERIES","GENERATE_SUBSCRIPTS","GEN_RANDOM_UUID","GEOMEAN","GEOMETRIC_MEAN","GETENV","GET_BIT","GET_BLOCK_SIZE","GET_CURRENT_TIME","GET_CURRENT_TIMESTAMP","GLOB","GRADE_UP","GREATEST","GREATEST_COMMON_DIVISOR","GROUP_CONCAT","HAMMING","HASH","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HEX","HISTOGRAM","HOUR","ICU_CALENDAR_NAMES","ICU_SORT_KEY","ILIKE_ESCAPE","IMPORT_DATABASE","INDEX_SCAN","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","INSTR","IN_SEARCH_PATH","ISFINITE","ISINF","ISNAN","ISODOW","ISOYEAR","JACCARD","JARO_SIMILARITY","JARO_WINKLER_SIMILARITY","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_CONTAINS","JSON_DESERIALIZE_SQL","JSON_EXECUTE_SERIALIZED_SQL","JSON_EXTRACT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_EXTRACT_STRING","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_GROUP_STRUCTURE","JSON_KEYS","JSON_MERGE_PATCH","JSON_OBJECT","JSON_QUOTE","JSON_SERIALIZE_PLAN","JSON_SERIALIZE_SQL","JSON_STRUCTURE","JSON_TRANSFORM","JSON_TRANSFORM_STRICT","JSON_TYPE","JSON_VALID","JULIAN","KAHAN_SUM","KURTOSIS","KURTOSIS_POP","LAST","LAST_DAY","LCASE","LCM","LEAST","LEAST_COMMON_MULTIPLE","LEFT","LEFT_GRAPHEME","LEN","LENGTH","LENGTH_GRAPHEME","LEVENSHTEIN","LGAMMA","LIKE_ESCAPE","LIST","LISTAGG","LIST_AGGR","LIST_AGGREGATE","LIST_ANY_VALUE","LIST_APPEND","LIST_APPLY","LIST_APPROX_COUNT_DISTINCT","LIST_AVG","LIST_BIT_AND","LIST_BIT_OR","LIST_BIT_XOR","LIST_BOOL_AND","LIST_BOOL_OR","LIST_CAT","LIST_CONCAT","LIST_CONTAINS","LIST_COSINE_SIMILARITY","LIST_COUNT","LIST_DISTANCE","LIST_DISTINCT","LIST_DOT_PRODUCT","LIST_ELEMENT","LIST_ENTROPY","LIST_EXTRACT","LIST_FILTER","LIST_FIRST","LIST_GRADE_UP","LIST_HAS","LIST_HAS_ALL","LIST_HAS_ANY","LIST_HISTOGRAM","LIST_INDEXOF","LIST_INNER_PRODUCT","LIST_INTERSECT","LIST_KURTOSIS","LIST_KURTOSIS_POP","LIST_LAST","LIST_MAD","LIST_MAX","LIST_MEDIAN","LIST_MIN","LIST_MODE","LIST_PACK","LIST_POSITION","LIST_PREPEND","LIST_PRODUCT","LIST_REDUCE","LIST_RESIZE","LIST_REVERSE","LIST_REVERSE_SORT","LIST_SELECT","LIST_SEM","LIST_SKEWNESS","LIST_SLICE","LIST_SORT","LIST_STDDEV_POP","LIST_STDDEV_SAMP","LIST_STRING_AGG","LIST_SUM","LIST_TRANSFORM","LIST_UNIQUE","LIST_VALUE","LIST_VAR_POP","LIST_VAR_SAMP","LIST_WHERE","LIST_ZIP","LN","LOG","LOG10","LOG2","LOWER","LPAD","LSMODE","LTRIM","MAD","MAKE_DATE","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","MAP","MAP_CONCAT","MAP_ENTRIES","MAP_EXTRACT","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","MAX","MAX_BY","MD5","MD5_NUMBER","MD5_NUMBER_LOWER","MD5_NUMBER_UPPER","MEAN","MEDIAN","METADATA_INFO","MICROSECOND","MILLENNIUM","MILLISECOND","MIN","MINUTE","MIN_BY","MISMATCHES","MOD","MODE","MONTH","MONTHNAME","MULTIPLY","NEXTAFTER","NEXTVAL","NFC_NORMALIZE","NOT_ILIKE_ESCAPE","NOT_LIKE_ESCAPE","NOW","NULLIF","OBJ_DESCRIPTION","OCTET_LENGTH","ORD","PARQUET_FILE_METADATA","PARQUET_KV_METADATA","PARQUET_METADATA","PARQUET_SCAN","PARQUET_SCHEMA","PARSE_DIRNAME","PARSE_DIRPATH","PARSE_FILENAME","PARSE_PATH","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONVERSION_IS_VISIBLE","PG_FUNCTION_IS_VISIBLE","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IS_OTHER_TEMP_SCHEMA","PG_MY_TEMP_SCHEMA","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_POSTMASTER_START_TIME","PG_SIZE_PRETTY","PG_TABLE_IS_VISIBLE","PG_TIMEZONE_NAMES","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PI","PLATFORM","POSITION","POW","POWER","PRAGMA_COLLATIONS","PRAGMA_DATABASE_SIZE","PRAGMA_METADATA_INFO","PRAGMA_PLATFORM","PRAGMA_SHOW","PRAGMA_STORAGE_INFO","PRAGMA_TABLE_INFO","PRAGMA_USER_AGENT","PRAGMA_VERSION","PREFIX","PRINTF","PRODUCT","QUANTILE","QUANTILE_CONT","QUANTILE_DISC","QUARTER","RADIANS","RANDOM","RANGE","READFILE","READ_BLOB","READ_CSV","READ_CSV_AUTO","READ_JSON","READ_JSON_AUTO","READ_JSON_OBJECTS","READ_JSON_OBJECTS_AUTO","READ_NDJSON","READ_NDJSON_AUTO","READ_NDJSON_OBJECTS","READ_PARQUET","READ_TEXT","REDUCE","REGEXP_ESCAPE","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_FULL_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REPEAT","REPEAT_ROW","REPLACE","RESERVOIR_QUANTILE","REVERSE","RIGHT","RIGHT_GRAPHEME","ROUND","ROUNDBANKERS","ROUND_EVEN","ROW","ROW_TO_JSON","RPAD","RTRIM","SECOND","SEM","SEQ_SCAN","SESSION_USER","SETSEED","SET_BIT","SHA256","SHA3","SHELL_ADD_SCHEMA","SHELL_ESCAPE_CRNL","SHELL_IDQUOTE","SHELL_MODULE_SCHEMA","SHELL_PUTSNL","SHOBJ_DESCRIPTION","SHOW","SHOW_DATABASES","SHOW_TABLES","SHOW_TABLES_EXPANDED","SIGN","SIGNBIT","SIN","SKEWNESS","SNIFF_CSV","SPLIT","SPLIT_PART","SQL_AUTO_COMPLETE","SQRT","STARTS_WITH","STATS","STDDEV","STDDEV_POP","STDDEV_SAMP","STORAGE_INFO","STRFTIME","STRING_AGG","STRING_SPLIT","STRING_SPLIT_REGEX","STRING_TO_ARRAY","STRIP_ACCENTS","STRLEN","STRPOS","STRPTIME","STRUCT_EXTRACT","STRUCT_INSERT","STRUCT_PACK","STR_SPLIT","STR_SPLIT_REGEX","SUBSTR","SUBSTRING","SUBSTRING_GRAPHEME","SUBTRACT","SUFFIX","SUM","SUMKAHAN","SUMMARY","SUM_NO_OVERFLOW","TABLE_INFO","TAN","TEST_ALL_TYPES","TEST_VECTOR_TYPES","TIMEZONE","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIME_BUCKET","TODAY","TO_BASE","TO_BASE64","TO_BINARY","TO_CENTURIES","TO_DAYS","TO_DECADES","TO_HEX","TO_HOURS","TO_JSON","TO_MICROSECONDS","TO_MILLENNIA","TO_MILLISECONDS","TO_MINUTES","TO_MONTHS","TO_SECONDS","TO_TIMESTAMP","TO_WEEKS","TO_YEARS","TRANSACTION_TIMESTAMP","TRANSLATE","TRIM","TRUNC","TRY_STRPTIME","TXID_CURRENT","TYPEOF","UCASE","UNBIN","UNHEX","UNICODE","UNION_EXTRACT","UNION_TAG","UNION_VALUE","UNNEST","UNPIVOT_LIST","UPPER","USER","USER_AGENT","UUID","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_TYPE","VERIFY_EXTERNAL","VERIFY_FETCH_ROW","VERIFY_PARALLELISM","VERIFY_SERIALIZER","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","WHICH_SECRET","WRITEFILE","XOR","YEAR","YEARWEEK","CAST","COALESCE","RANK","ROW_NUMBER"],nestedBlockComments:!0,extraParens:["[]","{}"],underscoresInNumbers:!0,stringTypes:["$$","''-qq",{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:['""-qq'],identChars:{rest:"$"},paramTypes:{positional:!0,numbered:["$"],quoted:["$"]},operators:["//","%","**","^","!","&","|","~","<<",">>","::","==","->","->>",":",":=","=>","~~","!~~","~~*","!~~*","~~~","~","!~","~*","!~*","^@","||",">>=","<<="]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...$,...Q],tabularOnelineClauses:Q}},q=O(["SELECT [ALL | DISTINCT]"]),z=O(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT INTO [TABLE]","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED [THEN]","UPDATE SET","INSERT [VALUES]","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),EE=O(["CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS]"]),ET=O(["CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","RENAME TO","TRUNCATE [TABLE]","ALTER","CREATE","USE","DESCRIBE","DROP","FETCH","SHOW","STORED AS","STORED BY","ROW FORMAT"]),Ee=O(["UNION [ALL | DISTINCT]"]),ER=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","LEFT SEMI JOIN"]),EA={name:"hive",tokenizerOptions:{reservedSelect:q,reservedClauses:[...z,...EE,...ET],reservedSetOperations:Ee,reservedJoins:ER,reservedKeywordPhrases:O(["{ROWS | RANGE} BETWEEN"]),reservedDataTypePhrases:O([]),reservedKeywords:["ADD","ADMIN","AFTER","ANALYZE","ARCHIVE","ASC","BEFORE","BUCKET","BUCKETS","CASCADE","CHANGE","CLUSTER","CLUSTERED","CLUSTERSTATUS","COLLECTION","COLUMNS","COMMENT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONTINUE","DATA","DATABASES","DATETIME","DAY","DBPROPERTIES","DEFERRED","DEFINED","DELIMITED","DEPENDENCY","DESC","DIRECTORIES","DIRECTORY","DISABLE","DISTRIBUTE","ELEM_TYPE","ENABLE","ESCAPED","EXCLUSIVE","EXPLAIN","EXPORT","FIELDS","FILE","FILEFORMAT","FIRST","FORMAT","FORMATTED","FUNCTIONS","HOLD_DDLTIME","HOUR","IDXPROPERTIES","IGNORE","INDEX","INDEXES","INPATH","INPUTDRIVER","INPUTFORMAT","ITEMS","JAR","KEYS","KEY_TYPE","LIMIT","LINES","LOAD","LOCATION","LOCK","LOCKS","LOGICAL","LONG","MAPJOIN","MATERIALIZED","METADATA","MINUS","MINUTE","MONTH","MSCK","NOSCAN","NO_DROP","OFFLINE","OPTION","OUTPUTDRIVER","OUTPUTFORMAT","OVERWRITE","OWNER","PARTITIONED","PARTITIONS","PLUS","PRETTY","PRINCIPALS","PROTECTION","PURGE","READ","READONLY","REBUILD","RECORDREADER","RECORDWRITER","RELOAD","RENAME","REPAIR","REPLACE","REPLICATION","RESTRICT","REWRITE","ROLE","ROLES","SCHEMA","SCHEMAS","SECOND","SEMI","SERDE","SERDEPROPERTIES","SERVER","SETS","SHARED","SHOW","SHOW_DATABASE","SKEWED","SORT","SORTED","SSL","STATISTICS","STORED","STREAMTABLE","STRING","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","TINYINT","TOUCH","TRANSACTIONS","UNARCHIVE","UNDO","UNIONTYPE","UNLOCK","UNSET","UNSIGNED","URI","USE","UTC","UTCTIMESTAMP","VALUE_TYPE","VIEW","WHILE","YEAR","AUTOCOMMIT","ISOLATION","LEVEL","OFFSET","SNAPSHOT","TRANSACTION","WORK","WRITE","ABORT","KEY","LAST","NORELY","NOVALIDATE","NULLS","RELY","VALIDATE","DETAIL","DOW","EXPRESSION","OPERATOR","QUARTER","SUMMARY","VECTORIZATION","WEEK","YEARS","MONTHS","WEEKS","DAYS","HOURS","MINUTES","SECONDS","TIMESTAMPTZ","ZONE","ALL","ALTER","AND","AS","AUTHORIZATION","BETWEEN","BOTH","BY","CASE","CAST","COLUMN","CONF","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIMESTAMP","CURSOR","DATABASE","DELETE","DESCRIBE","DISTINCT","DROP","ELSE","END","EXCHANGE","EXISTS","EXTENDED","EXTERNAL","FALSE","FETCH","FOLLOWING","FOR","FROM","FULL","FUNCTION","GRANT","GROUP","GROUPING","HAVING","IF","IMPORT","IN","INNER","INSERT","INTERSECT","INTO","IS","JOIN","LATERAL","LEFT","LESS","LIKE","LOCAL","MACRO","MORE","NONE","NOT","NULL","OF","ON","OR","ORDER","OUT","OUTER","OVER","PARTIALSCAN","PARTITION","PERCENT","PRECEDING","PRESERVE","PROCEDURE","RANGE","READS","REDUCE","REVOKE","RIGHT","ROLLUP","ROW","ROWS","SELECT","SET","TABLE","TABLESAMPLE","THEN","TO","TRANSFORM","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNION","UNIQUEJOIN","UPDATE","USER","USING","UTC_TMESTAMP","VALUES","WHEN","WHERE","WINDOW","WITH","COMMIT","ONLY","REGEXP","RLIKE","ROLLBACK","START","CACHE","CONSTRAINT","FOREIGN","PRIMARY","REFERENCES","DAYOFWEEK","EXTRACT","FLOOR","VIEWS","TIME","SYNC","TEXTFILE","SEQUENCEFILE","ORC","CSV","TSV","PARQUET","AVRO","RCFILE","JSONFILE","INPUTFORMAT","OUTPUTFORMAT"],reservedDataTypes:["ARRAY","BIGINT","BINARY","BOOLEAN","CHAR","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MAP","NUMERIC","PRECISION","SMALLINT","STRUCT","TIMESTAMP","VARCHAR"],reservedFunctionNames:["ABS","ACOS","ASIN","ATAN","BIN","BROUND","CBRT","CEIL","CEILING","CONV","COS","DEGREES","EXP","FACTORIAL","FLOOR","GREATEST","HEX","LEAST","LN","LOG","LOG10","LOG2","NEGATIVE","PI","PMOD","POSITIVE","POW","POWER","RADIANS","RAND","ROUND","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIN","SQRT","TAN","UNHEX","WIDTH_BUCKET","ARRAY_CONTAINS","MAP_KEYS","MAP_VALUES","SIZE","SORT_ARRAY","BINARY","CAST","ADD_MONTHS","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","QUARTER","SECOND","TIMESTAMP","TO_DATE","TO_UTC_TIMESTAMP","TRUNC","UNIX_TIMESTAMP","WEEKOFYEAR","YEAR","ASSERT_TRUE","COALESCE","IF","ISNOTNULL","ISNULL","NULLIF","NVL","ASCII","BASE64","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONTEXT_NGRAMS","DECODE","ELT","ENCODE","FIELD","FIND_IN_SET","FORMAT_NUMBER","GET_JSON_OBJECT","IN_FILE","INITCAP","INSTR","LCASE","LENGTH","LEVENSHTEIN","LOCATE","LOWER","LPAD","LTRIM","NGRAMS","OCTET_LENGTH","PARSE_URL","PRINTF","QUOTE","REGEXP_EXTRACT","REGEXP_REPLACE","REPEAT","REVERSE","RPAD","RTRIM","SENTENCES","SOUNDEX","SPACE","SPLIT","STR_TO_MAP","SUBSTR","SUBSTRING","TRANSLATE","TRIM","UCASE","UNBASE64","UPPER","MASK","MASK_FIRST_N","MASK_HASH","MASK_LAST_N","MASK_SHOW_FIRST_N","MASK_SHOW_LAST_N","AES_DECRYPT","AES_ENCRYPT","CRC32","CURRENT_DATABASE","CURRENT_USER","HASH","JAVA_METHOD","LOGGED_IN_USER","MD5","REFLECT","SHA","SHA1","SHA2","SURROGATE_KEY","VERSION","AVG","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COVAR_POP","COVAR_SAMP","HISTOGRAM_NUMERIC","MAX","MIN","NTILE","PERCENTILE","PERCENTILE_APPROX","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","EXPLODE","INLINE","JSON_TUPLE","PARSE_URL_TUPLE","POSEXPLODE","STACK","LEAD","LAG","FIRST_VALUE","LAST_VALUE","RANK","ROW_NUMBER","DENSE_RANK","CUME_DIST","PERCENT_RANK","NTILE"],extraParens:["[]"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||"]},formatOptions:{onelineClauses:[...EE,...ET],tabularOnelineClauses:ET}};function Et(E){return E.map((T,e)=>{let A=E[e+1]||P;if(l.SET(T)&&"("===A.text)return Object.assign(Object.assign({},T),{type:R.RESERVED_FUNCTION_NAME});let t=E[e-1]||P;return l.VALUES(T)&&"="===t.text?Object.assign(Object.assign({},T),{type:R.RESERVED_FUNCTION_NAME}):T})}let ES=O(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),EO=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET","RETURNING"]),EI=O(["CREATE [OR REPLACE] [TEMPORARY] TABLE [IF NOT EXISTS]"]),EN=O(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] [IGNORE] TABLE [IF EXISTS]","ADD [COLUMN] [IF NOT EXISTS]","{CHANGE | MODIFY} [COLUMN] [IF EXISTS]","DROP [COLUMN] [IF EXISTS]","RENAME [TO]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","SET {VISIBLE | INVISIBLE}","TRUNCATE [TABLE]","ALTER DATABASE","ALTER DATABASE COMMENT","ALTER EVENT","ALTER FUNCTION","ALTER PROCEDURE","ALTER SCHEMA","ALTER SCHEMA COMMENT","ALTER SEQUENCE","ALTER SERVER","ALTER USER","ALTER VIEW","ANALYZE","ANALYZE TABLE","BACKUP LOCK","BACKUP STAGE","BACKUP UNLOCK","BEGIN","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHECK TABLE","CHECK VIEW","CHECKSUM TABLE","COMMIT","CREATE AGGREGATE FUNCTION","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE INDEX","CREATE PROCEDURE","CREATE ROLE","CREATE SEQUENCE","CREATE SERVER","CREATE SPATIAL INDEX","CREATE TRIGGER","CREATE UNIQUE INDEX","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP INDEX","DROP PREPARE","DROP PROCEDURE","DROP ROLE","DROP SEQUENCE","DROP SERVER","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GET DIAGNOSTICS","GET DIAGNOSTICS CONDITION","GRANT","HANDLER","HELP","INSTALL PLUGIN","INSTALL SONAME","KILL","LOAD DATA INFILE","LOAD INDEX INTO CACHE","LOAD XML INFILE","LOCK TABLE","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","PURGE MASTER LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","REPAIR VIEW","RESET MASTER","RESET QUERY CACHE","RESET REPLICA","RESET SLAVE","RESIGNAL","REVOKE","ROLLBACK","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET GLOBAL TRANSACTION","SET NAMES","SET PASSWORD","SET ROLE","SET STATEMENT","SET TRANSACTION","SHOW","SHOW ALL REPLICAS STATUS","SHOW ALL SLAVES STATUS","SHOW AUTHORS","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW BINLOG STATUS","SHOW CHARACTER SET","SHOW CLIENT_STATISTICS","SHOW COLLATION","SHOW COLUMNS","SHOW CONTRIBUTORS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PACKAGE","SHOW CREATE PACKAGE BODY","SHOW CREATE PROCEDURE","SHOW CREATE SEQUENCE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINE INNODB STATUS","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW EXPLAIN","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW INDEXES","SHOW INDEX_STATISTICS","SHOW KEYS","SHOW LOCALES","SHOW MASTER LOGS","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PACKAGE BODY CODE","SHOW PACKAGE BODY STATUS","SHOW PACKAGE STATUS","SHOW PLUGINS","SHOW PLUGINS SONAME","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW QUERY_RESPONSE_TIME","SHOW RELAYLOG EVENTS","SHOW REPLICA","SHOW REPLICA HOSTS","SHOW REPLICA STATUS","SHOW SCHEMAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW SLAVE STATUS","SHOW STATUS","SHOW STORAGE ENGINES","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW USER_STATISTICS","SHOW VARIABLES","SHOW WARNINGS","SHOW WSREP_MEMBERSHIP","SHOW WSREP_STATUS","SHUTDOWN","SIGNAL","START ALL REPLICAS","START ALL SLAVES","START REPLICA","START SLAVE","START TRANSACTION","STOP ALL REPLICAS","STOP ALL SLAVES","STOP REPLICA","STOP SLAVE","UNINSTALL PLUGIN","UNINSTALL SONAME","UNLOCK TABLE","USE","XA BEGIN","XA COMMIT","XA END","XA PREPARE","XA RECOVER","XA ROLLBACK","XA START"]),Er=O(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]","MINUS [ALL | DISTINCT]"]),En=O(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),Es={name:"mariadb",tokenizerOptions:{reservedSelect:ES,reservedClauses:[...EO,...EI,...EN],reservedSetOperations:Er,reservedJoins:En,reservedKeywordPhrases:O(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),reservedDataTypePhrases:O([]),supportsXor:!0,reservedKeywords:["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DELETE_DOMAIN_ID","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DO_DOMAIN_IDS","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERAL","GRANT","GROUP","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IGNORE_DOMAIN_IDS","IGNORE_SERVER_IDS","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MASTER_HEARTBEAT_PERIOD","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OFFSET","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PAGE_CHECKSUM","PARSE_VCOL_EXPR","PARTITION","POSITION","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","READ_WRITE","RECURSIVE","REF_SYSTEM_ID","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","RETURNING","REVOKE","RIGHT","RLIKE","ROW_NUMBER","ROWS","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SLOW","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_AUTO_RECALC","STATS_PERSISTENT","STATS_SAMPLE_PAGES","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],reservedDataTypes:["BIGINT","BINARY","BIT","BLOB","CHAR BYTE","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],reservedFunctionNames:["ADDDATE","ADD_MONTHS","BIT_AND","BIT_OR","BIT_XOR","CAST","COUNT","CUME_DIST","CURDATE","CURTIME","DATE_ADD","DATE_SUB","DATE_FORMAT","DECODE","DENSE_RANK","EXTRACT","FIRST_VALUE","GROUP_CONCAT","JSON_ARRAYAGG","JSON_OBJECTAGG","LAG","LEAD","MAX","MEDIAN","MID","MIN","NOW","NTH_VALUE","NTILE","POSITION","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","ROW_NUMBER","SESSION_USER","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUBDATE","SUBSTR","SUBSTRING","SUM","SYSTEM_USER","TRIM","TRIM_ORACLE","VARIANCE","VAR_POP","VAR_SAMP","ABS","ACOS","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ASIN","ATAN","ATAN2","BENCHMARK","BIN","BINLOG_GTID_POS","BIT_COUNT","BIT_LENGTH","CEIL","CEILING","CHARACTER_LENGTH","CHAR_LENGTH","CHR","COERCIBILITY","COLUMN_CHECK","COLUMN_EXISTS","COLUMN_LIST","COLUMN_JSON","COMPRESS","CONCAT","CONCAT_OPERATOR_ORACLE","CONCAT_WS","CONNECTION_ID","CONV","CONVERT_TZ","COS","COT","CRC32","DATEDIFF","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEGREES","DECODE_HISTOGRAM","DECODE_ORACLE","DES_DECRYPT","DES_ENCRYPT","ELT","ENCODE","ENCRYPT","EXP","EXPORT_SET","EXTRACTVALUE","FIELD","FIND_IN_SET","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GET_LOCK","GREATEST","HEX","IFNULL","INSTR","ISNULL","IS_FREE_LOCK","IS_USED_LOCK","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_COMPACT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_DETAILED","JSON_EXISTS","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_LOOSE","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_QUERY","JSON_QUOTE","JSON_OBJECT","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_SEARCH","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAST_DAY","LAST_INSERT_ID","LCASE","LEAST","LENGTH","LENGTHB","LN","LOAD_FILE","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LPAD_ORACLE","LTRIM","LTRIM_ORACLE","MAKEDATE","MAKETIME","MAKE_SET","MASTER_GTID_WAIT","MASTER_POS_WAIT","MD5","MONTHNAME","NAME_CONST","NVL","NVL2","OCT","OCTET_LENGTH","ORD","PERIOD_ADD","PERIOD_DIFF","PI","POW","POWER","QUOTE","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","RADIANS","RAND","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPLACE_ORACLE","REVERSE","ROUND","RPAD","RPAD_ORACLE","RTRIM","RTRIM_ORACLE","SEC_TO_TIME","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SPACE","SQRT","STRCMP","STR_TO_DATE","SUBSTR_ORACLE","SUBSTRING_INDEX","SUBTIME","SYS_GUID","TAN","TIMEDIFF","TIME_FORMAT","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_SECONDS","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UUID","UUID_SHORT","VERSION","WEEKDAY","WEEKOFYEAR","WSREP_LAST_WRITTEN_GTID","WSREP_LAST_SEEN_GTID","WSREP_SYNC_WAIT_UPTO_GTID","YEARWEEK","COALESCE","NULLIF"],stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","&&","||","!","*.*"],postProcess:Et},formatOptions:{onelineClauses:[...EI,...EN],tabularOnelineClauses:EN}},Eo=O(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),EC=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),EL=O(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),Ea=O(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER EVENT","ALTER FUNCTION","ALTER INSTANCE","ALTER LOGFILE GROUP","ALTER PROCEDURE","ALTER RESOURCE GROUP","ALTER SERVER","ALTER TABLESPACE","ALTER USER","ALTER VIEW","ANALYZE TABLE","BINLOG","CACHE INDEX","CALL","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK TABLE","CHECKSUM TABLE","CLONE","COMMIT","CREATE DATABASE","CREATE EVENT","CREATE FUNCTION","CREATE FUNCTION","CREATE INDEX","CREATE LOGFILE GROUP","CREATE PROCEDURE","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SERVER","CREATE SPATIAL REFERENCE SYSTEM","CREATE TABLESPACE","CREATE TRIGGER","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP EVENT","DROP FUNCTION","DROP FUNCTION","DROP INDEX","DROP LOGFILE GROUP","DROP PROCEDURE","DROP RESOURCE GROUP","DROP ROLE","DROP SERVER","DROP SPATIAL REFERENCE SYSTEM","DROP TABLESPACE","DROP TRIGGER","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","GRANT","HANDLER","HELP","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE EVENT","SHOW CREATE FUNCTION","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE TRIGGER","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SOURCE_POS_WAIT","START GROUP_REPLICATION","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP REPLICA","STOP SLAVE","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),E_=O(["UNION [ALL | DISTINCT]"]),Ei=O(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),EP={name:"mysql",tokenizerOptions:{reservedSelect:Eo,reservedClauses:[...EC,...EL,...Ea],reservedSetOperations:E_,reservedJoins:Ei,reservedKeywordPhrases:O(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),reservedDataTypePhrases:O([]),supportsXor:!0,reservedKeywords:["ACCESSIBLE","ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CUBE","CUME_DIST","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DENSE_RANK","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","EMPTY","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FIRST_VALUE","FOR","FORCE","FOREIGN","FROM","FULLTEXT","FUNCTION","GENERATED","GET","GRANT","GROUP","GROUPING","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","INTERSECT","INTERVAL","INTO","IO_AFTER_GTIDS","IO_BEFORE_GTIDS","IS","ITERATE","JOIN","JSON_TABLE","KEY","KEYS","KILL","LAG","LAST_VALUE","LATERAL","LEAD","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOOP","LOW_PRIORITY","MASTER_BIND","MASTER_SSL_VERIFY_SERVER_CERT","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NOT","NO_WRITE_TO_BINLOG","NTH_VALUE","NTILE","NULL","OF","ON","OPTIMIZE","OPTIMIZER_COSTS","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PERCENT_RANK","PRIMARY","PROCEDURE","PURGE","RANGE","RANK","READ","READS","READ_WRITE","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESIGNAL","RESTRICT","RETURN","REVOKE","RIGHT","RLIKE","ROW","ROWS","ROW_NUMBER","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STORED","STRAIGHT_JOIN","SYSTEM","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNDO","UNION","UNIQUE","UNLOCK","UNSIGNED","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],reservedDataTypes:["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],reservedFunctionNames:["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BINARY","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","CAN_ACCESS_COLUMN","CAN_ACCESS_DATABASE","CAN_ACCESS_TABLE","CAN_ACCESS_USER","CAN_ACCESS_VIEW","CAST","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DEFAULT","DEGREES","DENSE_RANK","DIV","ELT","EXP","EXPORT_SET","EXTRACT","EXTRACTVALUE","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_PICO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOMCOLLECTION","GEOMETRYCOLLECTION","GET_DD_COLUMN_PRIVILEGES","GET_DD_CREATE_OPTIONS","GET_DD_INDEX_SUB_PART_LENGTH","GET_FORMAT","GET_LOCK","GREATEST","GROUP_CONCAT","GROUPING","GTID_SUBSET","GTID_SUBTRACT","HEX","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INSERT","INSTR","INTERNAL_AUTO_INCREMENT","INTERNAL_AVG_ROW_LENGTH","INTERNAL_CHECK_TIME","INTERNAL_CHECKSUM","INTERNAL_DATA_FREE","INTERNAL_DATA_LENGTH","INTERNAL_DD_CHAR_LENGTH","INTERNAL_GET_COMMENT_OR_ERROR","INTERNAL_GET_ENABLED_ROLE_JSON","INTERNAL_GET_HOSTNAME","INTERNAL_GET_USERNAME","INTERNAL_GET_VIEW_WARNING_OR_ERROR","INTERNAL_INDEX_COLUMN_CARDINALITY","INTERNAL_INDEX_LENGTH","INTERNAL_IS_ENABLED_ROLE","INTERNAL_IS_MANDATORY_ROLE","INTERNAL_KEYS_DISABLED","INTERNAL_MAX_DATA_LENGTH","INTERNAL_TABLE_ROWS","INTERNAL_UPDATE_TIME","INTERVAL","IS","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS NOT","IS NOT NULL","IS NULL","IS_USED_LOCK","IS_UUID","ISNULL","JSON_ARRAY","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_ARRAYAGG","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SCHEMA_VALID","JSON_SCHEMA_VALIDATION_REPORT","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TABLE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","JSON_VALUE","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LINESTRING","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MATCH","MAX","MBRCONTAINS","MBRCOVEREDBY","MBRCOVERS","MBRDISJOINT","MBREQUALS","MBRINTERSECTS","MBROVERLAPS","MBRTOUCHES","MBRWITHIN","MD5","MEMBER OF","MICROSECOND","MID","MIN","MINUTE","MOD","MONTH","MONTHNAME","MULTILINESTRING","MULTIPOINT","MULTIPOLYGON","NAME_CONST","NOT","NOT IN","NOT LIKE","NOT REGEXP","NOW","NTH_VALUE","NTILE","NULLIF","OCT","OCTET_LENGTH","ORD","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","POINT","POLYGON","POSITION","POW","POWER","PS_CURRENT_THREAD_ID","PS_THREAD_ID","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROLES_GRAPHML","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SHA1","SHA2","SIGN","SIN","SLEEP","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","ST_AREA","ST_ASBINARY","ST_ASGEOJSON","ST_ASTEXT","ST_BUFFER","ST_BUFFER_STRATEGY","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_CONVEXHULL","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DISTANCE_SPHERE","ST_ENDPOINT","ST_ENVELOPE","ST_EQUALS","ST_EXTERIORRING","ST_FRECHETDISTANCE","ST_GEOHASH","ST_GEOMCOLLFROMTEXT","ST_GEOMCOLLFROMWKB","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMGEOJSON","ST_GEOMFROMTEXT","ST_GEOMFROMWKB","ST_HAUSDORFFDISTANCE","ST_INTERIORRINGN","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISSIMPLE","ST_ISVALID","ST_LATFROMGEOHASH","ST_LATITUDE","ST_LENGTH","ST_LINEFROMTEXT","ST_LINEFROMWKB","ST_LINEINTERPOLATEPOINT","ST_LINEINTERPOLATEPOINTS","ST_LONGFROMGEOHASH","ST_LONGITUDE","ST_MAKEENVELOPE","ST_MLINEFROMTEXT","ST_MLINEFROMWKB","ST_MPOINTFROMTEXT","ST_MPOINTFROMWKB","ST_MPOLYFROMTEXT","ST_MPOLYFROMWKB","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINTATDISTANCE","ST_POINTFROMGEOHASH","ST_POINTFROMTEXT","ST_POINTFROMWKB","ST_POINTN","ST_POLYFROMTEXT","ST_POLYFROMWKB","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SWAPXY","ST_SYMDIFFERENCE","ST_TOUCHES","ST_TRANSFORM","ST_UNION","ST_VALIDATE","ST_WITHIN","ST_X","ST_Y","STATEMENT_DIGEST","STATEMENT_DIGEST_TEXT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRIM","TRUNCATE","UCASE","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VALUES","VAR_POP","VAR_SAMP","VARIANCE","VERSION","WAIT_FOR_EXECUTED_GTID_SET","WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:Et},formatOptions:{onelineClauses:[...EL,...Ea],tabularOnelineClauses:Ea}},ED=O(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),El=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [LOW_PRIORITY | DELAYED | HIGH_PRIORITY] [IGNORE] [INTO]","REPLACE [LOW_PRIORITY | DELAYED] [INTO]","VALUES","ON DUPLICATE KEY UPDATE","SET"]),Ec=O(["CREATE [TEMPORARY] TABLE [IF NOT EXISTS]"]),EU=O(["CREATE [OR REPLACE] [SQL SECURITY DEFINER | SQL SECURITY INVOKER] VIEW [IF NOT EXISTS]","UPDATE [LOW_PRIORITY] [IGNORE]","DELETE [LOW_PRIORITY] [QUICK] [IGNORE] FROM","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","{CHANGE | MODIFY} [COLUMN]","DROP [COLUMN]","RENAME [TO | AS]","RENAME COLUMN","ALTER [COLUMN]","{SET | DROP} DEFAULT","TRUNCATE [TABLE]","ALTER DATABASE","ALTER INSTANCE","ALTER RESOURCE GROUP","ALTER SEQUENCE","ALTER USER","ALTER VIEW","ANALYZE TABLE","CHECK TABLE","CHECKSUM TABLE","COMMIT","CREATE DATABASE","CREATE INDEX","CREATE RESOURCE GROUP","CREATE ROLE","CREATE SEQUENCE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DROP DATABASE","DROP INDEX","DROP RESOURCE GROUP","DROP ROLE","DROP TABLESPACE","DROP USER","DROP VIEW","EXPLAIN","FLUSH","GRANT","IMPORT TABLE","INSTALL COMPONENT","INSTALL PLUGIN","KILL","LOAD DATA","LOCK INSTANCE FOR BACKUP","LOCK TABLES","OPTIMIZE TABLE","PREPARE","RELEASE SAVEPOINT","RENAME TABLE","RENAME USER","REPAIR TABLE","RESET","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW BINARY LOGS","SHOW BINLOG EVENTS","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW EVENTS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW TRIGGERS","SHOW VARIABLES","SHOW WARNINGS","TABLE","UNINSTALL COMPONENT","UNINSTALL PLUGIN","UNLOCK INSTANCE","UNLOCK TABLES","USE"]),EM=O(["UNION [ALL | DISTINCT]"]),Eu=O(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),Ep={name:"tidb",tokenizerOptions:{reservedSelect:ED,reservedClauses:[...El,...Ec,...EU],reservedSetOperations:EM,reservedJoins:Eu,reservedKeywordPhrases:O(["ON {UPDATE | DELETE} [SET NULL]","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),reservedDataTypePhrases:O([]),supportsXor:!0,reservedKeywords:["ADD","ALL","ALTER","ANALYZE","AND","ARRAY","AS","ASC","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DISTINCT","DISTINCTROW","DIV","DOUBLE","DROP","DUAL","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","FALSE","FETCH","FOR","FORCE","FOREIGN","FROM","FULLTEXT","GENERATED","GRANT","GROUP","GROUPS","HAVING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","ILIKE","IN","INDEX","INFILE","INNER","INOUT","INSERT","INTERSECT","INTERVAL","INTO","IS","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINEAR","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LONG","LOW_PRIORITY","MATCH","MAXVALUE","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","NATURAL","NOT","NO_WRITE_TO_BINLOG","NULL","OF","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PARTITION","PRIMARY","PROCEDURE","RANGE","READ","RECURSIVE","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","REVOKE","RIGHT","RLIKE","ROW","ROWS","SECOND_MICROSECOND","SELECT","SET","SHOW","SPATIAL","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","SQL_BIG_RESULT","SQL_CALC_FOUND_ROWS","SQL_SMALL_RESULT","SSL","STARTING","STATS_EXTENDED","STORED","STRAIGHT_JOIN","TABLE","TABLESAMPLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","TiDB_CURRENT_TSO","UNION","UNIQUE","UNLOCK","UNSIGNED","UNTIL","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","VALUES","VIRTUAL","WHEN","WHERE","WHILE","WINDOW","WITH","WRITE","XOR","YEAR_MONTH","ZEROFILL"],reservedDataTypes:["BIGINT","BINARY","BIT","BLOB","BOOL","BOOLEAN","CHAR","CHARACTER","DATE","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","VARBINARY","VARCHAR","VARCHARACTER","VARYING","YEAR"],reservedFunctionNames:["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","ASCII","ASIN","ATAN","ATAN2","AVG","BENCHMARK","BIN","BIN_TO_UUID","BIT_AND","BIT_COUNT","BIT_LENGTH","BIT_OR","BIT_XOR","BITAND","BITNEG","BITOR","BITXOR","CASE","CAST","CEIL","CEILING","CHAR_FUNC","CHAR_LENGTH","CHARACTER_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COMPRESS","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CRC32","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_RESOURCE_GROUP","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATE_FORMAT","DATE_SUB","DATEDIFF","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT_FUNC","DEGREES","DENSE_RANK","DES_DECRYPT","DES_ENCRYPT","DIV","ELT","ENCODE","ENCRYPT","EQ","EXP","EXPORT_SET","EXTRACT","FIELD","FIND_IN_SET","FIRST_VALUE","FLOOR","FORMAT","FORMAT_BYTES","FORMAT_NANO_TIME","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GE","GET_FORMAT","GET_LOCK","GETPARAM","GREATEST","GROUP_CONCAT","GROUPING","GT","HEX","HOUR","IF","IFNULL","ILIKE","INET6_ATON","INET6_NTOA","INET_ATON","INET_NTOA","INSERT_FUNC","INSTR","INTDIV","INTERVAL","IS_FREE_LOCK","IS_IPV4","IS_IPV4_COMPAT","IS_IPV4_MAPPED","IS_IPV6","IS_USED_LOCK","IS_UUID","ISFALSE","ISNULL","ISTRUE","JSON_ARRAY","JSON_ARRAYAGG","JSON_ARRAY_APPEND","JSON_ARRAY_INSERT","JSON_CONTAINS","JSON_CONTAINS_PATH","JSON_DEPTH","JSON_EXTRACT","JSON_INSERT","JSON_KEYS","JSON_LENGTH","JSON_MEMBEROF","JSON_MERGE","JSON_MERGE_PATCH","JSON_MERGE_PRESERVE","JSON_OBJECT","JSON_OBJECTAGG","JSON_OVERLAPS","JSON_PRETTY","JSON_QUOTE","JSON_REMOVE","JSON_REPLACE","JSON_SEARCH","JSON_SET","JSON_STORAGE_FREE","JSON_STORAGE_SIZE","JSON_TYPE","JSON_UNQUOTE","JSON_VALID","LAG","LAST_DAY","LAST_INSERT_ID","LAST_VALUE","LASTVAL","LCASE","LE","LEAD","LEAST","LEFT","LEFTSHIFT","LENGTH","LIKE","LN","LOAD_FILE","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LOWER","LPAD","LT","LTRIM","MAKE_SET","MAKEDATE","MAKETIME","MASTER_POS_WAIT","MAX","MD5","MICROSECOND","MID","MIN","MINUS","MINUTE","MOD","MONTH","MONTHNAME","MUL","NAME_CONST","NE","NEXTVAL","NOT","NOW","NTH_VALUE","NTILE","NULLEQ","OCT","OCTET_LENGTH","OLD_PASSWORD","ORD","PASSWORD_FUNC","PERCENT_RANK","PERIOD_ADD","PERIOD_DIFF","PI","PLUS","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANDOM_BYTES","RANK","REGEXP","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","RELEASE_ALL_LOCKS","RELEASE_LOCK","REPEAT","REPLACE","REVERSE","RIGHT","RIGHTSHIFT","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCHEMA","SEC_TO_TIME","SECOND","SESSION_USER","SETVAL","SETVAR","SHA","SHA1","SHA2","SIGN","SIN","SLEEP","SM3","SPACE","SQRT","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","STRCMP","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUBTIME","SUM","SYSDATE","SYSTEM_USER","TAN","TIDB_BOUNDED_STALENESS","TIDB_CURRENT_TSO","TIDB_DECODE_BINARY_PLAN","TIDB_DECODE_KEY","TIDB_DECODE_PLAN","TIDB_DECODE_SQL_DIGESTS","TIDB_ENCODE_SQL_DIGEST","TIDB_IS_DDL_OWNER","TIDB_PARSE_TSO","TIDB_PARSE_TSO_LOGICAL","TIDB_ROW_CHECKSUM","TIDB_SHARD","TIDB_VERSION","TIME","TIME_FORMAT","TIME_TO_SEC","TIMEDIFF","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TO_BASE64","TO_DAYS","TO_SECONDS","TRANSLATE","TRIM","TRUNCATE","UCASE","UNARYMINUS","UNCOMPRESS","UNCOMPRESSED_LENGTH","UNHEX","UNIX_TIMESTAMP","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","UUID_SHORT","UUID_TO_BIN","VALIDATE_PASSWORD_STRENGTH","VAR_POP","VAR_SAMP","VARIANCE","VERSION","VITESS_HASH","WEEK","WEEKDAY","WEEKOFYEAR","WEIGHT_STRING","YEAR","YEARWEEK"],stringTypes:['""-qq-bs',{quote:"''-qq-bs",prefixes:["N"]},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_.$]+"},{quote:'""-qq-bs',prefixes:["@"],requirePrefix:!0},{quote:"''-qq-bs",prefixes:["@"],requirePrefix:!0},{quote:"``",prefixes:["@"],requirePrefix:!0}],paramTypes:{positional:!0},lineCommentTypes:["--","#"],operators:["%",":=","&","|","^","~","<<",">>","<=>","->","->>","&&","||","!","*.*"],postProcess:Et},formatOptions:{onelineClauses:[...Ec,...EU],tabularOnelineClauses:EU}},EG=O(["SELECT [ALL | DISTINCT]"]),Ed=O(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET","MERGE INTO","WHEN [NOT] MATCHED THEN","UPDATE SET","INSERT","NEST","UNNEST","RETURNING"]),Ef=O(["UPDATE","DELETE FROM","SET SCHEMA","ADVISE","ALTER INDEX","BEGIN TRANSACTION","BUILD INDEX","COMMIT TRANSACTION","CREATE COLLECTION","CREATE FUNCTION","CREATE INDEX","CREATE PRIMARY INDEX","CREATE SCOPE","DROP COLLECTION","DROP FUNCTION","DROP INDEX","DROP PRIMARY INDEX","DROP SCOPE","EXECUTE","EXECUTE FUNCTION","EXPLAIN","GRANT","INFER","PREPARE","REVOKE","ROLLBACK TRANSACTION","SAVEPOINT","SET TRANSACTION","UPDATE STATISTICS","UPSERT","LET","SET CURRENT SCHEMA","SHOW","USE [PRIMARY] KEYS"]),EB=O(["UNION [ALL]","EXCEPT [ALL]","INTERSECT [ALL]"]),EH=O(["JOIN","{LEFT | RIGHT} [OUTER] JOIN","INNER JOIN"]),Eh={name:"n1ql",tokenizerOptions:{reservedSelect:EG,reservedClauses:[...Ed,...Ef],reservedSetOperations:EB,reservedJoins:EH,reservedKeywordPhrases:O(["{ROWS | RANGE | GROUPS} BETWEEN"]),reservedDataTypePhrases:O([]),supportsXor:!0,reservedKeywords:["ADVISE","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","BEGIN","BETWEEN","BINARY","BOOLEAN","BREAK","BUCKET","BUILD","BY","CALL","CASE","CAST","CLUSTER","COLLATE","COLLECTION","COMMIT","COMMITTED","CONNECT","CONTINUE","CORRELATED","COVER","CREATE","CURRENT","DATABASE","DATASET","DATASTORE","DECLARE","DECREMENT","DELETE","DERIVED","DESC","DESCRIBE","DISTINCT","DO","DROP","EACH","ELEMENT","ELSE","END","EVERY","EXCEPT","EXCLUDE","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FILTER","FIRST","FLATTEN","FLUSH","FOLLOWING","FOR","FORCE","FROM","FTS","FUNCTION","GOLANG","GRANT","GROUP","GROUPS","GSI","HASH","HAVING","IF","IGNORE","ILIKE","IN","INCLUDE","INCREMENT","INDEX","INFER","INLINE","INNER","INSERT","INTERSECT","INTO","IS","ISOLATION","JAVASCRIPT","JOIN","KEY","KEYS","KEYSPACE","KNOWN","LANGUAGE","LAST","LEFT","LET","LETTING","LEVEL","LIKE","LIMIT","LSM","MAP","MAPPING","MATCHED","MATERIALIZED","MERGE","MINUS","MISSING","NAMESPACE","NEST","NL","NO","NOT","NTH_VALUE","NULL","NULLS","NUMBER","OBJECT","OFFSET","ON","OPTION","OPTIONS","OR","ORDER","OTHERS","OUTER","OVER","PARSE","PARTITION","PASSWORD","PATH","POOL","PRECEDING","PREPARE","PRIMARY","PRIVATE","PRIVILEGE","PROBE","PROCEDURE","PUBLIC","RANGE","RAW","REALM","REDUCE","RENAME","RESPECT","RETURN","RETURNING","REVOKE","RIGHT","ROLE","ROLLBACK","ROW","ROWS","SATISFIES","SAVEPOINT","SCHEMA","SCOPE","SELECT","SELF","SEMI","SET","SHOW","SOME","START","STATISTICS","STRING","SYSTEM","THEN","TIES","TO","TRAN","TRANSACTION","TRIGGER","TRUE","TRUNCATE","UNBOUNDED","UNDER","UNION","UNIQUE","UNKNOWN","UNNEST","UNSET","UPDATE","UPSERT","USE","USER","USING","VALIDATE","VALUE","VALUED","VALUES","VIA","VIEW","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WORK","XOR"],reservedDataTypes:[],reservedFunctionNames:["ABORT","ABS","ACOS","ADVISOR","ARRAY_AGG","ARRAY_AGG","ARRAY_APPEND","ARRAY_AVG","ARRAY_BINARY_SEARCH","ARRAY_CONCAT","ARRAY_CONTAINS","ARRAY_COUNT","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_FLATTEN","ARRAY_IFNULL","ARRAY_INSERT","ARRAY_INTERSECT","ARRAY_LENGTH","ARRAY_MAX","ARRAY_MIN","ARRAY_MOVE","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_PUT","ARRAY_RANGE","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_REPLACE","ARRAY_REVERSE","ARRAY_SORT","ARRAY_STAR","ARRAY_SUM","ARRAY_SYMDIFF","ARRAY_SYMDIFF1","ARRAY_SYMDIFFN","ARRAY_UNION","ASIN","ATAN","ATAN2","AVG","BASE64","BASE64_DECODE","BASE64_ENCODE","BITAND ","BITCLEAR ","BITNOT ","BITOR ","BITSET ","BITSHIFT ","BITTEST ","BITXOR ","CEIL","CLOCK_LOCAL","CLOCK_MILLIS","CLOCK_STR","CLOCK_TZ","CLOCK_UTC","COALESCE","CONCAT","CONCAT2","CONTAINS","CONTAINS_TOKEN","CONTAINS_TOKEN_LIKE","CONTAINS_TOKEN_REGEXP","COS","COUNT","COUNT","COUNTN","CUME_DIST","CURL","DATE_ADD_MILLIS","DATE_ADD_STR","DATE_DIFF_MILLIS","DATE_DIFF_STR","DATE_FORMAT_STR","DATE_PART_MILLIS","DATE_PART_STR","DATE_RANGE_MILLIS","DATE_RANGE_STR","DATE_TRUNC_MILLIS","DATE_TRUNC_STR","DECODE","DECODE_JSON","DEGREES","DENSE_RANK","DURATION_TO_STR","ENCODED_SIZE","ENCODE_JSON","EXP","FIRST_VALUE","FLOOR","GREATEST","HAS_TOKEN","IFINF","IFMISSING","IFMISSINGORNULL","IFNAN","IFNANORINF","IFNULL","INITCAP","ISARRAY","ISATOM","ISBITSET","ISBOOLEAN","ISNUMBER","ISOBJECT","ISSTRING","LAG","LAST_VALUE","LEAD","LEAST","LENGTH","LN","LOG","LOWER","LTRIM","MAX","MEAN","MEDIAN","META","MILLIS","MILLIS_TO_LOCAL","MILLIS_TO_STR","MILLIS_TO_TZ","MILLIS_TO_UTC","MILLIS_TO_ZONE_NAME","MIN","MISSINGIF","NANIF","NEGINFIF","NOW_LOCAL","NOW_MILLIS","NOW_STR","NOW_TZ","NOW_UTC","NTH_VALUE","NTILE","NULLIF","NVL","NVL2","OBJECT_ADD","OBJECT_CONCAT","OBJECT_INNER_PAIRS","OBJECT_INNER_VALUES","OBJECT_LENGTH","OBJECT_NAMES","OBJECT_PAIRS","OBJECT_PUT","OBJECT_REMOVE","OBJECT_RENAME","OBJECT_REPLACE","OBJECT_UNWRAP","OBJECT_VALUES","PAIRS","PERCENT_RANK","PI","POLY_LENGTH","POSINFIF","POSITION","POWER","RADIANS","RANDOM","RANK","RATIO_TO_REPORT","REGEXP_CONTAINS","REGEXP_LIKE","REGEXP_MATCHES","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGEX_CONTAINS","REGEX_LIKE","REGEX_MATCHES","REGEX_POSITION","REGEX_REPLACE","REGEX_SPLIT","REPEAT","REPLACE","REVERSE","ROUND","ROW_NUMBER","RTRIM","SEARCH","SEARCH_META","SEARCH_SCORE","SIGN","SIN","SPLIT","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DURATION","STR_TO_MILLIS","STR_TO_TZ","STR_TO_UTC","STR_TO_ZONE_NAME","SUBSTR","SUFFIXES","SUM","TAN","TITLE","TOARRAY","TOATOM","TOBOOLEAN","TOKENS","TOKENS","TONUMBER","TOOBJECT","TOSTRING","TRIM","TRUNC","UPPER","UUID","VARIANCE","VARIANCE_POP","VARIANCE_SAMP","VAR_POP","VAR_SAMP","WEEKDAY_MILLIS","WEEKDAY_STR","CAST"],stringTypes:['""-bs',"''-bs"],identTypes:["``"],extraParens:["[]","{}"],paramTypes:{positional:!0,numbered:["$"],named:["$"]},lineCommentTypes:["#","--"],operators:["%","==",":","||"]},formatOptions:{onelineClauses:Ef}},EF=O(["SELECT [ALL | DISTINCT | UNIQUE]"]),EY=O(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER [SIBLINGS] BY","OFFSET","FETCH {FIRST | NEXT}","FOR UPDATE [OF]","INSERT [INTO | ALL INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [THEN]","UPDATE SET","RETURNING"]),Em=O(["CREATE [GLOBAL TEMPORARY | PRIVATE TEMPORARY | SHARDED | DUPLICATED | IMMUTABLE BLOCKCHAIN | BLOCKCHAIN | IMMUTABLE] TABLE"]),Ey=O(["CREATE [OR REPLACE] [NO FORCE | FORCE] [EDITIONING | EDITIONABLE | EDITIONABLE EDITIONING | NONEDITIONABLE] VIEW","CREATE MATERIALIZED VIEW","UPDATE [ONLY]","DELETE FROM [ONLY]","DROP TABLE","ALTER TABLE","ADD","DROP {COLUMN | UNUSED COLUMNS | COLUMNS CONTINUE}","MODIFY","RENAME TO","RENAME COLUMN","TRUNCATE TABLE","SET SCHEMA","BEGIN","CONNECT BY","DECLARE","EXCEPT","EXCEPTION","LOOP","START WITH"]),EV=O(["UNION [ALL]","MINUS","INTERSECT"]),Eb=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | OUTER} APPLY"]),EW={name:"plsql",tokenizerOptions:{reservedSelect:EF,reservedClauses:[...EY,...Em,...Ey],reservedSetOperations:EV,reservedJoins:Eb,reservedKeywordPhrases:O(["ON {UPDATE | DELETE} [SET NULL]","ON COMMIT","{ROWS | RANGE} BETWEEN"]),reservedDataTypePhrases:O([]),supportsXor:!0,reservedKeywords:["ADD","AGENT","AGGREGATE","ALL","ALTER","AND","ANY","ARROW","AS","ASC","AT","ATTRIBUTE","AUTHID","AVG","BEGIN","BETWEEN","BLOCK","BODY","BOTH","BOUND","BULK","BY","BYTE","CALL","CALLING","CASCADE","CASE","CHARSET","CHARSETFORM","CHARSETID","CHECK","CLOSE","CLUSTER","CLUSTERS","COLAUTH","COLLECT","COLUMNS","COMMENT","COMMIT","COMMITTED","COMPILED","COMPRESS","CONNECT","CONSTANT","CONSTRUCTOR","CONTEXT","CONVERT","COUNT","CRASH","CREATE","CURRENT","CURSOR","CUSTOMDATUM","DANGLING","DATA","DAY","DECLARE","DEFAULT","DEFINE","DELETE","DESC","DETERMINISTIC","DISTINCT","DROP","DURATION","ELEMENT","ELSE","ELSIF","EMPTY","END","ESCAPE","EXCEPT","EXCEPTION","EXCEPTIONS","EXCLUSIVE","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FINAL","FIXED","FOR","FORALL","FORCE","FORM","FROM","FUNCTION","GENERAL","GOTO","GRANT","GROUP","HASH","HAVING","HEAP","HIDDEN","HOUR","IDENTIFIED","IF","IMMEDIATE","IN","INCLUDING","INDEX","INDEXES","INDICATOR","INDICES","INFINITE","INSERT","INSTANTIABLE","INTERFACE","INTERSECT","INTERVAL","INTO","INVALIDATE","IS","ISOLATION","JAVA","LANGUAGE","LARGE","LEADING","LENGTH","LEVEL","LIBRARY","LIKE","LIKE2","LIKE4","LIKEC","LIMIT","LIMITED","LOCAL","LOCK","LOOP","MAP","MAX","MAXLEN","MEMBER","MERGE","MIN","MINUS","MINUTE","MOD","MODE","MODIFY","MONTH","MULTISET","NAME","NAN","NATIONAL","NATIVE","NEW","NOCOMPRESS","NOCOPY","NOT","NOWAIT","NULL","OBJECT","OCICOLL","OCIDATE","OCIDATETIME","OCIDURATION","OCIINTERVAL","OCILOBLOCATOR","OCINUMBER","OCIRAW","OCIREF","OCIREFCURSOR","OCIROWID","OCISTRING","OCITYPE","OF","ON","ONLY","OPAQUE","OPEN","OPERATOR","OPTION","OR","ORACLE","ORADATA","ORDER","OVERLAPS","ORGANIZATION","ORLANY","ORLVARY","OTHERS","OUT","OVERRIDING","PACKAGE","PARALLEL_ENABLE","PARAMETER","PARAMETERS","PARTITION","PASCAL","PIPE","PIPELINED","PRAGMA","PRIOR","PRIVATE","PROCEDURE","PUBLIC","RAISE","RANGE","READ","RECORD","REF","REFERENCE","REM","REMAINDER","RENAME","RESOURCE","RESULT","RETURN","RETURNING","REVERSE","REVOKE","ROLLBACK","ROW","SAMPLE","SAVE","SAVEPOINT","SB1","SB2","SB4","SECOND","SEGMENT","SELECT","SELF","SEPARATE","SEQUENCE","SERIALIZABLE","SET","SHARE","SHORT","SIZE","SIZE_T","SOME","SPARSE","SQL","SQLCODE","SQLDATA","SQLNAME","SQLSTATE","STANDARD","START","STATIC","STDDEV","STORED","STRING","STRUCT","STYLE","SUBMULTISET","SUBPARTITION","SUBSTITUTABLE","SUBTYPE","SUM","SYNONYM","TABAUTH","TABLE","TDO","THE","THEN","TIME","TIMEZONE_ABBR","TIMEZONE_HOUR","TIMEZONE_MINUTE","TIMEZONE_REGION","TO","TRAILING","TRANSAC","TRANSACTIONAL","TRUSTED","TYPE","UB1","UB2","UB4","UNDER","UNION","UNIQUE","UNSIGNED","UNTRUSTED","UPDATE","USE","USING","VALIST","VALUE","VALUES","VARIABLE","VARIANCE","VARRAY","VIEW","VIEWS","VOID","WHEN","WHERE","WHILE","WITH","WORK","WRAPPED","WRITE","YEAR","ZONE"],reservedDataTypes:["ARRAY","BFILE_BASE","BINARY","BLOB_BASE","CHAR VARYING","CHAR_BASE","CHAR","CHARACTER VARYING","CHARACTER","CLOB_BASE","DATE_BASE","DATE","DECIMAL","DOUBLE","FLOAT","INT","INTERVAL DAY","INTERVAL YEAR","LONG","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR VARYING","NCHAR","NCHAR","NUMBER_BASE","NUMBER","NUMBERIC","NVARCHAR","PRECISION","RAW","TIMESTAMP","UROWID","VARCHAR","VARCHAR2"],reservedFunctionNames:["ABS","ACOS","ASIN","ATAN","ATAN2","BITAND","CEIL","COS","COSH","EXP","FLOOR","LN","LOG","MOD","NANVL","POWER","REMAINDER","ROUND","SIGN","SIN","SINH","SQRT","TAN","TANH","TRUNC","WIDTH_BUCKET","CHR","CONCAT","INITCAP","LOWER","LPAD","LTRIM","NLS_INITCAP","NLS_LOWER","NLSSORT","NLS_UPPER","REGEXP_REPLACE","REGEXP_SUBSTR","REPLACE","RPAD","RTRIM","SOUNDEX","SUBSTR","TRANSLATE","TREAT","TRIM","UPPER","NLS_CHARSET_DECL_LEN","NLS_CHARSET_ID","NLS_CHARSET_NAME","ASCII","INSTR","LENGTH","REGEXP_INSTR","ADD_MONTHS","CURRENT_DATE","CURRENT_TIMESTAMP","DBTIMEZONE","EXTRACT","FROM_TZ","LAST_DAY","LOCALTIMESTAMP","MONTHS_BETWEEN","NEW_TIME","NEXT_DAY","NUMTODSINTERVAL","NUMTOYMINTERVAL","ROUND","SESSIONTIMEZONE","SYS_EXTRACT_UTC","SYSDATE","SYSTIMESTAMP","TO_CHAR","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_DSINTERVAL","TO_YMINTERVAL","TRUNC","TZ_OFFSET","GREATEST","LEAST","ASCIISTR","BIN_TO_NUM","CAST","CHARTOROWID","COMPOSE","CONVERT","DECOMPOSE","HEXTORAW","NUMTODSINTERVAL","NUMTOYMINTERVAL","RAWTOHEX","RAWTONHEX","ROWIDTOCHAR","ROWIDTONCHAR","SCN_TO_TIMESTAMP","TIMESTAMP_TO_SCN","TO_BINARY_DOUBLE","TO_BINARY_FLOAT","TO_CHAR","TO_CLOB","TO_DATE","TO_DSINTERVAL","TO_LOB","TO_MULTI_BYTE","TO_NCHAR","TO_NCLOB","TO_NUMBER","TO_DSINTERVAL","TO_SINGLE_BYTE","TO_TIMESTAMP","TO_TIMESTAMP_TZ","TO_YMINTERVAL","TO_YMINTERVAL","TRANSLATE","UNISTR","BFILENAME","EMPTY_BLOB,","EMPTY_CLOB","CARDINALITY","COLLECT","POWERMULTISET","POWERMULTISET_BY_CARDINALITY","SET","SYS_CONNECT_BY_PATH","CLUSTER_ID","CLUSTER_PROBABILITY","CLUSTER_SET","FEATURE_ID","FEATURE_SET","FEATURE_VALUE","PREDICTION","PREDICTION_COST","PREDICTION_DETAILS","PREDICTION_PROBABILITY","PREDICTION_SET","APPENDCHILDXML","DELETEXML","DEPTH","EXTRACT","EXISTSNODE","EXTRACTVALUE","INSERTCHILDXML","INSERTXMLBEFORE","PATH","SYS_DBURIGEN","SYS_XMLAGG","SYS_XMLGEN","UPDATEXML","XMLAGG","XMLCDATA","XMLCOLATTVAL","XMLCOMMENT","XMLCONCAT","XMLFOREST","XMLPARSE","XMLPI","XMLQUERY","XMLROOT","XMLSEQUENCE","XMLSERIALIZE","XMLTABLE","XMLTRANSFORM","DECODE","DUMP","ORA_HASH","VSIZE","COALESCE","LNNVL","NULLIF","NVL","NVL2","SYS_CONTEXT","SYS_GUID","SYS_TYPEID","UID","USER","USERENV","AVG","COLLECT","CORR","CORR_S","CORR_K","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","FIRST","GROUP_ID","GROUPING","GROUPING_ID","LAST","MAX","MEDIAN","MIN","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANK","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","STATS_BINOMIAL_TEST","STATS_CROSSTAB","STATS_F_TEST","STATS_KS_TEST","STATS_MODE","STATS_MW_TEST","STATS_ONE_WAY_ANOVA","STATS_T_TEST_ONE","STATS_T_TEST_PAIRED","STATS_T_TEST_INDEP","STATS_T_TEST_INDEPU","STATS_WSR_TEST","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTILE","RATIO_TO_REPORT","ROW_NUMBER","DEREF","MAKE_REF","REF","REFTOHEX","VALUE","CV","ITERATION_NUMBER","PRESENTNNV","PRESENTV","PREVIOUS"],stringTypes:[{quote:"''-qq",prefixes:["N"]},{quote:"q''",prefixes:["N"]}],identTypes:['""-qq'],identChars:{rest:"$#"},variableTypes:[{regex:"&{1,2}[A-Za-z][A-Za-z0-9_$#]*"}],paramTypes:{numbered:[":"],named:[":"]},operators:["**",":=","%","~=","^=",">>","<<","=>","@","||"],postProcess:function(E){let T=P;return E.map(E=>l.SET(E)&&l.BY(T)?Object.assign(Object.assign({},E),{type:R.RESERVED_KEYWORD}):(c(E.type)&&(T=E),E))}},formatOptions:{alwaysDenseOperators:["@"],onelineClauses:[...Em,...Ey],tabularOnelineClauses:Ey}},Eg=O(["SELECT [ALL | DISTINCT]"]),EX=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","FOR {UPDATE | NO KEY UPDATE | SHARE | KEY SHARE} [OF]","INSERT INTO","VALUES","DEFAULT VALUES","SET","RETURNING"]),Ev=O(["CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]"]),Ex=O(["CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE [MATERIALIZED] VIEW [IF NOT EXISTS]","UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","SET DATA TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE [OR REPLACE] AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE [DEFAULT] CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE [OR REPLACE] FUNCTION","CREATE GROUP","CREATE [UNIQUE] INDEX","CREATE [OR REPLACE] [TRUSTED] [PROCEDURAL] LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE [OR REPLACE] PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE [OR REPLACE] RULE","CREATE SCHEMA [AUTHORIZATION]","CREATE [TEMPORARY | TEMP | UNLOGGED] SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE [OR REPLACE] TRANSFORM","CREATE [OR REPLACE] [CONSTRAINT] TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP IDENTITY","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW [IF EXISTS]","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","OVERRIDING SYSTEM VALUE","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET [ALL|ROLE|SESSION AUTHORIZATION]","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),EK=O(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Ew=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),EJ={name:"postgresql",tokenizerOptions:{reservedSelect:Eg,reservedClauses:[...EX,...Ev,...Ex],reservedSetOperations:EK,reservedJoins:Ew,reservedKeywordPhrases:O(["PRIMARY KEY","GENERATED {ALWAYS | BY DEFAULT} AS IDENTITY","ON {UPDATE | DELETE} [NO ACTION | RESTRICT | CASCADE | SET NULL | SET DEFAULT]","DO {NOTHING | UPDATE}","AS MATERIALIZED","{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM","NULLS {FIRST | LAST}","WITH ORDINALITY"]),reservedDataTypePhrases:O(["[TIMESTAMP | TIME] {WITH | WITHOUT} TIME ZONE"]),reservedKeywords:["ALL","ANALYSE","ANALYZE","AND","ANY","AS","ASC","ASYMMETRIC","AUTHORIZATION","BETWEEN","BINARY","BOTH","CASE","CAST","CHECK","COLLATE","COLLATION","COLUMN","CONCURRENTLY","CONSTRAINT","CREATE","CROSS","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DAY","DEFAULT","DEFERRABLE","DESC","DISTINCT","DO","ELSE","END","EXCEPT","EXISTS","FALSE","FETCH","FILTER","FOR","FOREIGN","FREEZE","FROM","FULL","GRANT","GROUP","HAVING","HOUR","ILIKE","IN","INITIALLY","INNER","INOUT","INTERSECT","INTO","IS","ISNULL","JOIN","LATERAL","LEADING","LEFT","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","MINUTE","MONTH","NATURAL","NOT","NOTNULL","NULL","NULLIF","OFFSET","ON","ONLY","OR","ORDER","OUT","OUTER","OVER","OVERLAPS","PLACING","PRIMARY","REFERENCES","RETURNING","RIGHT","ROW","SECOND","SELECT","SESSION_USER","SIMILAR","SOME","SYMMETRIC","TABLE","TABLESAMPLE","THEN","TO","TRAILING","TRUE","UNION","UNIQUE","USER","USING","VALUES","VARIADIC","VERBOSE","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","YEAR"],reservedDataTypes:["ARRAY","BIGINT","BIT","BIT VARYING","BOOL","BOOLEAN","CHAR","CHARACTER","CHARACTER VARYING","DECIMAL","DEC","DOUBLE","ENUM","FLOAT","INT","INTEGER","INTERVAL","NCHAR","NUMERIC","JSON","JSONB","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TIMESTAMPTZ","UUID","VARCHAR","XML","ZONE"],reservedFunctionNames:["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET","ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER","BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM","BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP","CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP","ENUM_FIRST","ENUM_LAST","ENUM_RANGE","AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH","ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TRUNC","ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY","GEN_RANDOM_UUID","CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS","ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP","CURRVAL","LASTVAL","NEXTVAL","SETVAL","COALESCE","GREATEST","LEAST","NULLIF","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST","ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF","ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","GENERATE_SERIES","GENERATE_SUBSCRIPTS","ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION","BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG","SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN","PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS","PG_MCV_LIST_ITEMS","CAST"],nestedBlockComments:!0,extraParens:["[]"],underscoresInNumbers:!0,stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-qq-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","^@","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::",":","<#>","<=>","<+>","<~>","<%>"],operatorKeyword:!0},formatOptions:{alwaysDenseOperators:["::",":"],onelineClauses:[...Ev,...Ex],tabularOnelineClauses:Ex}},E$=O(["SELECT [ALL | DISTINCT]"]),EQ=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","QUALIFY","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT INTO","VALUES","SET"]),Ek=O(["CREATE [TEMPORARY | TEMP | LOCAL TEMPORARY | LOCAL TEMP] TABLE [IF NOT EXISTS]"]),EZ=O(["CREATE [OR REPLACE | MATERIALIZED] VIEW","UPDATE","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ALTER TABLE APPEND","ADD [COLUMN]","DROP [COLUMN]","RENAME TO","RENAME COLUMN","ALTER COLUMN","TYPE","ENCODE","TRUNCATE [TABLE]","ABORT","ALTER DATABASE","ALTER DATASHARE","ALTER DEFAULT PRIVILEGES","ALTER GROUP","ALTER MATERIALIZED VIEW","ALTER PROCEDURE","ALTER SCHEMA","ALTER USER","ANALYSE","ANALYZE","ANALYSE COMPRESSION","ANALYZE COMPRESSION","BEGIN","CALL","CANCEL","CLOSE","COMMIT","COPY","CREATE DATABASE","CREATE DATASHARE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL SCHEMA","CREATE EXTERNAL TABLE","CREATE FUNCTION","CREATE GROUP","CREATE LIBRARY","CREATE MODEL","CREATE PROCEDURE","CREATE SCHEMA","CREATE USER","DEALLOCATE","DECLARE","DESC DATASHARE","DROP DATABASE","DROP DATASHARE","DROP FUNCTION","DROP GROUP","DROP LIBRARY","DROP MODEL","DROP MATERIALIZED VIEW","DROP PROCEDURE","DROP SCHEMA","DROP USER","DROP VIEW","DROP","EXECUTE","EXPLAIN","FETCH","GRANT","LOCK","PREPARE","REFRESH MATERIALIZED VIEW","RESET","REVOKE","ROLLBACK","SELECT INTO","SET SESSION AUTHORIZATION","SET SESSION CHARACTERISTICS","SHOW","SHOW EXTERNAL TABLE","SHOW MODEL","SHOW DATASHARES","SHOW PROCEDURE","SHOW TABLE","SHOW VIEW","START TRANSACTION","UNLOAD","VACUUM"]),Ej=O(["UNION [ALL]","EXCEPT","INTERSECT","MINUS"]),Eq=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Ez={name:"redshift",tokenizerOptions:{reservedSelect:E$,reservedClauses:[...EQ,...Ek,...EZ],reservedSetOperations:Ej,reservedJoins:Eq,reservedKeywordPhrases:O(["NULL AS","DATA CATALOG","HIVE METASTORE","{ROWS | RANGE} BETWEEN"]),reservedDataTypePhrases:O([]),reservedKeywords:["AES128","AES256","ALL","ALLOWOVERWRITE","ANY","AS","ASC","AUTHORIZATION","BACKUP","BETWEEN","BINARY","BOTH","CHECK","COLUMN","CONSTRAINT","CREATE","CROSS","DEFAULT","DEFERRABLE","DEFLATE","DEFRAG","DESC","DISABLE","DISTINCT","DO","ENABLE","ENCODE","ENCRYPT","ENCRYPTION","EXPLICIT","FALSE","FOR","FOREIGN","FREEZE","FROM","FULL","GLOBALDICT256","GLOBALDICT64K","GROUP","IDENTITY","IGNORE","ILIKE","IN","INITIALLY","INNER","INTO","IS","ISNULL","LANGUAGE","LEADING","LIKE","LIMIT","LOCALTIME","LOCALTIMESTAMP","LUN","LUNS","MINUS","NATURAL","NEW","NOT","NOTNULL","NULL","NULLS","OFF","OFFLINE","OFFSET","OID","OLD","ON","ONLY","OPEN","ORDER","OUTER","OVERLAPS","PARALLEL","PARTITION","PERCENT","PERMISSIONS","PLACING","PRIMARY","RECOVER","REFERENCES","REJECTLOG","RESORT","RESPECT","RESTORE","SIMILAR","SNAPSHOT","SOME","SYSTEM","TABLE","TAG","TDES","THEN","TIMESTAMP","TO","TOP","TRAILING","TRUE","UNIQUE","USING","VERBOSE","WALLET","WITHOUT","ACCEPTANYDATE","ACCEPTINVCHARS","BLANKSASNULL","DATEFORMAT","EMPTYASNULL","ENCODING","ESCAPE","EXPLICIT_IDS","FILLRECORD","IGNOREBLANKLINES","IGNOREHEADER","REMOVEQUOTES","ROUNDEC","TIMEFORMAT","TRIMBLANKS","TRUNCATECOLUMNS","COMPROWS","COMPUPDATE","MAXERROR","NOLOAD","STATUPDATE","FORMAT","CSV","DELIMITER","FIXEDWIDTH","SHAPEFILE","AVRO","JSON","PARQUET","ORC","ACCESS_KEY_ID","CREDENTIALS","ENCRYPTED","IAM_ROLE","MASTER_SYMMETRIC_KEY","SECRET_ACCESS_KEY","SESSION_TOKEN","BZIP2","GZIP","LZOP","ZSTD","MANIFEST","READRATIO","REGION","SSH","RAW","AZ64","BYTEDICT","DELTA","DELTA32K","LZO","MOSTLY8","MOSTLY16","MOSTLY32","RUNLENGTH","TEXT255","TEXT32K","CATALOG_ROLE","SECRET_ARN","EXTERNAL","AUTO","EVEN","KEY","PREDICATE","COMPRESSION"],reservedDataTypes:["ARRAY","BIGINT","BPCHAR","CHAR","CHARACTER VARYING","CHARACTER","DECIMAL","INT","INT2","INT4","INT8","INTEGER","NCHAR","NUMERIC","NVARCHAR","SMALLINT","TEXT","VARBYTE","VARCHAR"],reservedFunctionNames:["ANY_VALUE","APPROXIMATE PERCENTILE_DISC","AVG","COUNT","LISTAGG","MAX","MEDIAN","MIN","PERCENTILE_CONT","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","array_concat","array_flatten","get_array_length","split_to_array","subarray","BIT_AND","BIT_OR","BOOL_AND","BOOL_OR","COALESCE","DECODE","GREATEST","LEAST","NVL","NVL2","NULLIF","ADD_MONTHS","AT TIME ZONE","CONVERT_TIMEZONE","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_CMP","DATE_CMP_TIMESTAMP","DATE_CMP_TIMESTAMPTZ","DATE_PART_YEAR","DATEADD","DATEDIFF","DATE_PART","DATE_TRUNC","EXTRACT","GETDATE","INTERVAL_CMP","LAST_DAY","MONTHS_BETWEEN","NEXT_DAY","SYSDATE","TIMEOFDAY","TIMESTAMP_CMP","TIMESTAMP_CMP_DATE","TIMESTAMP_CMP_TIMESTAMPTZ","TIMESTAMPTZ_CMP","TIMESTAMPTZ_CMP_DATE","TIMESTAMPTZ_CMP_TIMESTAMP","TIMEZONE","TO_TIMESTAMP","TRUNC","AddBBox","DropBBox","GeometryType","ST_AddPoint","ST_Angle","ST_Area","ST_AsBinary","ST_AsEWKB","ST_AsEWKT","ST_AsGeoJSON","ST_AsText","ST_Azimuth","ST_Boundary","ST_Collect","ST_Contains","ST_ContainsProperly","ST_ConvexHull","ST_CoveredBy","ST_Covers","ST_Crosses","ST_Dimension","ST_Disjoint","ST_Distance","ST_DistanceSphere","ST_DWithin","ST_EndPoint","ST_Envelope","ST_Equals","ST_ExteriorRing","ST_Force2D","ST_Force3D","ST_Force3DM","ST_Force3DZ","ST_Force4D","ST_GeometryN","ST_GeometryType","ST_GeomFromEWKB","ST_GeomFromEWKT","ST_GeomFromText","ST_GeomFromWKB","ST_InteriorRingN","ST_Intersects","ST_IsPolygonCCW","ST_IsPolygonCW","ST_IsClosed","ST_IsCollection","ST_IsEmpty","ST_IsSimple","ST_IsValid","ST_Length","ST_LengthSphere","ST_Length2D","ST_LineFromMultiPoint","ST_LineInterpolatePoint","ST_M","ST_MakeEnvelope","ST_MakeLine","ST_MakePoint","ST_MakePolygon","ST_MemSize","ST_MMax","ST_MMin","ST_Multi","ST_NDims","ST_NPoints","ST_NRings","ST_NumGeometries","ST_NumInteriorRings","ST_NumPoints","ST_Perimeter","ST_Perimeter2D","ST_Point","ST_PointN","ST_Points","ST_Polygon","ST_RemovePoint","ST_Reverse","ST_SetPoint","ST_SetSRID","ST_Simplify","ST_SRID","ST_StartPoint","ST_Touches","ST_Within","ST_X","ST_XMax","ST_XMin","ST_Y","ST_YMax","ST_YMin","ST_Z","ST_ZMax","ST_ZMin","SupportsBBox","CHECKSUM","FUNC_SHA1","FNV_HASH","MD5","SHA","SHA1","SHA2","HLL","HLL_CREATE_SKETCH","HLL_CARDINALITY","HLL_COMBINE","IS_VALID_JSON","IS_VALID_JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_EXTRACT_ARRAY_ELEMENT_TEXT","JSON_EXTRACT_PATH_TEXT","JSON_PARSE","JSON_SERIALIZE","ABS","ACOS","ASIN","ATAN","ATAN2","CBRT","CEILING","CEIL","COS","COT","DEGREES","DEXP","DLOG1","DLOG10","EXP","FLOOR","LN","LOG","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SIN","SIGN","SQRT","TAN","TO_HEX","TRUNC","EXPLAIN_MODEL","ASCII","BPCHARCMP","BTRIM","BTTEXT_PATTERN_CMP","CHAR_LENGTH","CHARACTER_LENGTH","CHARINDEX","CHR","COLLATE","CONCAT","CRC32","DIFFERENCE","INITCAP","LEFT","RIGHT","LEN","LENGTH","LOWER","LPAD","RPAD","LTRIM","OCTETINDEX","OCTET_LENGTH","POSITION","QUOTE_IDENT","QUOTE_LITERAL","REGEXP_COUNT","REGEXP_INSTR","REGEXP_REPLACE","REGEXP_SUBSTR","REPEAT","REPLACE","REPLICATE","REVERSE","RTRIM","SOUNDEX","SPLIT_PART","STRPOS","STRTOL","SUBSTRING","TEXTLEN","TRANSLATE","TRIM","UPPER","decimal_precision","decimal_scale","is_array","is_bigint","is_boolean","is_char","is_decimal","is_float","is_integer","is_object","is_scalar","is_smallint","is_varchar","json_typeof","AVG","COUNT","CUME_DIST","DENSE_RANK","FIRST_VALUE","LAST_VALUE","LAG","LEAD","LISTAGG","MAX","MEDIAN","MIN","NTH_VALUE","NTILE","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","RANK","RATIO_TO_REPORT","ROW_NUMBER","STDDEV_SAMP","STDDEV_POP","SUM","VAR_SAMP","VAR_POP","CAST","CONVERT","TO_CHAR","TO_DATE","TO_NUMBER","TEXT_TO_INT_ALT","TEXT_TO_NUMERIC_ALT","CHANGE_QUERY_PRIORITY","CHANGE_SESSION_PRIORITY","CHANGE_USER_PRIORITY","CURRENT_SETTING","PG_CANCEL_BACKEND","PG_TERMINATE_BACKEND","REBOOT_CLUSTER","SET_CONFIG","CURRENT_AWS_ACCOUNT","CURRENT_DATABASE","CURRENT_NAMESPACE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","CURRENT_USER_ID","HAS_ASSUMEROLE_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_TABLE_PRIVILEGE","PG_BACKEND_PID","PG_GET_COLS","PG_GET_GRANTEE_BY_IAM_ROLE","PG_GET_IAM_ROLE_BY_USER","PG_GET_LATE_BINDING_VIEW_COLS","PG_LAST_COPY_COUNT","PG_LAST_COPY_ID","PG_LAST_UNLOAD_ID","PG_LAST_QUERY_ID","PG_LAST_UNLOAD_COUNT","SESSION_USER","SLICE_NUM","USER","VERSION"],extraParens:["[]"],stringTypes:["''-qq"],identTypes:['""-qq'],identChars:{first:"#"},paramTypes:{numbered:["$"]},operators:["^","%","@","|/","||/","&","|","~","<<",">>","||","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...Ek,...EZ],tabularOnelineClauses:EZ}},E0=O(["SELECT [ALL | DISTINCT]"]),E1=O(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE"]),E2=O(["CREATE [EXTERNAL] TABLE [IF NOT EXISTS]"]),E6=O(["CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),E4=O(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),E5=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),E8={name:"spark",tokenizerOptions:{reservedSelect:E0,reservedClauses:[...E1,...E2,...E6],reservedSetOperations:E4,reservedJoins:E5,reservedKeywordPhrases:O(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),reservedDataTypePhrases:O([]),supportsXor:!0,reservedKeywords:["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"],reservedDataTypes:["ARRAY","BIGINT","BINARY","BOOLEAN","BYTE","CHAR","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","LONG","MAP","NUMERIC","REAL","SHORT","SMALLINT","STRING","STRUCT","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TINYINT","VARCHAR"],reservedFunctionNames:["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE","CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER","ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY","ELEMENT_AT","ELEMENT_AT","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP","ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR","FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON","ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIN","BIT_COUNT","BIT_GET","BIT_LENGTH","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DEGREES","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH","CAST","COALESCE","NULLIF"],extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],identChars:{allowFirstCharNumber:!0},variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:function(E){return E.map((T,e)=>{let A=E[e-1]||P,t=E[e+1]||P;return l.WINDOW(T)&&t.type===R.OPEN_PAREN?Object.assign(Object.assign({},T),{type:R.RESERVED_FUNCTION_NAME}):"ITEMS"===T.text&&T.type===R.RESERVED_KEYWORD&&("COLLECTION"!==A.text||"TERMINATED"!==t.text)?Object.assign(Object.assign({},T),{type:R.IDENTIFIER,text:T.raw}):T})}},formatOptions:{onelineClauses:[...E2,...E6],tabularOnelineClauses:E6}},E3=O(["SELECT [ALL | DISTINCT]"]),E9=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK] INTO","REPLACE INTO","VALUES","SET","RETURNING"]),E7=O(["CREATE [TEMPORARY | TEMP] TABLE [IF NOT EXISTS]"]),TE=O(["CREATE [TEMPORARY | TEMP] VIEW [IF NOT EXISTS]","UPDATE [OR ABORT | OR FAIL | OR IGNORE | OR REPLACE | OR ROLLBACK]","ON CONFLICT","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD [COLUMN]","DROP [COLUMN]","RENAME [COLUMN]","RENAME TO","SET SCHEMA"]),TT=O(["UNION [ALL]","EXCEPT","INTERSECT"]),Te=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),TR={name:"sqlite",tokenizerOptions:{reservedSelect:E3,reservedClauses:[...E9,...E7,...TE],reservedSetOperations:TT,reservedJoins:Te,reservedKeywordPhrases:O(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","DO UPDATE"]),reservedDataTypePhrases:O([]),reservedKeywords:["ABORT","ACTION","ADD","AFTER","ALL","ALTER","AND","ARE","ALWAYS","ANALYZE","AS","ASC","ATTACH","AUTOINCREMENT","BEFORE","BEGIN","BETWEEN","BY","CASCADE","CASE","CAST","CHECK","COLLATE","COLUMN","COMMIT","CONFLICT","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATABASE","DEFAULT","DEFERRABLE","DEFERRED","DELETE","DESC","DETACH","DISTINCT","DO","DROP","EACH","ELSE","END","ESCAPE","EXCEPT","EXCLUDE","EXCLUSIVE","EXISTS","EXPLAIN","FAIL","FILTER","FIRST","FOLLOWING","FOR","FOREIGN","FROM","FULL","GENERATED","GLOB","GROUP","HAVING","IF","IGNORE","IMMEDIATE","IN","INDEX","INDEXED","INITIALLY","INNER","INSERT","INSTEAD","INTERSECT","INTO","IS","ISNULL","JOIN","KEY","LAST","LEFT","LIKE","LIMIT","MATCH","MATERIALIZED","NATURAL","NO","NOT","NOTHING","NOTNULL","NULL","NULLS","OF","OFFSET","ON","ONLY","OPEN","OR","ORDER","OTHERS","OUTER","OVER","PARTITION","PLAN","PRAGMA","PRECEDING","PRIMARY","QUERY","RAISE","RANGE","RECURSIVE","REFERENCES","REGEXP","REINDEX","RELEASE","RENAME","REPLACE","RESTRICT","RETURNING","RIGHT","ROLLBACK","ROW","ROWS","SAVEPOINT","SELECT","SET","TABLE","TEMP","TEMPORARY","THEN","TIES","TO","TRANSACTION","TRIGGER","UNBOUNDED","UNION","UNIQUE","UPDATE","USING","VACUUM","VALUES","VIEW","VIRTUAL","WHEN","WHERE","WINDOW","WITH","WITHOUT"],reservedDataTypes:["ANY","ARRAY","BLOB","CHARACTER","DECIMAL","INT","INTEGER","NATIVE CHARACTER","NCHAR","NUMERIC","NVARCHAR","REAL","TEXT","VARCHAR","VARYING CHARACTER"],reservedFunctionNames:["ABS","CHANGES","CHAR","COALESCE","FORMAT","GLOB","HEX","IFNULL","IIF","INSTR","LAST_INSERT_ROWID","LENGTH","LIKE","LIKELIHOOD","LIKELY","LOAD_EXTENSION","LOWER","LTRIM","NULLIF","PRINTF","QUOTE","RANDOM","RANDOMBLOB","REPLACE","ROUND","RTRIM","SIGN","SOUNDEX","SQLITE_COMPILEOPTION_GET","SQLITE_COMPILEOPTION_USED","SQLITE_OFFSET","SQLITE_SOURCE_ID","SQLITE_VERSION","SUBSTR","SUBSTRING","TOTAL_CHANGES","TRIM","TYPEOF","UNICODE","UNLIKELY","UPPER","ZEROBLOB","AVG","COUNT","GROUP_CONCAT","MAX","MIN","SUM","TOTAL","DATE","TIME","DATETIME","JULIANDAY","UNIXEPOCH","STRFTIME","row_number","rank","dense_rank","percent_rank","cume_dist","ntile","lag","lead","first_value","last_value","nth_value","ACOS","ACOSH","ASIN","ASINH","ATAN","ATAN2","ATANH","CEIL","CEILING","COS","COSH","DEGREES","EXP","FLOOR","LN","LOG","LOG","LOG10","LOG2","MOD","PI","POW","POWER","RADIANS","SIN","SINH","SQRT","TAN","TANH","TRUNC","JSON","JSON_ARRAY","JSON_ARRAY_LENGTH","JSON_ARRAY_LENGTH","JSON_EXTRACT","JSON_INSERT","JSON_OBJECT","JSON_PATCH","JSON_REMOVE","JSON_REPLACE","JSON_SET","JSON_TYPE","JSON_TYPE","JSON_VALID","JSON_QUOTE","JSON_GROUP_ARRAY","JSON_GROUP_OBJECT","JSON_EACH","JSON_TREE","CAST"],stringTypes:["''-qq",{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``","[]"],paramTypes:{positional:!0,numbered:["?"],named:[":","@","$"]},operators:["%","~","&","|","<<",">>","==","->","->>","||"]},formatOptions:{onelineClauses:[...E7,...TE],tabularOnelineClauses:TE}},TA=O(["SELECT [ALL | DISTINCT]"]),Tt=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET"]),TS=O(["CREATE [GLOBAL TEMPORARY | LOCAL TEMPORARY] TABLE"]),TO=O(["CREATE [RECURSIVE] VIEW","UPDATE","WHERE CURRENT OF","DELETE FROM","DROP TABLE","ALTER TABLE","ADD COLUMN","DROP [COLUMN]","RENAME COLUMN","RENAME TO","ALTER [COLUMN]","{SET | DROP} DEFAULT","ADD SCOPE","DROP SCOPE {CASCADE | RESTRICT}","RESTART WITH","TRUNCATE TABLE","SET SCHEMA"]),TI=O(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),TN=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),Tr={name:"sql",tokenizerOptions:{reservedSelect:TA,reservedClauses:[...Tt,...TS,...TO],reservedSetOperations:TI,reservedJoins:TN,reservedKeywordPhrases:O(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),reservedDataTypePhrases:O([]),reservedKeywords:["ALL","ALLOCATE","ALTER","ANY","ARE","AS","ASC","ASENSITIVE","ASYMMETRIC","AT","ATOMIC","AUTHORIZATION","BEGIN","BETWEEN","BOTH","BY","CALL","CALLED","CASCADED","CAST","CHECK","CLOSE","COALESCE","COLLATE","COLUMN","COMMIT","CONDITION","CONNECT","CONSTRAINT","CORRESPONDING","CREATE","CROSS","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DEFAULT_TRANSFORM_GROUP","CURRENT_PATH","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TRANSFORM_GROUP_FOR_TYPE","CURRENT_USER","CURSOR","CYCLE","DEALLOCATE","DAY","DECLARE","DEFAULT","DELETE","DEREF","DESC","DESCRIBE","DETERMINISTIC","DISCONNECT","DISTINCT","DROP","DYNAMIC","EACH","ELEMENT","END-EXEC","ESCAPE","EVERY","EXCEPT","EXEC","EXECUTE","EXISTS","EXTERNAL","FALSE","FETCH","FILTER","FOR","FOREIGN","FREE","FROM","FULL","FUNCTION","GET","GLOBAL","GRANT","GROUP","HAVING","HOLD","HOUR","IDENTITY","IN","INDICATOR","INNER","INOUT","INSENSITIVE","INSERT","INTERSECT","INTO","IS","LANGUAGE","LARGE","LATERAL","LEADING","LEFT","LIKE","LIKE_REGEX","LOCAL","MATCH","MEMBER","MERGE","METHOD","MINUTE","MODIFIES","MODULE","MONTH","NATURAL","NEW","NO","NONE","NOT","NULL","NULLIF","OF","OLD","ON","ONLY","OPEN","ORDER","OUT","OUTER","OVER","OVERLAPS","PARAMETER","PARTITION","PRECISION","PREPARE","PRIMARY","PROCEDURE","RANGE","READS","REAL","RECURSIVE","REF","REFERENCES","REFERENCING","RELEASE","RESULT","RETURN","RETURNS","REVOKE","RIGHT","ROLLBACK","ROLLUP","ROW","ROWS","SAVEPOINT","SCOPE","SCROLL","SEARCH","SECOND","SELECT","SENSITIVE","SESSION_USER","SET","SIMILAR","SOME","SPECIFIC","SQL","SQLEXCEPTION","SQLSTATE","SQLWARNING","START","STATIC","SUBMULTISET","SYMMETRIC","SYSTEM","SYSTEM_USER","TABLE","TABLESAMPLE","THEN","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO","TRAILING","TRANSLATION","TREAT","TRIGGER","TRUE","UESCAPE","UNION","UNIQUE","UNKNOWN","UNNEST","UPDATE","USER","USING","VALUE","VALUES","WHENEVER","WINDOW","WITHIN","WITHOUT","YEAR"],reservedDataTypes:["ARRAY","BIGINT","BINARY LARGE OBJECT","BINARY VARYING","BINARY","BLOB","BOOLEAN","CHAR LARGE OBJECT","CHAR VARYING","CHAR","CHARACTER LARGE OBJECT","CHARACTER VARYING","CHARACTER","CLOB","DATE","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","INTERVAL","MULTISET","NATIONAL CHAR VARYING","NATIONAL CHAR","NATIONAL CHARACTER LARGE OBJECT","NATIONAL CHARACTER VARYING","NATIONAL CHARACTER","NCHAR LARGE OBJECT","NCHAR VARYING","NCHAR","NCLOB","NUMERIC","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],reservedFunctionNames:["GROUPING","RANK","DENSE_RANK","PERCENT_RANK","CUME_DIST","ROW_NUMBER","POSITION","OCCURRENCES_REGEX","POSITION_REGEX","EXTRACT","CHAR_LENGTH","CHARACTER_LENGTH","OCTET_LENGTH","CARDINALITY","ABS","MOD","LN","EXP","POWER","SQRT","FLOOR","CEIL","CEILING","WIDTH_BUCKET","SUBSTRING","SUBSTRING_REGEX","UPPER","LOWER","CONVERT","TRANSLATE","TRANSLATE_REGEX","TRIM","OVERLAY","NORMALIZE","SPECIFICTYPE","CURRENT_DATE","CURRENT_TIME","LOCALTIME","CURRENT_TIMESTAMP","LOCALTIMESTAMP","COUNT","AVG","MAX","MIN","SUM","STDDEV_POP","STDDEV_SAMP","VAR_SAMP","VAR_POP","COLLECT","FUSION","INTERSECTION","COVAR_POP","COVAR_SAMP","CORR","REGR_SLOPE","REGR_INTERCEPT","REGR_COUNT","REGR_R2","REGR_AVGX","REGR_AVGY","REGR_SXX","REGR_SYY","REGR_SXY","PERCENTILE_CONT","PERCENTILE_DISC","CAST","COALESCE","NULLIF","ROUND","SIN","COS","TAN","ASIN","ACOS","ATAN"],stringTypes:[{quote:"''-qq-bs",prefixes:["N","U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq',"``"],paramTypes:{positional:!0},operators:["||"]},formatOptions:{onelineClauses:[...TS,...TO],tabularOnelineClauses:TO}},Tn=O(["SELECT [ALL | DISTINCT]"]),Ts=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),To=O(["CREATE TABLE [IF NOT EXISTS]"]),TC=O(["CREATE [OR REPLACE] [MATERIALIZED] VIEW","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),TL=O(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),Ta=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),T_={name:"trino",tokenizerOptions:{reservedSelect:Tn,reservedClauses:[...Ts,...To,...TC],reservedSetOperations:TL,reservedJoins:Ta,reservedKeywordPhrases:O(["{ROWS | RANGE | GROUPS} BETWEEN","IS [NOT] DISTINCT FROM"]),reservedDataTypePhrases:O([]),reservedKeywords:["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],reservedDataTypes:["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"],reservedFunctionNames:["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH","CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"],extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:[...To,...TC],tabularOnelineClauses:TC}},Ti=O(["SELECT [ALL | DISTINCT]"]),TP=O(["WITH","INTO","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","OFFSET","FETCH {FIRST | NEXT}","FOR {BROWSE | XML | JSON}","OPTION","INSERT [INTO]","VALUES","SET","MERGE [INTO]","WHEN [NOT] MATCHED [BY TARGET | BY SOURCE] [THEN]","UPDATE SET","CREATE [OR ALTER] {PROC | PROCEDURE}"]),TD=O(["CREATE TABLE"]),Tl=O(["CREATE [OR ALTER] [MATERIALIZED] VIEW","UPDATE","WHERE CURRENT OF","DELETE [FROM]","DROP TABLE [IF EXISTS]","ALTER TABLE","ADD","DROP COLUMN [IF EXISTS]","ALTER COLUMN","TRUNCATE TABLE","CREATE [UNIQUE] [CLUSTERED] INDEX","CREATE DATABASE","ALTER DATABASE","DROP DATABASE [IF EXISTS]","GO","USE","ADD SENSITIVITY CLASSIFICATION","ADD SIGNATURE","AGGREGATE","ANSI_DEFAULTS","ANSI_NULLS","ANSI_NULL_DFLT_OFF","ANSI_NULL_DFLT_ON","ANSI_PADDING","ANSI_WARNINGS","APPLICATION ROLE","ARITHABORT","ARITHIGNORE","ASSEMBLY","ASYMMETRIC KEY","AUTHORIZATION","AVAILABILITY GROUP","BACKUP","BACKUP CERTIFICATE","BACKUP MASTER KEY","BACKUP SERVICE MASTER KEY","BEGIN CONVERSATION TIMER","BEGIN DIALOG CONVERSATION","BROKER PRIORITY","BULK INSERT","CERTIFICATE","CLOSE MASTER KEY","CLOSE SYMMETRIC KEY","COLLATE","COLUMN ENCRYPTION KEY","COLUMN MASTER KEY","COLUMNSTORE INDEX","CONCAT_NULL_YIELDS_NULL","CONTEXT_INFO","CONTRACT","CREDENTIAL","CRYPTOGRAPHIC PROVIDER","CURSOR_CLOSE_ON_COMMIT","DATABASE","DATABASE AUDIT SPECIFICATION","DATABASE ENCRYPTION KEY","DATABASE HADR","DATABASE SCOPED CONFIGURATION","DATABASE SCOPED CREDENTIAL","DATABASE SET","DATEFIRST","DATEFORMAT","DEADLOCK_PRIORITY","DENY","DENY XML","DISABLE TRIGGER","ENABLE TRIGGER","END CONVERSATION","ENDPOINT","EVENT NOTIFICATION","EVENT SESSION","EXECUTE AS","EXTERNAL DATA SOURCE","EXTERNAL FILE FORMAT","EXTERNAL LANGUAGE","EXTERNAL LIBRARY","EXTERNAL RESOURCE POOL","EXTERNAL TABLE","FIPS_FLAGGER","FMTONLY","FORCEPLAN","FULLTEXT CATALOG","FULLTEXT INDEX","FULLTEXT STOPLIST","FUNCTION","GET CONVERSATION GROUP","GET_TRANSMISSION_STATUS","GRANT","GRANT XML","IDENTITY_INSERT","IMPLICIT_TRANSACTIONS","INDEX","LANGUAGE","LOCK_TIMEOUT","LOGIN","MASTER KEY","MESSAGE TYPE","MOVE CONVERSATION","NOCOUNT","NOEXEC","NUMERIC_ROUNDABORT","OFFSETS","OPEN MASTER KEY","OPEN SYMMETRIC KEY","PARSEONLY","PARTITION FUNCTION","PARTITION SCHEME","PROCEDURE","QUERY_GOVERNOR_COST_LIMIT","QUEUE","QUOTED_IDENTIFIER","RECEIVE","REMOTE SERVICE BINDING","REMOTE_PROC_TRANSACTIONS","RESOURCE GOVERNOR","RESOURCE POOL","RESTORE","RESTORE FILELISTONLY","RESTORE HEADERONLY","RESTORE LABELONLY","RESTORE MASTER KEY","RESTORE REWINDONLY","RESTORE SERVICE MASTER KEY","RESTORE VERIFYONLY","REVERT","REVOKE","REVOKE XML","ROLE","ROUTE","ROWCOUNT","RULE","SCHEMA","SEARCH PROPERTY LIST","SECURITY POLICY","SELECTIVE XML INDEX","SEND","SENSITIVITY CLASSIFICATION","SEQUENCE","SERVER AUDIT","SERVER AUDIT SPECIFICATION","SERVER CONFIGURATION","SERVER ROLE","SERVICE","SERVICE MASTER KEY","SETUSER","SHOWPLAN_ALL","SHOWPLAN_TEXT","SHOWPLAN_XML","SIGNATURE","SPATIAL INDEX","STATISTICS","STATISTICS IO","STATISTICS PROFILE","STATISTICS TIME","STATISTICS XML","SYMMETRIC KEY","SYNONYM","TABLE","TABLE IDENTITY","TEXTSIZE","TRANSACTION ISOLATION LEVEL","TRIGGER","TYPE","UPDATE STATISTICS","USER","WORKLOAD GROUP","XACT_ABORT","XML INDEX","XML SCHEMA COLLECTION"]),Tc=O(["UNION [ALL]","EXCEPT","INTERSECT"]),TU=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","{CROSS | OUTER} APPLY"]),TM={name:"transactsql",tokenizerOptions:{reservedSelect:Ti,reservedClauses:[...TP,...TD,...Tl],reservedSetOperations:Tc,reservedJoins:TU,reservedKeywordPhrases:O(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE} BETWEEN"]),reservedDataTypePhrases:O([]),reservedKeywords:["ADD","ALL","ALTER","AND","ANY","AS","ASC","AUTHORIZATION","BACKUP","BEGIN","BETWEEN","BREAK","BROWSE","BULK","BY","CASCADE","CHECK","CHECKPOINT","CLOSE","CLUSTERED","COALESCE","COLLATE","COLUMN","COMMIT","COMPUTE","CONSTRAINT","CONTAINS","CONTAINSTABLE","CONTINUE","CONVERT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DBCC","DEALLOCATE","DECLARE","DEFAULT","DELETE","DENY","DESC","DISK","DISTINCT","DISTRIBUTED","DROP","DUMP","ERRLVL","ESCAPE","EXEC","EXECUTE","EXISTS","EXIT","EXTERNAL","FETCH","FILE","FILLFACTOR","FOR","FOREIGN","FREETEXT","FREETEXTTABLE","FROM","FULL","FUNCTION","GOTO","GRANT","GROUP","HAVING","HOLDLOCK","IDENTITY","IDENTITYCOL","IDENTITY_INSERT","IF","IN","INDEX","INNER","INSERT","INTERSECT","INTO","IS","JOIN","KEY","KILL","LEFT","LIKE","LINENO","LOAD","MERGE","NOCHECK","NONCLUSTERED","NOT","NULL","NULLIF","OF","OFF","OFFSETS","ON","OPEN","OPENDATASOURCE","OPENQUERY","OPENROWSET","OPENXML","OPTION","OR","ORDER","OUTER","OVER","PERCENT","PIVOT","PLAN","PRIMARY","PRINT","PROC","PROCEDURE","PUBLIC","RAISERROR","READ","READTEXT","RECONFIGURE","REFERENCES","REPLICATION","RESTORE","RESTRICT","RETURN","REVERT","REVOKE","RIGHT","ROLLBACK","ROWCOUNT","ROWGUIDCOL","RULE","SAVE","SCHEMA","SECURITYAUDIT","SELECT","SEMANTICKEYPHRASETABLE","SEMANTICSIMILARITYDETAILSTABLE","SEMANTICSIMILARITYTABLE","SESSION_USER","SET","SETUSER","SHUTDOWN","SOME","STATISTICS","SYSTEM_USER","TABLE","TABLESAMPLE","TEXTSIZE","THEN","TO","TOP","TRAN","TRANSACTION","TRIGGER","TRUNCATE","TRY_CONVERT","TSEQUAL","UNION","UNIQUE","UNPIVOT","UPDATE","UPDATETEXT","USE","USER","VALUES","VIEW","WAITFOR","WHERE","WHILE","WITH","WITHIN GROUP","WRITETEXT","$ACTION"],reservedDataTypes:["BINARY","BIT","CHAR","CHAR","CHARACTER","DATE","DATETIME2","DATETIMEOFFSET","DEC","DECIMAL","DOUBLE","FLOAT","INT","INTEGER","NATIONAL","NCHAR","NUMERIC","NVARCHAR","PRECISION","REAL","SMALLINT","TIME","TIMESTAMP","VARBINARY","VARCHAR"],reservedFunctionNames:["APPROX_COUNT_DISTINCT","AVG","CHECKSUM_AGG","COUNT","COUNT_BIG","GROUPING","GROUPING_ID","MAX","MIN","STDEV","STDEVP","SUM","VAR","VARP","CUME_DIST","FIRST_VALUE","LAG","LAST_VALUE","LEAD","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","Collation - COLLATIONPROPERTY","Collation - TERTIARY_WEIGHTS","@@DBTS","@@LANGID","@@LANGUAGE","@@LOCK_TIMEOUT","@@MAX_CONNECTIONS","@@MAX_PRECISION","@@NESTLEVEL","@@OPTIONS","@@REMSERVER","@@SERVERNAME","@@SERVICENAME","@@SPID","@@TEXTSIZE","@@VERSION","CAST","CONVERT","PARSE","TRY_CAST","TRY_CONVERT","TRY_PARSE","ASYMKEY_ID","ASYMKEYPROPERTY","CERTPROPERTY","CERT_ID","CRYPT_GEN_RANDOM","DECRYPTBYASYMKEY","DECRYPTBYCERT","DECRYPTBYKEY","DECRYPTBYKEYAUTOASYMKEY","DECRYPTBYKEYAUTOCERT","DECRYPTBYPASSPHRASE","ENCRYPTBYASYMKEY","ENCRYPTBYCERT","ENCRYPTBYKEY","ENCRYPTBYPASSPHRASE","HASHBYTES","IS_OBJECTSIGNED","KEY_GUID","KEY_ID","KEY_NAME","SIGNBYASYMKEY","SIGNBYCERT","SYMKEYPROPERTY","VERIFYSIGNEDBYCERT","VERIFYSIGNEDBYASYMKEY","@@CURSOR_ROWS","@@FETCH_STATUS","CURSOR_STATUS","DATALENGTH","IDENT_CURRENT","IDENT_INCR","IDENT_SEED","IDENTITY","SQL_VARIANT_PROPERTY","@@DATEFIRST","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_TIMEZONE_ID","DATEADD","DATEDIFF","DATEDIFF_BIG","DATEFROMPARTS","DATENAME","DATEPART","DATETIME2FROMPARTS","DATETIMEFROMPARTS","DATETIMEOFFSETFROMPARTS","DAY","EOMONTH","GETDATE","GETUTCDATE","ISDATE","MONTH","SMALLDATETIMEFROMPARTS","SWITCHOFFSET","SYSDATETIME","SYSDATETIMEOFFSET","SYSUTCDATETIME","TIMEFROMPARTS","TODATETIMEOFFSET","YEAR","JSON","ISJSON","JSON_VALUE","JSON_QUERY","JSON_MODIFY","ABS","ACOS","ASIN","ATAN","ATN2","CEILING","COS","COT","DEGREES","EXP","FLOOR","LOG","LOG10","PI","POWER","RADIANS","RAND","ROUND","SIGN","SIN","SQRT","SQUARE","TAN","CHOOSE","GREATEST","IIF","LEAST","@@PROCID","APP_NAME","APPLOCK_MODE","APPLOCK_TEST","ASSEMBLYPROPERTY","COL_LENGTH","COL_NAME","COLUMNPROPERTY","DATABASEPROPERTYEX","DB_ID","DB_NAME","FILE_ID","FILE_IDEX","FILE_NAME","FILEGROUP_ID","FILEGROUP_NAME","FILEGROUPPROPERTY","FILEPROPERTY","FILEPROPERTYEX","FULLTEXTCATALOGPROPERTY","FULLTEXTSERVICEPROPERTY","INDEX_COL","INDEXKEY_PROPERTY","INDEXPROPERTY","NEXT VALUE FOR","OBJECT_DEFINITION","OBJECT_ID","OBJECT_NAME","OBJECT_SCHEMA_NAME","OBJECTPROPERTY","OBJECTPROPERTYEX","ORIGINAL_DB_NAME","PARSENAME","SCHEMA_ID","SCHEMA_NAME","SCOPE_IDENTITY","SERVERPROPERTY","STATS_DATE","TYPE_ID","TYPE_NAME","TYPEPROPERTY","DENSE_RANK","NTILE","RANK","ROW_NUMBER","PUBLISHINGSERVERNAME","CERTENCODED","CERTPRIVATEKEY","CURRENT_USER","DATABASE_PRINCIPAL_ID","HAS_DBACCESS","HAS_PERMS_BY_NAME","IS_MEMBER","IS_ROLEMEMBER","IS_SRVROLEMEMBER","LOGINPROPERTY","ORIGINAL_LOGIN","PERMISSIONS","PWDENCRYPT","PWDCOMPARE","SESSION_USER","SESSIONPROPERTY","SUSER_ID","SUSER_NAME","SUSER_SID","SUSER_SNAME","SYSTEM_USER","USER","USER_ID","USER_NAME","ASCII","CHARINDEX","CONCAT","CONCAT_WS","DIFFERENCE","FORMAT","LEFT","LEN","LOWER","LTRIM","PATINDEX","QUOTENAME","REPLACE","REPLICATE","REVERSE","RIGHT","RTRIM","SOUNDEX","SPACE","STR","STRING_AGG","STRING_ESCAPE","STUFF","SUBSTRING","TRANSLATE","TRIM","UNICODE","UPPER","$PARTITION","@@ERROR","@@IDENTITY","@@PACK_RECEIVED","@@ROWCOUNT","@@TRANCOUNT","BINARY_CHECKSUM","CHECKSUM","COMPRESS","CONNECTIONPROPERTY","CONTEXT_INFO","CURRENT_REQUEST_ID","CURRENT_TRANSACTION_ID","DECOMPRESS","ERROR_LINE","ERROR_MESSAGE","ERROR_NUMBER","ERROR_PROCEDURE","ERROR_SEVERITY","ERROR_STATE","FORMATMESSAGE","GET_FILESTREAM_TRANSACTION_CONTEXT","GETANSINULL","HOST_ID","HOST_NAME","ISNULL","ISNUMERIC","MIN_ACTIVE_ROWVERSION","NEWID","NEWSEQUENTIALID","ROWCOUNT_BIG","SESSION_CONTEXT","XACT_STATE","@@CONNECTIONS","@@CPU_BUSY","@@IDLE","@@IO_BUSY","@@PACK_SENT","@@PACKET_ERRORS","@@TIMETICKS","@@TOTAL_ERRORS","@@TOTAL_READ","@@TOTAL_WRITE","TEXTPTR","TEXTVALID","COLUMNS_UPDATED","EVENTDATA","TRIGGER_NESTLEVEL","UPDATE","COALESCE","NULLIF"],nestedBlockComments:!0,stringTypes:[{quote:"''-qq",prefixes:["N"]},"{}"],identTypes:['""-qq',"[]"],identChars:{first:"#@",rest:"#@$"},paramTypes:{named:["@"],quoted:["@"]},operators:["%","&","|","^","~","!<","!>","+=","-=","*=","/=","%=","|=","&=","^=","::",":"],propertyAccessOperators:[".."]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...TD,...Tl],tabularOnelineClauses:Tl}},Tu=O(["SELECT [ALL | DISTINCT | DISTINCTROW]"]),Tp=O(["WITH","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","LIMIT","OFFSET","INSERT [IGNORE] [INTO]","VALUES","REPLACE [INTO]","ON DUPLICATE KEY UPDATE","SET","CREATE [OR REPLACE] [TEMPORARY] PROCEDURE [IF NOT EXISTS]","CREATE [OR REPLACE] [EXTERNAL] FUNCTION"]),TG=O(["CREATE [ROWSTORE] [REFERENCE | TEMPORARY | GLOBAL TEMPORARY] TABLE [IF NOT EXISTS]"]),Td=O(["CREATE VIEW","UPDATE","DELETE [FROM]","DROP [TEMPORARY] TABLE [IF EXISTS]","ALTER [ONLINE] TABLE","ADD [COLUMN]","ADD [UNIQUE] {INDEX | KEY}","DROP [COLUMN]","MODIFY [COLUMN]","CHANGE","RENAME [TO | AS]","TRUNCATE [TABLE]","ADD AGGREGATOR","ADD LEAF","AGGREGATOR SET AS MASTER","ALTER DATABASE","ALTER PIPELINE","ALTER RESOURCE POOL","ALTER USER","ALTER VIEW","ANALYZE TABLE","ATTACH DATABASE","ATTACH LEAF","ATTACH LEAF ALL","BACKUP DATABASE","BINLOG","BOOTSTRAP AGGREGATOR","CACHE INDEX","CALL","CHANGE","CHANGE MASTER TO","CHANGE REPLICATION FILTER","CHANGE REPLICATION SOURCE TO","CHECK BLOB CHECKSUM","CHECK TABLE","CHECKSUM TABLE","CLEAR ORPHAN DATABASES","CLONE","COMMIT","CREATE DATABASE","CREATE GROUP","CREATE INDEX","CREATE LINK","CREATE MILESTONE","CREATE PIPELINE","CREATE RESOURCE POOL","CREATE ROLE","CREATE USER","DEALLOCATE PREPARE","DESCRIBE","DETACH DATABASE","DETACH PIPELINE","DROP DATABASE","DROP FUNCTION","DROP INDEX","DROP LINK","DROP PIPELINE","DROP PROCEDURE","DROP RESOURCE POOL","DROP ROLE","DROP USER","DROP VIEW","EXECUTE","EXPLAIN","FLUSH","FORCE","GRANT","HANDLER","HELP","KILL CONNECTION","KILLALL QUERIES","LOAD DATA","LOAD INDEX INTO CACHE","LOAD XML","LOCK INSTANCE FOR BACKUP","LOCK TABLES","MASTER_POS_WAIT","OPTIMIZE TABLE","PREPARE","PURGE BINARY LOGS","REBALANCE PARTITIONS","RELEASE SAVEPOINT","REMOVE AGGREGATOR","REMOVE LEAF","REPAIR TABLE","REPLACE","REPLICATE DATABASE","RESET","RESET MASTER","RESET PERSIST","RESET REPLICA","RESET SLAVE","RESTART","RESTORE DATABASE","RESTORE REDUNDANCY","REVOKE","ROLLBACK","ROLLBACK TO SAVEPOINT","SAVEPOINT","SET CHARACTER SET","SET DEFAULT ROLE","SET NAMES","SET PASSWORD","SET RESOURCE GROUP","SET ROLE","SET TRANSACTION","SHOW","SHOW CHARACTER SET","SHOW COLLATION","SHOW COLUMNS","SHOW CREATE DATABASE","SHOW CREATE FUNCTION","SHOW CREATE PIPELINE","SHOW CREATE PROCEDURE","SHOW CREATE TABLE","SHOW CREATE USER","SHOW CREATE VIEW","SHOW DATABASES","SHOW ENGINE","SHOW ENGINES","SHOW ERRORS","SHOW FUNCTION CODE","SHOW FUNCTION STATUS","SHOW GRANTS","SHOW INDEX","SHOW MASTER STATUS","SHOW OPEN TABLES","SHOW PLUGINS","SHOW PRIVILEGES","SHOW PROCEDURE CODE","SHOW PROCEDURE STATUS","SHOW PROCESSLIST","SHOW PROFILE","SHOW PROFILES","SHOW RELAYLOG EVENTS","SHOW REPLICA STATUS","SHOW REPLICAS","SHOW SLAVE","SHOW SLAVE HOSTS","SHOW STATUS","SHOW TABLE STATUS","SHOW TABLES","SHOW VARIABLES","SHOW WARNINGS","SHUTDOWN","SNAPSHOT DATABASE","SOURCE_POS_WAIT","START GROUP_REPLICATION","START PIPELINE","START REPLICA","START SLAVE","START TRANSACTION","STOP GROUP_REPLICATION","STOP PIPELINE","STOP REPLICA","STOP REPLICATING","STOP SLAVE","TEST PIPELINE","UNLOCK INSTANCE","UNLOCK TABLES","USE","XA","ITERATE","LEAVE","LOOP","REPEAT","RETURN","WHILE"]),Tf=O(["UNION [ALL | DISTINCT]","EXCEPT","INTERSECT","MINUS"]),TB=O(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL {LEFT | RIGHT} [OUTER] JOIN","STRAIGHT_JOIN"]),TH={name:"singlestoredb",tokenizerOptions:{reservedSelect:Tu,reservedClauses:[...Tp,...TG,...Td],reservedSetOperations:Tf,reservedJoins:TB,reservedKeywordPhrases:O(["ON DELETE","ON UPDATE","CHARACTER SET","{ROWS | RANGE} BETWEEN","IDENTIFIED BY"]),reservedDataTypePhrases:O([]),reservedKeywords:["ADD","ALL","ALTER","ANALYZE","AND","AS","ASC","ASENSITIVE","BEFORE","BETWEEN","_BINARY","BOTH","BY","CALL","CASCADE","CASE","CHANGE","CHECK","COLLATE","COLUMN","CONDITION","CONSTRAINT","CONTINUE","CONVERT","CREATE","CROSS","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","DATABASE","DATABASES","DAY_HOUR","DAY_MICROSECOND","DAY_MINUTE","DAY_SECOND","DECLARE","DEFAULT","DELAYED","DELETE","DESC","DESCRIBE","DETERMINISTIC","DISTINCT","DISTINCTROW","DIV","DROP","DUAL","EACH","ELSE","ELSEIF","ENCLOSED","ESCAPED","EXCEPT","EXISTS","EXIT","EXPLAIN","EXTRA_JOIN","FALSE","FETCH","FOR","FORCE","FORCE_COMPILED_MODE","FORCE_INTERPRETER_MODE","FOREIGN","FROM","FULL","FULLTEXT","GRANT","GROUP","HAVING","HEARTBEAT_NO_LOGGING","HIGH_PRIORITY","HOUR_MICROSECOND","HOUR_MINUTE","HOUR_SECOND","IF","IGNORE","IN","INDEX","INFILE","INNER","INOUT","INSENSITIVE","INSERT","IN","_INTERNAL_DYNAMIC_TYPECAST","INTERSECT","INTERVAL","INTO","ITERATE","JOIN","KEY","KEYS","KILL","LEADING","LEAVE","LEFT","LIKE","LIMIT","LINES","LOAD","LOCALTIME","LOCALTIMESTAMP","LOCK","LOOP","LOW_PRIORITY","MATCH","MAXVALUE","MINUS","MINUTE_MICROSECOND","MINUTE_SECOND","MOD","MODIFIES","NATURAL","NO_QUERY_REWRITE","NOT","NO_WRITE_TO_BINLOG","NO_QUERY_REWRITE","NULL","ON","OPTIMIZE","OPTION","OPTIONALLY","OR","ORDER","OUT","OUTER","OUTFILE","OVER","PRIMARY","PROCEDURE","PURGE","RANGE","READ","READS","REFERENCES","REGEXP","RELEASE","RENAME","REPEAT","REPLACE","REQUIRE","RESTRICT","RETURN","REVOKE","RIGHT","RIGHT_ANTI_JOIN","RIGHT_SEMI_JOIN","RIGHT_STRAIGHT_JOIN","RLIKE","SCHEMA","SCHEMAS","SECOND_MICROSECOND","SELECT","SEMI_JOIN","SENSITIVE","SEPARATOR","SET","SHOW","SIGNAL","SPATIAL","SPECIFIC","SQL","SQL_BIG_RESULT","SQL_BUFFER_RESULT","SQL_CACHE","SQL_CALC_FOUND_ROWS","SQLEXCEPTION","SQL_NO_CACHE","SQL_NO_LOGGING","SQL_SMALL_RESULT","SQLSTATE","SQLWARNING","STRAIGHT_JOIN","TABLE","TERMINATED","THEN","TO","TRAILING","TRIGGER","TRUE","UNBOUNDED","UNDO","UNION","UNIQUE","UNLOCK","UPDATE","USAGE","USE","USING","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","_UTF8","VALUES","WHEN","WHERE","WHILE","WINDOW","WITH","WITHIN","WRITE","XOR","YEAR_MONTH","ZEROFILL"],reservedDataTypes:["BIGINT","BINARY","BIT","BLOB","CHAR","CHARACTER","DATETIME","DEC","DECIMAL","DOUBLE PRECISION","DOUBLE","ENUM","FIXED","FLOAT","FLOAT4","FLOAT8","INT","INT1","INT2","INT3","INT4","INT8","INTEGER","LONG","LONGBLOB","LONGTEXT","MEDIUMBLOB","MEDIUMINT","MEDIUMTEXT","MIDDLEINT","NATIONAL CHAR","NATIONAL VARCHAR","NUMERIC","PRECISION","REAL","SMALLINT","TEXT","TIME","TIMESTAMP","TINYBLOB","TINYINT","TINYTEXT","UNSIGNED","VARBINARY","VARCHAR","VARCHARACTER","YEAR"],reservedFunctionNames:["ABS","ACOS","ADDDATE","ADDTIME","AES_DECRYPT","AES_ENCRYPT","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_COUNT_DISTINCT_ACCUMULATE","APPROX_COUNT_DISTINCT_COMBINE","APPROX_COUNT_DISTINCT_ESTIMATE","APPROX_GEOGRAPHY_INTERSECTS","APPROX_PERCENTILE","ASCII","ASIN","ATAN","ATAN2","AVG","BIN","BINARY","BIT_AND","BIT_COUNT","BIT_OR","BIT_XOR","CAST","CEIL","CEILING","CHAR","CHARACTER_LENGTH","CHAR_LENGTH","CHARSET","COALESCE","COERCIBILITY","COLLATION","COLLECT","CONCAT","CONCAT_WS","CONNECTION_ID","CONV","CONVERT","CONVERT_TZ","COS","COT","COUNT","CUME_DIST","CURDATE","CURRENT_DATE","CURRENT_ROLE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURTIME","DATABASE","DATE","DATE_ADD","DATEDIFF","DATE_FORMAT","DATE_SUB","DATE_TRUNC","DAY","DAYNAME","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","DECODE","DEFAULT","DEGREES","DENSE_RANK","DIV","DOT_PRODUCT","ELT","EUCLIDEAN_DISTANCE","EXP","EXTRACT","FIELD","FIRST","FIRST_VALUE","FLOOR","FORMAT","FOUND_ROWS","FROM_BASE64","FROM_DAYS","FROM_UNIXTIME","GEOGRAPHY_AREA","GEOGRAPHY_CONTAINS","GEOGRAPHY_DISTANCE","GEOGRAPHY_INTERSECTS","GEOGRAPHY_LATITUDE","GEOGRAPHY_LENGTH","GEOGRAPHY_LONGITUDE","GEOGRAPHY_POINT","GEOGRAPHY_WITHIN_DISTANCE","GEOMETRY_AREA","GEOMETRY_CONTAINS","GEOMETRY_DISTANCE","GEOMETRY_FILTER","GEOMETRY_INTERSECTS","GEOMETRY_LENGTH","GEOMETRY_POINT","GEOMETRY_WITHIN_DISTANCE","GEOMETRY_X","GEOMETRY_Y","GREATEST","GROUPING","GROUP_CONCAT","HEX","HIGHLIGHT","HOUR","ICU_VERSION","IF","IFNULL","INET_ATON","INET_NTOA","INET6_ATON","INET6_NTOA","INITCAP","INSERT","INSTR","INTERVAL","IS","IS NULL","JSON_AGG","JSON_ARRAY_CONTAINS_DOUBLE","JSON_ARRAY_CONTAINS_JSON","JSON_ARRAY_CONTAINS_STRING","JSON_ARRAY_PUSH_DOUBLE","JSON_ARRAY_PUSH_JSON","JSON_ARRAY_PUSH_STRING","JSON_DELETE_KEY","JSON_EXTRACT_DOUBLE","JSON_EXTRACT_JSON","JSON_EXTRACT_STRING","JSON_EXTRACT_BIGINT","JSON_GET_TYPE","JSON_LENGTH","JSON_SET_DOUBLE","JSON_SET_JSON","JSON_SET_STRING","JSON_SPLICE_DOUBLE","JSON_SPLICE_JSON","JSON_SPLICE_STRING","LAG","LAST_DAY","LAST_VALUE","LCASE","LEAD","LEAST","LEFT","LENGTH","LIKE","LN","LOCALTIME","LOCALTIMESTAMP","LOCATE","LOG","LOG10","LOG2","LPAD","LTRIM","MATCH","MAX","MD5","MEDIAN","MICROSECOND","MIN","MINUTE","MOD","MONTH","MONTHNAME","MONTHS_BETWEEN","NOT","NOW","NTH_VALUE","NTILE","NULLIF","OCTET_LENGTH","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIVOT","POSITION","POW","POWER","QUARTER","QUOTE","RADIANS","RAND","RANK","REGEXP","REPEAT","REPLACE","REVERSE","RIGHT","RLIKE","ROUND","ROW_COUNT","ROW_NUMBER","RPAD","RTRIM","SCALAR","SCHEMA","SEC_TO_TIME","SHA1","SHA2","SIGMOID","SIGN","SIN","SLEEP","SPLIT","SOUNDEX","SOUNDS LIKE","SOURCE_POS_WAIT","SPACE","SQRT","STDDEV","STDDEV_POP","STDDEV_SAMP","STR_TO_DATE","SUBDATE","SUBSTR","SUBSTRING","SUBSTRING_INDEX","SUM","SYS_GUID","TAN","TIME","TIMEDIFF","TIME_BUCKET","TIME_FORMAT","TIMESTAMP","TIMESTAMPADD","TIMESTAMPDIFF","TIME_TO_SEC","TO_BASE64","TO_CHAR","TO_DAYS","TO_JSON","TO_NUMBER","TO_SECONDS","TO_TIMESTAMP","TRIM","TRUNC","TRUNCATE","UCASE","UNHEX","UNIX_TIMESTAMP","UPDATEXML","UPPER","UTC_DATE","UTC_TIME","UTC_TIMESTAMP","UUID","VALUES","VARIANCE","VAR_POP","VAR_SAMP","VECTOR_SUB","VERSION","WEEK","WEEKDAY","WEEKOFYEAR","YEAR"],stringTypes:['""-qq-bs',"''-qq-bs",{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:["``"],identChars:{first:"$",rest:"$",allowFirstCharNumber:!0},variableTypes:[{regex:"@@?[A-Za-z0-9_$]+"},{quote:"``",prefixes:["@"],requirePrefix:!0}],lineCommentTypes:["--","#"],operators:[":=","&","|","^","~","<<",">>","<=>","&&","||","::","::$","::%",":>","!:>","*.*"],postProcess:Et},formatOptions:{alwaysDenseOperators:["::","::$","::%"],onelineClauses:[...TG,...Td],tabularOnelineClauses:Td}},Th=O(["SELECT [ALL | DISTINCT]"]),TF=O(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY","HAVING","PARTITION BY","ORDER BY","QUALIFY","LIMIT","OFFSET","FETCH [FIRST | NEXT]","INSERT [OVERWRITE] [ALL INTO | INTO | ALL | FIRST]","{THEN | ELSE} INTO","VALUES","SET","CLUSTER BY","[WITH] {MASKING POLICY | TAG | ROW ACCESS POLICY}","COPY GRANTS","USING TEMPLATE","MERGE INTO","WHEN MATCHED [AND]","THEN {UPDATE SET | DELETE}","WHEN NOT MATCHED THEN INSERT"]),TY=O(["CREATE [OR REPLACE] [VOLATILE] TABLE [IF NOT EXISTS]","CREATE [OR REPLACE] [LOCAL | GLOBAL] {TEMP|TEMPORARY} TABLE [IF NOT EXISTS]"]),Tm=O(["CREATE [OR REPLACE] [SECURE] [RECURSIVE] VIEW [IF NOT EXISTS]","UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","RENAME TO","SWAP WITH","[SUSPEND | RESUME] RECLUSTER","DROP CLUSTERING KEY","ADD [COLUMN]","RENAME COLUMN","{ALTER | MODIFY} [COLUMN]","DROP [COLUMN]","{ADD | ALTER | MODIFY | DROP} [CONSTRAINT]","RENAME CONSTRAINT","{ADD | DROP} SEARCH OPTIMIZATION","{SET | UNSET} TAG","{ADD | DROP} ROW ACCESS POLICY","DROP ALL ROW ACCESS POLICIES","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","SET DATA TYPE","UNSET COMMENT","{SET | UNSET} MASKING POLICY","TRUNCATE [TABLE] [IF EXISTS]","ALTER ACCOUNT","ALTER API INTEGRATION","ALTER CONNECTION","ALTER DATABASE","ALTER EXTERNAL TABLE","ALTER FAILOVER GROUP","ALTER FILE FORMAT","ALTER FUNCTION","ALTER INTEGRATION","ALTER MASKING POLICY","ALTER MATERIALIZED VIEW","ALTER NETWORK POLICY","ALTER NOTIFICATION INTEGRATION","ALTER PIPE","ALTER PROCEDURE","ALTER REPLICATION GROUP","ALTER RESOURCE MONITOR","ALTER ROLE","ALTER ROW ACCESS POLICY","ALTER SCHEMA","ALTER SECURITY INTEGRATION","ALTER SEQUENCE","ALTER SESSION","ALTER SESSION POLICY","ALTER SHARE","ALTER STAGE","ALTER STORAGE INTEGRATION","ALTER STREAM","ALTER TAG","ALTER TASK","ALTER USER","ALTER VIEW","ALTER WAREHOUSE","BEGIN","CALL","COMMIT","COPY INTO","CREATE ACCOUNT","CREATE API INTEGRATION","CREATE CONNECTION","CREATE DATABASE","CREATE EXTERNAL FUNCTION","CREATE EXTERNAL TABLE","CREATE FAILOVER GROUP","CREATE FILE FORMAT","CREATE FUNCTION","CREATE INTEGRATION","CREATE MANAGED ACCOUNT","CREATE MASKING POLICY","CREATE MATERIALIZED VIEW","CREATE NETWORK POLICY","CREATE NOTIFICATION INTEGRATION","CREATE PIPE","CREATE PROCEDURE","CREATE REPLICATION GROUP","CREATE RESOURCE MONITOR","CREATE ROLE","CREATE ROW ACCESS POLICY","CREATE SCHEMA","CREATE SECURITY INTEGRATION","CREATE SEQUENCE","CREATE SESSION POLICY","CREATE SHARE","CREATE STAGE","CREATE STORAGE INTEGRATION","CREATE STREAM","CREATE TAG","CREATE TASK","CREATE USER","CREATE WAREHOUSE","DELETE","DESCRIBE DATABASE","DESCRIBE EXTERNAL TABLE","DESCRIBE FILE FORMAT","DESCRIBE FUNCTION","DESCRIBE INTEGRATION","DESCRIBE MASKING POLICY","DESCRIBE MATERIALIZED VIEW","DESCRIBE NETWORK POLICY","DESCRIBE PIPE","DESCRIBE PROCEDURE","DESCRIBE RESULT","DESCRIBE ROW ACCESS POLICY","DESCRIBE SCHEMA","DESCRIBE SEQUENCE","DESCRIBE SESSION POLICY","DESCRIBE SHARE","DESCRIBE STAGE","DESCRIBE STREAM","DESCRIBE TABLE","DESCRIBE TASK","DESCRIBE TRANSACTION","DESCRIBE USER","DESCRIBE VIEW","DESCRIBE WAREHOUSE","DROP CONNECTION","DROP DATABASE","DROP EXTERNAL TABLE","DROP FAILOVER GROUP","DROP FILE FORMAT","DROP FUNCTION","DROP INTEGRATION","DROP MANAGED ACCOUNT","DROP MASKING POLICY","DROP MATERIALIZED VIEW","DROP NETWORK POLICY","DROP PIPE","DROP PROCEDURE","DROP REPLICATION GROUP","DROP RESOURCE MONITOR","DROP ROLE","DROP ROW ACCESS POLICY","DROP SCHEMA","DROP SEQUENCE","DROP SESSION POLICY","DROP SHARE","DROP STAGE","DROP STREAM","DROP TAG","DROP TASK","DROP USER","DROP VIEW","DROP WAREHOUSE","EXECUTE IMMEDIATE","EXECUTE TASK","EXPLAIN","GET","GRANT OWNERSHIP","GRANT ROLE","INSERT","LIST","MERGE","PUT","REMOVE","REVOKE ROLE","ROLLBACK","SHOW COLUMNS","SHOW CONNECTIONS","SHOW DATABASES","SHOW DATABASES IN FAILOVER GROUP","SHOW DATABASES IN REPLICATION GROUP","SHOW DELEGATED AUTHORIZATIONS","SHOW EXTERNAL FUNCTIONS","SHOW EXTERNAL TABLES","SHOW FAILOVER GROUPS","SHOW FILE FORMATS","SHOW FUNCTIONS","SHOW GLOBAL ACCOUNTS","SHOW GRANTS","SHOW INTEGRATIONS","SHOW LOCKS","SHOW MANAGED ACCOUNTS","SHOW MASKING POLICIES","SHOW MATERIALIZED VIEWS","SHOW NETWORK POLICIES","SHOW OBJECTS","SHOW ORGANIZATION ACCOUNTS","SHOW PARAMETERS","SHOW PIPES","SHOW PRIMARY KEYS","SHOW PROCEDURES","SHOW REGIONS","SHOW REPLICATION ACCOUNTS","SHOW REPLICATION DATABASES","SHOW REPLICATION GROUPS","SHOW RESOURCE MONITORS","SHOW ROLES","SHOW ROW ACCESS POLICIES","SHOW SCHEMAS","SHOW SEQUENCES","SHOW SESSION POLICIES","SHOW SHARES","SHOW SHARES IN FAILOVER GROUP","SHOW SHARES IN REPLICATION GROUP","SHOW STAGES","SHOW STREAMS","SHOW TABLES","SHOW TAGS","SHOW TASKS","SHOW TRANSACTIONS","SHOW USER FUNCTIONS","SHOW USERS","SHOW VARIABLES","SHOW VIEWS","SHOW WAREHOUSES","TRUNCATE MATERIALIZED VIEW","UNDROP DATABASE","UNDROP SCHEMA","UNDROP TABLE","UNDROP TAG","UNSET","USE DATABASE","USE ROLE","USE SCHEMA","USE SECONDARY ROLES","USE WAREHOUSE"]),Ty=O(["UNION [ALL]","MINUS","EXCEPT","INTERSECT"]),TV=O(["[INNER] JOIN","[NATURAL] {LEFT | RIGHT | FULL} [OUTER] JOIN","{CROSS | NATURAL} JOIN"]),Tb={name:"snowflake",tokenizerOptions:{reservedSelect:Th,reservedClauses:[...TF,...TY,...Tm],reservedSetOperations:Ty,reservedJoins:TV,reservedKeywordPhrases:O(["{ROWS | RANGE} BETWEEN","ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]"]),reservedDataTypePhrases:O([]),reservedKeywords:["ACCOUNT","ALL","ALTER","AND","ANY","AS","BETWEEN","BY","CASE","CAST","CHECK","COLUMN","CONNECT","CONNECTION","CONSTRAINT","CREATE","CROSS","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATABASE","DELETE","DISTINCT","DROP","ELSE","EXISTS","FALSE","FOLLOWING","FOR","FROM","FULL","GRANT","GROUP","GSCLUSTER","HAVING","ILIKE","IN","INCREMENT","INNER","INSERT","INTERSECT","INTO","IS","ISSUE","JOIN","LATERAL","LEFT","LIKE","LOCALTIME","LOCALTIMESTAMP","MINUS","NATURAL","NOT","NULL","OF","ON","OR","ORDER","ORGANIZATION","QUALIFY","REGEXP","REVOKE","RIGHT","RLIKE","ROW","ROWS","SAMPLE","SCHEMA","SELECT","SET","SOME","START","TABLE","TABLESAMPLE","THEN","TO","TRIGGER","TRUE","TRY_CAST","UNION","UNIQUE","UPDATE","USING","VALUES","VIEW","WHEN","WHENEVER","WHERE","WITH","COMMENT"],reservedDataTypes:["NUMBER","DECIMAL","NUMERIC","INT","INTEGER","BIGINT","SMALLINT","TINYINT","BYTEINT","FLOAT","FLOAT4","FLOAT8","DOUBLE","DOUBLE PRECISION","REAL","VARCHAR","CHAR","CHARACTER","STRING","TEXT","BINARY","VARBINARY","BOOLEAN","DATE","DATETIME","TIME","TIMESTAMP","TIMESTAMP_LTZ","TIMESTAMP_NTZ","TIMESTAMP","TIMESTAMP_TZ","VARIANT","OBJECT","ARRAY","GEOGRAPHY","GEOMETRY"],reservedFunctionNames:["ABS","ACOS","ACOSH","ADD_MONTHS","ALL_USER_NAMES","ANY_VALUE","APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","APPROX_PERCENTILE_ACCUMULATE","APPROX_PERCENTILE_COMBINE","APPROX_PERCENTILE_ESTIMATE","APPROX_TOP_K","APPROX_TOP_K_ACCUMULATE","APPROX_TOP_K_COMBINE","APPROX_TOP_K_ESTIMATE","APPROXIMATE_JACCARD_INDEX","APPROXIMATE_SIMILARITY","ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_COMPACT","ARRAY_CONSTRUCT","ARRAY_CONSTRUCT_COMPACT","ARRAY_CONTAINS","ARRAY_INSERT","ARRAY_INTERSECTION","ARRAY_POSITION","ARRAY_PREPEND","ARRAY_SIZE","ARRAY_SLICE","ARRAY_TO_STRING","ARRAY_UNION_AGG","ARRAY_UNIQUE_AGG","ARRAYS_OVERLAP","AS_ARRAY","AS_BINARY","AS_BOOLEAN","AS_CHAR","AS_VARCHAR","AS_DATE","AS_DECIMAL","AS_NUMBER","AS_DOUBLE","AS_REAL","AS_INTEGER","AS_OBJECT","AS_TIME","AS_TIMESTAMP_LTZ","AS_TIMESTAMP_NTZ","AS_TIMESTAMP_TZ","ASCII","ASIN","ASINH","ATAN","ATAN2","ATANH","AUTO_REFRESH_REGISTRATION_HISTORY","AUTOMATIC_CLUSTERING_HISTORY","AVG","BASE64_DECODE_BINARY","BASE64_DECODE_STRING","BASE64_ENCODE","BIT_LENGTH","BITAND","BITAND_AGG","BITMAP_BIT_POSITION","BITMAP_BUCKET_NUMBER","BITMAP_CONSTRUCT_AGG","BITMAP_COUNT","BITMAP_OR_AGG","BITNOT","BITOR","BITOR_AGG","BITSHIFTLEFT","BITSHIFTRIGHT","BITXOR","BITXOR_AGG","BOOLAND","BOOLAND_AGG","BOOLNOT","BOOLOR","BOOLOR_AGG","BOOLXOR","BOOLXOR_AGG","BUILD_SCOPED_FILE_URL","BUILD_STAGE_FILE_URL","CASE","CAST","CBRT","CEIL","CHARINDEX","CHECK_JSON","CHECK_XML","CHR","CHAR","COALESCE","COLLATE","COLLATION","COMPLETE_TASK_GRAPHS","COMPRESS","CONCAT","CONCAT_WS","CONDITIONAL_CHANGE_EVENT","CONDITIONAL_TRUE_EVENT","CONTAINS","CONVERT_TIMEZONE","COPY_HISTORY","CORR","COS","COSH","COT","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CUME_DIST","CURRENT_ACCOUNT","CURRENT_AVAILABLE_ROLES","CURRENT_CLIENT","CURRENT_DATABASE","CURRENT_DATE","CURRENT_IP_ADDRESS","CURRENT_REGION","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_SECONDARY_ROLES","CURRENT_SESSION","CURRENT_STATEMENT","CURRENT_TASK_GRAPHS","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TRANSACTION","CURRENT_USER","CURRENT_VERSION","CURRENT_WAREHOUSE","DATA_TRANSFER_HISTORY","DATABASE_REFRESH_HISTORY","DATABASE_REFRESH_PROGRESS","DATABASE_REFRESH_PROGRESS_BY_JOB","DATABASE_STORAGE_USAGE_HISTORY","DATE_FROM_PARTS","DATE_PART","DATE_TRUNC","DATEADD","DATEDIFF","DAYNAME","DECODE","DECOMPRESS_BINARY","DECOMPRESS_STRING","DECRYPT","DECRYPT_RAW","DEGREES","DENSE_RANK","DIV0","EDITDISTANCE","ENCRYPT","ENCRYPT_RAW","ENDSWITH","EQUAL_NULL","EXP","EXPLAIN_JSON","EXTERNAL_FUNCTIONS_HISTORY","EXTERNAL_TABLE_FILES","EXTERNAL_TABLE_FILE_REGISTRATION_HISTORY","EXTRACT","EXTRACT_SEMANTIC_CATEGORIES","FACTORIAL","FILTER","FIRST_VALUE","FLATTEN","FLOOR","GENERATE_COLUMN_DESCRIPTION","GENERATOR","GET","GET_ABSOLUTE_PATH","GET_DDL","GET_IGNORE_CASE","GET_OBJECT_REFERENCES","GET_PATH","GET_PRESIGNED_URL","GET_RELATIVE_PATH","GET_STAGE_LOCATION","GETBIT","GREATEST","GREATEST_IGNORE_NULLS","GROUPING","GROUPING_ID","HASH","HASH_AGG","HAVERSINE","HEX_DECODE_BINARY","HEX_DECODE_STRING","HEX_ENCODE","HLL","HLL_ACCUMULATE","HLL_COMBINE","HLL_ESTIMATE","HLL_EXPORT","HLL_IMPORT","HOUR","MINUTE","SECOND","IDENTIFIER","IFF","IFNULL","ILIKE","ILIKE ANY","INFER_SCHEMA","INITCAP","INSERT","INVOKER_ROLE","INVOKER_SHARE","IS_ARRAY","IS_BINARY","IS_BOOLEAN","IS_CHAR","IS_VARCHAR","IS_DATE","IS_DATE_VALUE","IS_DECIMAL","IS_DOUBLE","IS_REAL","IS_GRANTED_TO_INVOKER_ROLE","IS_INTEGER","IS_NULL_VALUE","IS_OBJECT","IS_ROLE_IN_SESSION","IS_TIME","IS_TIMESTAMP_LTZ","IS_TIMESTAMP_NTZ","IS_TIMESTAMP_TZ","JAROWINKLER_SIMILARITY","JSON_EXTRACT_PATH_TEXT","KURTOSIS","LAG","LAST_DAY","LAST_QUERY_ID","LAST_TRANSACTION","LAST_VALUE","LEAD","LEAST","LEFT","LENGTH","LEN","LIKE","LIKE ALL","LIKE ANY","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOGIN_HISTORY","LOGIN_HISTORY_BY_USER","LOWER","LPAD","LTRIM","MATERIALIZED_VIEW_REFRESH_HISTORY","MD5","MD5_HEX","MD5_BINARY","MD5_NUMBER — Obsoleted","MD5_NUMBER_LOWER64","MD5_NUMBER_UPPER64","MEDIAN","MIN","MAX","MINHASH","MINHASH_COMBINE","MOD","MODE","MONTHNAME","MONTHS_BETWEEN","NEXT_DAY","NORMAL","NTH_VALUE","NTILE","NULLIF","NULLIFZERO","NVL","NVL2","OBJECT_AGG","OBJECT_CONSTRUCT","OBJECT_CONSTRUCT_KEEP_NULL","OBJECT_DELETE","OBJECT_INSERT","OBJECT_KEYS","OBJECT_PICK","OCTET_LENGTH","PARSE_IP","PARSE_JSON","PARSE_URL","PARSE_XML","PERCENT_RANK","PERCENTILE_CONT","PERCENTILE_DISC","PI","PIPE_USAGE_HISTORY","POLICY_CONTEXT","POLICY_REFERENCES","POSITION","POW","POWER","PREVIOUS_DAY","QUERY_ACCELERATION_HISTORY","QUERY_HISTORY","QUERY_HISTORY_BY_SESSION","QUERY_HISTORY_BY_USER","QUERY_HISTORY_BY_WAREHOUSE","RADIANS","RANDOM","RANDSTR","RANK","RATIO_TO_REPORT","REGEXP","REGEXP_COUNT","REGEXP_INSTR","REGEXP_LIKE","REGEXP_REPLACE","REGEXP_SUBSTR","REGEXP_SUBSTR_ALL","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","REGR_VALX","REGR_VALY","REPEAT","REPLACE","REPLICATION_GROUP_REFRESH_HISTORY","REPLICATION_GROUP_REFRESH_PROGRESS","REPLICATION_GROUP_REFRESH_PROGRESS_BY_JOB","REPLICATION_GROUP_USAGE_HISTORY","REPLICATION_USAGE_HISTORY","REST_EVENT_HISTORY","RESULT_SCAN","REVERSE","RIGHT","RLIKE","ROUND","ROW_NUMBER","RPAD","RTRIM","RTRIMMED_LENGTH","SEARCH_OPTIMIZATION_HISTORY","SEQ1","SEQ2","SEQ4","SEQ8","SERVERLESS_TASK_HISTORY","SHA1","SHA1_HEX","SHA1_BINARY","SHA2","SHA2_HEX","SHA2_BINARY","SIGN","SIN","SINH","SKEW","SOUNDEX","SPACE","SPLIT","SPLIT_PART","SPLIT_TO_TABLE","SQRT","SQUARE","ST_AREA","ST_ASEWKB","ST_ASEWKT","ST_ASGEOJSON","ST_ASWKB","ST_ASBINARY","ST_ASWKT","ST_ASTEXT","ST_AZIMUTH","ST_CENTROID","ST_COLLECT","ST_CONTAINS","ST_COVEREDBY","ST_COVERS","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_DWITHIN","ST_ENDPOINT","ST_ENVELOPE","ST_GEOGFROMGEOHASH","ST_GEOGPOINTFROMGEOHASH","ST_GEOGRAPHYFROMWKB","ST_GEOGRAPHYFROMWKT","ST_GEOHASH","ST_GEOMETRYFROMWKB","ST_GEOMETRYFROMWKT","ST_HAUSDORFFDISTANCE","ST_INTERSECTION","ST_INTERSECTS","ST_LENGTH","ST_MAKEGEOMPOINT","ST_GEOM_POINT","ST_MAKELINE","ST_MAKEPOINT","ST_POINT","ST_MAKEPOLYGON","ST_POLYGON","ST_NPOINTS","ST_NUMPOINTS","ST_PERIMETER","ST_POINTN","ST_SETSRID","ST_SIMPLIFY","ST_SRID","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","STAGE_DIRECTORY_FILE_REGISTRATION_HISTORY","STAGE_STORAGE_USAGE_HISTORY","STARTSWITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRIP_NULL_VALUE","STRTOK","STRTOK_SPLIT_TO_TABLE","STRTOK_TO_ARRAY","SUBSTR","SUBSTRING","SUM","SYSDATE","SYSTEM$ABORT_SESSION","SYSTEM$ABORT_TRANSACTION","SYSTEM$AUTHORIZE_PRIVATELINK","SYSTEM$AUTHORIZE_STAGE_PRIVATELINK_ACCESS","SYSTEM$BEHAVIOR_CHANGE_BUNDLE_STATUS","SYSTEM$CANCEL_ALL_QUERIES","SYSTEM$CANCEL_QUERY","SYSTEM$CLUSTERING_DEPTH","SYSTEM$CLUSTERING_INFORMATION","SYSTEM$CLUSTERING_RATIO ","SYSTEM$CURRENT_USER_TASK_NAME","SYSTEM$DATABASE_REFRESH_HISTORY ","SYSTEM$DATABASE_REFRESH_PROGRESS","SYSTEM$DATABASE_REFRESH_PROGRESS_BY_JOB ","SYSTEM$DISABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$DISABLE_DATABASE_REPLICATION","SYSTEM$ENABLE_BEHAVIOR_CHANGE_BUNDLE","SYSTEM$ESTIMATE_QUERY_ACCELERATION","SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS","SYSTEM$EXPLAIN_JSON_TO_TEXT","SYSTEM$EXPLAIN_PLAN_JSON","SYSTEM$EXTERNAL_TABLE_PIPE_STATUS","SYSTEM$GENERATE_SAML_CSR","SYSTEM$GENERATE_SCIM_ACCESS_TOKEN","SYSTEM$GET_AWS_SNS_IAM_POLICY","SYSTEM$GET_PREDECESSOR_RETURN_VALUE","SYSTEM$GET_PRIVATELINK","SYSTEM$GET_PRIVATELINK_AUTHORIZED_ENDPOINTS","SYSTEM$GET_PRIVATELINK_CONFIG","SYSTEM$GET_SNOWFLAKE_PLATFORM_INFO","SYSTEM$GET_TAG","SYSTEM$GET_TAG_ALLOWED_VALUES","SYSTEM$GET_TAG_ON_CURRENT_COLUMN","SYSTEM$GET_TAG_ON_CURRENT_TABLE","SYSTEM$GLOBAL_ACCOUNT_SET_PARAMETER","SYSTEM$LAST_CHANGE_COMMIT_TIME","SYSTEM$LINK_ACCOUNT_OBJECTS_BY_NAME","SYSTEM$MIGRATE_SAML_IDP_REGISTRATION","SYSTEM$PIPE_FORCE_RESUME","SYSTEM$PIPE_STATUS","SYSTEM$REVOKE_PRIVATELINK","SYSTEM$REVOKE_STAGE_PRIVATELINK_ACCESS","SYSTEM$SET_RETURN_VALUE","SYSTEM$SHOW_OAUTH_CLIENT_SECRETS","SYSTEM$STREAM_GET_TABLE_TIMESTAMP","SYSTEM$STREAM_HAS_DATA","SYSTEM$TASK_DEPENDENTS_ENABLE","SYSTEM$TYPEOF","SYSTEM$USER_TASK_CANCEL_ONGOING_EXECUTIONS","SYSTEM$VERIFY_EXTERNAL_OAUTH_TOKEN","SYSTEM$WAIT","SYSTEM$WHITELIST","SYSTEM$WHITELIST_PRIVATELINK","TAG_REFERENCES","TAG_REFERENCES_ALL_COLUMNS","TAG_REFERENCES_WITH_LINEAGE","TAN","TANH","TASK_DEPENDENTS","TASK_HISTORY","TIME_FROM_PARTS","TIME_SLICE","TIMEADD","TIMEDIFF","TIMESTAMP_FROM_PARTS","TIMESTAMPADD","TIMESTAMPDIFF","TO_ARRAY","TO_BINARY","TO_BOOLEAN","TO_CHAR","TO_VARCHAR","TO_DATE","DATE","TO_DECIMAL","TO_NUMBER","TO_NUMERIC","TO_DOUBLE","TO_GEOGRAPHY","TO_GEOMETRY","TO_JSON","TO_OBJECT","TO_TIME","TIME","TO_TIMESTAMP","TO_TIMESTAMP_LTZ","TO_TIMESTAMP_NTZ","TO_TIMESTAMP_TZ","TO_VARIANT","TO_XML","TRANSLATE","TRIM","TRUNCATE","TRUNC","TRUNC","TRY_BASE64_DECODE_BINARY","TRY_BASE64_DECODE_STRING","TRY_CAST","TRY_HEX_DECODE_BINARY","TRY_HEX_DECODE_STRING","TRY_PARSE_JSON","TRY_TO_BINARY","TRY_TO_BOOLEAN","TRY_TO_DATE","TRY_TO_DECIMAL","TRY_TO_NUMBER","TRY_TO_NUMERIC","TRY_TO_DOUBLE","TRY_TO_GEOGRAPHY","TRY_TO_GEOMETRY","TRY_TO_TIME","TRY_TO_TIMESTAMP","TRY_TO_TIMESTAMP_LTZ","TRY_TO_TIMESTAMP_NTZ","TRY_TO_TIMESTAMP_TZ","TYPEOF","UNICODE","UNIFORM","UPPER","UUID_STRING","VALIDATE","VALIDATE_PIPE_LOAD","VAR_POP","VAR_SAMP","VARIANCE","VARIANCE_SAMP","VARIANCE_POP","WAREHOUSE_LOAD_HISTORY","WAREHOUSE_METERING_HISTORY","WIDTH_BUCKET","XMLGET","YEAR","YEAROFWEEK","YEAROFWEEKISO","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFWEEKISO","DAYOFYEAR","WEEK","WEEK","WEEKOFYEAR","WEEKISO","MONTH","QUARTER","ZEROIFNULL","ZIPF"],stringTypes:["$$","''-qq-bs"],identTypes:['""-qq'],variableTypes:[{regex:"[$][1-9]\\d*"},{regex:"[$][_a-zA-Z][_a-zA-Z0-9$]*"}],extraParens:["[]"],identChars:{rest:"$"},lineCommentTypes:["--","//"],operators:["%","::","||","=>",":=","->"],propertyAccessOperators:[":"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:[...TY,...Tm],tabularOnelineClauses:Tm}},TW=E=>E[E.length-1],Tg=E=>E.sort((E,T)=>T.length-E.length||E.localeCompare(T)),TX=E=>E.replace(/\s+/gu," "),Tv=E=>/\n/.test(E),Tx=E=>E.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),TK=/\s+/uy,Tw=E=>RegExp(`(?:${E})`,"uy"),TJ=E=>E.split("").map(E=>/ /gu.test(E)?"\\s+":`[${E.toUpperCase()}${E.toLowerCase()}]`).join(""),T$=(E,T=[])=>{let e=+("open"!==E);return Tw(["()",...T].map(E=>E[e]).map(Tx).join("|"))},TQ=E=>Tw(`${Tg(E).map(Tx).join("|")}`),Tk=(E,T={})=>{if(0===E.length)return/^\b$/u;let e=(({rest:E,dashes:T})=>E||T?`(?![${E||""}${T?"-":""}])`:"")(T),R=Tg(E).map(Tx).join("|").replace(/ /gu,"\\s+");return RegExp(`(?:${R})${e}\\b`,"iuy")},TZ=(E,T)=>{if(!E.length)return;let e=E.map(Tx).join("|");return Tw(`(?:${e})(?:${T})`)},Tj={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":(()=>{let E={"<":">","[":"]","(":")","{":"}"},T=Object.entries(E).map(([E,T])=>"{left}(?:(?!{right}').)*?{right}".replace(/{left}/g,Tx(E)).replace(/{right}/g,Tx(T))),e=Tx(Object.keys(E).join("")),R=String.raw`(?<tag>[^\s${e}])(?:(?!\k<tag>').)*?\k<tag>`;return`[Qq]'(?:${R}|${T.join("|")})'`})()},Tq=E=>"string"==typeof E?Tj[E]:"regex"in E?E.regex:(({prefixes:E,requirePrefix:T})=>`(?:${E.map(TJ).join("|")}${T?"":"|"})`)(E)+Tj[E.quote],Tz=E=>E.map(Tq).join("|"),T0=E=>Tw(Tz(E)),T1=({first:E,rest:T,dashes:e,allowFirstCharNumber:R}={})=>{let A="\\p{Alphabetic}\\p{Mark}_",t="\\p{Decimal_Number}",S=Tx(null!=E?E:""),O=Tx(null!=T?T:""),I=R?`[${A}${t}${S}][${A}${t}${O}]*`:`[${A}${S}][${A}${t}${O}]*`;return e?(E=>E+"(?:-"+E+")*")(I):I};function T2(E,T){let e=E.slice(0,T).split(/\n/);return{line:e.length,col:e[e.length-1].length+1}}class T6{constructor(E,T){this.rules=E,this.dialectName=T,this.input="",this.index=0}tokenize(E){let T;this.input=E,this.index=0;let e=[];for(;this.index<this.input.length;){let E=this.getWhitespace();if(this.index<this.input.length){if(!(T=this.getNextToken()))throw this.createParseError();e.push(Object.assign(Object.assign({},T),{precedingWhitespace:E}))}}return e}createParseError(){let E=this.input.slice(this.index,this.index+10),{line:T,col:e}=T2(this.input,this.index);return Error(`Parse error: Unexpected "${E}" at line ${T} column ${e}.
${this.dialectInfo()}`)}dialectInfo(){return"sql"===this.dialectName?`This likely happens because you're using the default "sql" dialect.
If possible, please select a more specific dialect (like sqlite, postgresql, etc).`:`SQL dialect used: "${this.dialectName}".`}getWhitespace(){TK.lastIndex=this.index;let E=TK.exec(this.input);if(E)return this.index+=E[0].length,E[0]}getNextToken(){for(let E of this.rules){let T=this.match(E);if(T)return T}}match(E){E.regex.lastIndex=this.index;let T=E.regex.exec(this.input);if(T){let e=T[0],R={type:E.type,raw:e,text:E.text?E.text(e):e,start:this.index};return E.key&&(R.key=E.key(e)),this.index+=e.length,R}}}let T4=/\/\*/uy,T5=/[\s\S]/uy,T8=/\*\//uy;class T3{constructor(){this.lastIndex=0}exec(E){let T,e="",R=0;if(!(T=this.matchSection(T4,E)))return null;for(e+=T,R++;R>0;)if(T=this.matchSection(T4,E))e+=T,R++;else if(T=this.matchSection(T8,E))e+=T,R--;else{if(!(T=this.matchSection(T5,E)))return null;e+=T}return[e]}matchSection(E,T){E.lastIndex=this.lastIndex;let e=E.exec(T);return e&&(this.lastIndex+=e[0].length),e?e[0]:null}}class T9{constructor(E,T){this.cfg=E,this.dialectName=T,this.rulesBeforeParams=this.buildRulesBeforeParams(E),this.rulesAfterParams=this.buildRulesAfterParams(E)}tokenize(E,T){let e=new T6([...this.rulesBeforeParams,...this.buildParamRules(this.cfg,T),...this.rulesAfterParams],this.dialectName).tokenize(E);return this.cfg.postProcess?this.cfg.postProcess(e):e}buildRulesBeforeParams(E){var T,e,A;let t;return this.validRules([{type:R.BLOCK_COMMENT,regex:/(\/\* *sql-formatter-disable *\*\/[\s\S]*?(?:\/\* *sql-formatter-enable *\*\/|$))/uy},{type:R.BLOCK_COMMENT,regex:E.nestedBlockComments?new T3:/(\/\*[^]*?\*\/)/uy},{type:R.LINE_COMMENT,regex:(t=null!=(T=E.lineCommentTypes)?T:["--"],RegExp(`(?:${t.map(Tx).join("|")}).*?(?=\r
|\r|
|$)`,"uy"))},{type:R.QUOTED_IDENTIFIER,regex:T0(E.identTypes)},{type:R.NUMBER,regex:E.underscoresInNumbers?/(?:0x[0-9a-fA-F_]+|0b[01_]+|(?:-\s*)?(?:[0-9_]*\.[0-9_]+|[0-9_]+(?:\.[0-9_]*)?)(?:[eE][-+]?[0-9_]+(?:\.[0-9_]+)?)?)(?![\w\p{Alphabetic}])/uy:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?(?:[0-9]*\.[0-9]+|[0-9]+(?:\.[0-9]*)?)(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?![\w\p{Alphabetic}])/uy},{type:R.RESERVED_KEYWORD_PHRASE,regex:Tk(null!=(e=E.reservedKeywordPhrases)?e:[],E.identChars),text:T7},{type:R.RESERVED_DATA_TYPE_PHRASE,regex:Tk(null!=(A=E.reservedDataTypePhrases)?A:[],E.identChars),text:T7},{type:R.CASE,regex:/CASE\b/iuy,text:T7},{type:R.END,regex:/END\b/iuy,text:T7},{type:R.BETWEEN,regex:/BETWEEN\b/iuy,text:T7},{type:R.LIMIT,regex:E.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:T7},{type:R.RESERVED_CLAUSE,regex:Tk(E.reservedClauses,E.identChars),text:T7},{type:R.RESERVED_SELECT,regex:Tk(E.reservedSelect,E.identChars),text:T7},{type:R.RESERVED_SET_OPERATION,regex:Tk(E.reservedSetOperations,E.identChars),text:T7},{type:R.WHEN,regex:/WHEN\b/iuy,text:T7},{type:R.ELSE,regex:/ELSE\b/iuy,text:T7},{type:R.THEN,regex:/THEN\b/iuy,text:T7},{type:R.RESERVED_JOIN,regex:Tk(E.reservedJoins,E.identChars),text:T7},{type:R.AND,regex:/AND\b/iuy,text:T7},{type:R.OR,regex:/OR\b/iuy,text:T7},{type:R.XOR,regex:E.supportsXor?/XOR\b/iuy:void 0,text:T7},...E.operatorKeyword?[{type:R.OPERATOR,regex:/OPERATOR *\([^)]+\)/iuy}]:[],{type:R.RESERVED_FUNCTION_NAME,regex:Tk(E.reservedFunctionNames,E.identChars),text:T7},{type:R.RESERVED_DATA_TYPE,regex:Tk(E.reservedDataTypes,E.identChars),text:T7},{type:R.RESERVED_KEYWORD,regex:Tk(E.reservedKeywords,E.identChars),text:T7}])}buildRulesAfterParams(E){var T,e;return this.validRules([{type:R.VARIABLE,regex:E.variableTypes?Tw(E.variableTypes.map(E=>"regex"in E?E.regex:Tq(E)).join("|")):void 0},{type:R.STRING,regex:T0(E.stringTypes)},{type:R.IDENTIFIER,regex:((E={})=>Tw(T1(E)))(E.identChars)},{type:R.DELIMITER,regex:/[;]/uy},{type:R.COMMA,regex:/[,]/y},{type:R.OPEN_PAREN,regex:T$("open",E.extraParens)},{type:R.CLOSE_PAREN,regex:T$("close",E.extraParens)},{type:R.OPERATOR,regex:TQ(["+","-","/",">","<","=","<>","<=",">=","!=",...null!=(T=E.operators)?T:[]])},{type:R.ASTERISK,regex:/[*]/uy},{type:R.PROPERTY_ACCESS_OPERATOR,regex:TQ([".",...null!=(e=E.propertyAccessOperators)?e:[]])}])}buildParamRules(E,T){var e,A,t,S,O;let I={named:(null==T?void 0:T.named)||(null==(e=E.paramTypes)?void 0:e.named)||[],quoted:(null==T?void 0:T.quoted)||(null==(A=E.paramTypes)?void 0:A.quoted)||[],numbered:(null==T?void 0:T.numbered)||(null==(t=E.paramTypes)?void 0:t.numbered)||[],positional:"boolean"==typeof(null==T?void 0:T.positional)?T.positional:null==(S=E.paramTypes)?void 0:S.positional,custom:(null==T?void 0:T.custom)||(null==(O=E.paramTypes)?void 0:O.custom)||[]};return this.validRules([{type:R.NAMED_PARAMETER,regex:TZ(I.named,T1(E.paramChars||E.identChars)),key:E=>E.slice(1)},{type:R.QUOTED_PARAMETER,regex:TZ(I.quoted,Tz(E.identTypes)),key:E=>(({tokenKey:E,quoteChar:T})=>E.replace(RegExp(Tx("\\"+T),"gu"),T))({tokenKey:E.slice(2,-1),quoteChar:E.slice(-1)})},{type:R.NUMBERED_PARAMETER,regex:TZ(I.numbered,"[0-9]+"),key:E=>E.slice(1)},{type:R.POSITIONAL_PARAMETER,regex:I.positional?/[?]/y:void 0},...I.custom.map(E=>{var T;return{type:R.CUSTOM_PARAMETER,regex:Tw(E.regex),key:null!=(T=E.key)?T:E=>E}})])}validRules(E){return E.filter(E=>!!E.regex)}}let T7=E=>TX(E.toUpperCase()),eE=new Map,eT=E=>{var T;return{alwaysDenseOperators:E.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(E.onelineClauses.map(E=>[E,!0])),tabularOnelineClauses:Object.fromEntries((null!=(T=E.tabularOnelineClauses)?T:E.onelineClauses).map(E=>[E,!0]))}};function ee(E){return"tabularLeft"===E.indentStyle||"tabularRight"===E.indentStyle}class eR{constructor(E){this.params=E,this.index=0}get({key:E,text:T}){return this.params?E?this.params[E]:this.params[this.index++]:T}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(E){this.index=E}}var eA=e(25898);let et=(E,T,e)=>{if(c(E.type)){let A=er(e,T);if(A&&A.type===R.PROPERTY_ACCESS_OPERATOR)return Object.assign(Object.assign({},E),{type:R.IDENTIFIER,text:E.raw});let t=en(e,T);if(t&&t.type===R.PROPERTY_ACCESS_OPERATOR)return Object.assign(Object.assign({},E),{type:R.IDENTIFIER,text:E.raw})}return E},eS=(E,T,e)=>{if(E.type===R.RESERVED_FUNCTION_NAME){let A=en(e,T);if(!A||!es(A))return Object.assign(Object.assign({},E),{type:R.IDENTIFIER,text:E.raw})}return E},eO=(E,T,e)=>{if(E.type===R.RESERVED_DATA_TYPE){let A=en(e,T);if(A&&es(A))return Object.assign(Object.assign({},E),{type:R.RESERVED_PARAMETERIZED_DATA_TYPE})}return E},eI=(E,T,e)=>{if(E.type===R.IDENTIFIER){let A=en(e,T);if(A&&eo(A))return Object.assign(Object.assign({},E),{type:R.ARRAY_IDENTIFIER})}return E},eN=(E,T,e)=>{if(E.type===R.RESERVED_DATA_TYPE){let A=en(e,T);if(A&&eo(A))return Object.assign(Object.assign({},E),{type:R.ARRAY_KEYWORD})}return E},er=(E,T)=>en(E,T,-1),en=(E,T,e=1)=>{let R=1;for(;E[T+R*e]&&eC(E[T+R*e]);)R++;return E[T+R*e]},es=E=>E.type===R.OPEN_PAREN&&"("===E.text,eo=E=>E.type===R.OPEN_PAREN&&"["===E.text,eC=E=>E.type===R.BLOCK_COMMENT||E.type===R.LINE_COMMENT;class eL{constructor(E){this.tokenize=E,this.index=0,this.tokens=[],this.input=""}reset(E,T){this.input=E,this.index=0,this.tokens=this.tokenize(E)}next(){return this.tokens[this.index++]}save(){}formatError(E){let{line:T,col:e}=T2(this.input,E.start);return`Parse error at token: ${E.text} at line ${T} column ${e}`}has(E){return E in R}}function ea(E){return E[0]}!function(E){E.statement="statement",E.clause="clause",E.set_operation="set_operation",E.function_call="function_call",E.parameterized_data_type="parameterized_data_type",E.array_subscript="array_subscript",E.property_access="property_access",E.parenthesis="parenthesis",E.between_predicate="between_predicate",E.case_expression="case_expression",E.case_when="case_when",E.case_else="case_else",E.limit_clause="limit_clause",E.all_columns_asterisk="all_columns_asterisk",E.literal="literal",E.identifier="identifier",E.keyword="keyword",E.data_type="data_type",E.parameter="parameter",E.operator="operator",E.comma="comma",E.line_comment="line_comment",E.block_comment="block_comment",E.disable_comment="disable_comment"}(A=A||(A={}));let e_=new eL(E=>[]),ei=([[E]])=>E,eP=E=>({type:A.keyword,tokenType:E.type,text:E.text,raw:E.raw}),eD=E=>({type:A.data_type,text:E.text,raw:E.raw}),el=(E,{leading:T,trailing:e})=>((null==T?void 0:T.length)&&(E=Object.assign(Object.assign({},E),{leadingComments:T})),(null==e?void 0:e.length)&&(E=Object.assign(Object.assign({},E),{trailingComments:e})),E),ec={Lexer:e_,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:E=>E[0].concat([E[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([E])=>{let T=E[E.length-1];return T&&!T.hasSemicolon?T.children.length>0?E:E.slice(0,-1):E}},{name:"statement$subexpression$1",symbols:[e_.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[e_.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([E,[T]])=>({type:A.statement,children:E,hasSemicolon:T.type===R.DELIMITER})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:E=>E[0].concat([E[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([E,T])=>[...E,...T]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:ei},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[e_.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:ea},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[e_.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([E,T,e,R])=>{if(!R)return{type:A.limit_clause,limitKw:el(eP(E),{trailing:T}),count:e};{let[t,S]=R;return{type:A.limit_clause,limitKw:el(eP(E),{trailing:T}),offset:e,count:S}}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[e_.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([E,[T,e]])=>({type:A.clause,nameKw:eP(E),children:[T,...e]})},{name:"select_clause",symbols:[e_.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([E])=>({type:A.clause,nameKw:eP(E),children:[]})},{name:"all_columns_asterisk",symbols:[e_.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:A.all_columns_asterisk})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"other_clause",symbols:[e_.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([E,T])=>({type:A.clause,nameKw:eP(E),children:T})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"set_operation",symbols:[e_.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([E,T])=>({type:A.set_operation,nameKw:eP(E),children:T})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:E=>E[0].concat([E[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:ea},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:E=>E[0].concat([E[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([E,T])=>[E,...T]},{name:"andless_expression_chain$ebnf$1",symbols:[]},{name:"andless_expression_chain$ebnf$1",symbols:["andless_expression_chain$ebnf$1","_andless_expression_with_comments"],postprocess:E=>E[0].concat([E[1]])},{name:"andless_expression_chain",symbols:["andless_expression","andless_expression_chain$ebnf$1"],postprocess:([E,T])=>[E,...T]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([E,T])=>el(E,{trailing:T})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([E,T])=>el(T,{leading:E})},{name:"_andless_expression_with_comments",symbols:["_","andless_expression"],postprocess:([E,T])=>el(T,{leading:E})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:ei},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["logic_operator"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:ei},{name:"expression$subexpression$1",symbols:["andless_expression"]},{name:"expression$subexpression$1",symbols:["logic_operator"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:ei},{name:"andless_expression$subexpression$1",symbols:["asteriskless_andless_expression"]},{name:"andless_expression$subexpression$1",symbols:["asterisk"]},{name:"andless_expression",symbols:["andless_expression$subexpression$1"],postprocess:ei},{name:"asteriskless_andless_expression$subexpression$1",symbols:["atomic_expression"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_andless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_andless_expression",symbols:["asteriskless_andless_expression$subexpression$1"],postprocess:ei},{name:"atomic_expression$subexpression$1",symbols:["array_subscript"]},{name:"atomic_expression$subexpression$1",symbols:["function_call"]},{name:"atomic_expression$subexpression$1",symbols:["property_access"]},{name:"atomic_expression$subexpression$1",symbols:["parenthesis"]},{name:"atomic_expression$subexpression$1",symbols:["curly_braces"]},{name:"atomic_expression$subexpression$1",symbols:["square_brackets"]},{name:"atomic_expression$subexpression$1",symbols:["operator"]},{name:"atomic_expression$subexpression$1",symbols:["identifier"]},{name:"atomic_expression$subexpression$1",symbols:["parameter"]},{name:"atomic_expression$subexpression$1",symbols:["literal"]},{name:"atomic_expression$subexpression$1",symbols:["data_type"]},{name:"atomic_expression$subexpression$1",symbols:["keyword"]},{name:"atomic_expression",symbols:["atomic_expression$subexpression$1"],postprocess:ei},{name:"array_subscript",symbols:[e_.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([E,T,e])=>({type:A.array_subscript,array:el({type:A.identifier,quoted:!1,text:E.text},{trailing:T}),parenthesis:e})},{name:"array_subscript",symbols:[e_.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([E,T,e])=>({type:A.array_subscript,array:el(eP(E),{trailing:T}),parenthesis:e})},{name:"function_call",symbols:[e_.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([E,T,e])=>({type:A.function_call,nameKw:el(eP(E),{trailing:T}),parenthesis:e})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([E,T,e])=>({type:A.parenthesis,children:T,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([E,T,e])=>({type:A.parenthesis,children:T,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:E=>E[0].concat([E[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([E,T,e])=>({type:A.parenthesis,children:T,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access$subexpression$1",symbols:["parameter"]},{name:"property_access",symbols:["atomic_expression","_",e_.has("PROPERTY_ACCESS_OPERATOR")?{type:"PROPERTY_ACCESS_OPERATOR"}:PROPERTY_ACCESS_OPERATOR,"_","property_access$subexpression$1"],postprocess:([E,T,e,R,[t]])=>({type:A.property_access,object:el(E,{trailing:T}),operator:e.text,property:el(t,{leading:R})})},{name:"between_predicate",symbols:[e_.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","andless_expression_chain","_",e_.has("AND")?{type:"AND"}:AND,"_","andless_expression"],postprocess:([E,T,e,R,t,S,O])=>({type:A.between_predicate,betweenKw:eP(E),expr1:((E,{leading:T,trailing:e})=>{if(null==T?void 0:T.length){let[e,...R]=E;E=[el(e,{leading:T}),...R]}return(null==e?void 0:e.length)&&(E=[...E.slice(0,-1),el(E[E.length-1],{trailing:e})]),E})(e,{leading:T,trailing:R}),andKw:eP(t),expr2:[el(O,{leading:S})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:ea},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:E=>E[0].concat([E[1]])},{name:"case_expression",symbols:[e_.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",e_.has("END")?{type:"END"}:END],postprocess:([E,T,e,R,t])=>({type:A.case_expression,caseKw:el(eP(E),{trailing:T}),endKw:eP(t),expr:e||[],clauses:R})},{name:"case_clause",symbols:[e_.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",e_.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([E,T,e,R,t,S])=>({type:A.case_when,whenKw:el(eP(E),{trailing:T}),thenKw:el(eP(R),{trailing:t}),condition:e,result:S})},{name:"case_clause",symbols:[e_.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([E,T,e])=>({type:A.case_else,elseKw:el(eP(E),{trailing:T}),result:e})},{name:"comma$subexpression$1",symbols:[e_.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[E]])=>({type:A.comma})},{name:"asterisk$subexpression$1",symbols:[e_.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[E]])=>({type:A.operator,text:E.text})},{name:"operator$subexpression$1",symbols:[e_.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[E]])=>({type:A.operator,text:E.text})},{name:"identifier$subexpression$1",symbols:[e_.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[e_.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[e_.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[E]])=>({type:A.identifier,quoted:"IDENTIFIER"!==E.type,text:E.text})},{name:"parameter$subexpression$1",symbols:[e_.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[e_.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[e_.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[e_.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter$subexpression$1",symbols:[e_.has("CUSTOM_PARAMETER")?{type:"CUSTOM_PARAMETER"}:CUSTOM_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[E]])=>({type:A.parameter,key:E.key,text:E.text})},{name:"literal$subexpression$1",symbols:[e_.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[e_.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[E]])=>({type:A.literal,text:E.text})},{name:"keyword$subexpression$1",symbols:[e_.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[e_.has("RESERVED_KEYWORD_PHRASE")?{type:"RESERVED_KEYWORD_PHRASE"}:RESERVED_KEYWORD_PHRASE]},{name:"keyword$subexpression$1",symbols:[e_.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[E]])=>eP(E)},{name:"data_type$subexpression$1",symbols:[e_.has("RESERVED_DATA_TYPE")?{type:"RESERVED_DATA_TYPE"}:RESERVED_DATA_TYPE]},{name:"data_type$subexpression$1",symbols:[e_.has("RESERVED_DATA_TYPE_PHRASE")?{type:"RESERVED_DATA_TYPE_PHRASE"}:RESERVED_DATA_TYPE_PHRASE]},{name:"data_type",symbols:["data_type$subexpression$1"],postprocess:([[E]])=>eD(E)},{name:"data_type",symbols:[e_.has("RESERVED_PARAMETERIZED_DATA_TYPE")?{type:"RESERVED_PARAMETERIZED_DATA_TYPE"}:RESERVED_PARAMETERIZED_DATA_TYPE,"_","parenthesis"],postprocess:([E,T,e])=>({type:A.parameterized_data_type,dataType:el(eD(E),{trailing:T}),parenthesis:e})},{name:"logic_operator$subexpression$1",symbols:[e_.has("AND")?{type:"AND"}:AND]},{name:"logic_operator$subexpression$1",symbols:[e_.has("OR")?{type:"OR"}:OR]},{name:"logic_operator$subexpression$1",symbols:[e_.has("XOR")?{type:"XOR"}:XOR]},{name:"logic_operator",symbols:["logic_operator$subexpression$1"],postprocess:([[E]])=>eP(E)},{name:"other_keyword$subexpression$1",symbols:[e_.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[e_.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[e_.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[e_.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[E]])=>eP(E)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:E=>E[0].concat([E[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([E])=>E},{name:"comment",symbols:[e_.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([E])=>({type:A.line_comment,text:E.text,precedingWhitespace:E.precedingWhitespace})},{name:"comment",symbols:[e_.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([E])=>({type:A.block_comment,text:E.text,precedingWhitespace:E.precedingWhitespace})},{name:"comment",symbols:[e_.has("DISABLE_COMMENT")?{type:"DISABLE_COMMENT"}:DISABLE_COMMENT],postprocess:([E])=>({type:A.disable_comment,text:E.text,precedingWhitespace:E.precedingWhitespace})}],ParserStart:"main"},{Parser:eU,Grammar:eM}=eA;!function(E){E[E.SPACE=0]="SPACE",E[E.NO_SPACE=1]="NO_SPACE",E[E.NO_NEWLINE=2]="NO_NEWLINE",E[E.NEWLINE=3]="NEWLINE",E[E.MANDATORY_NEWLINE=4]="MANDATORY_NEWLINE",E[E.INDENT=5]="INDENT",E[E.SINGLE_INDENT=6]="SINGLE_INDENT"}(t=t||(t={}));class eu{constructor(E){this.indentation=E,this.items=[]}add(...E){for(let T of E)switch(T){case t.SPACE:this.items.push(t.SPACE);break;case t.NO_SPACE:this.trimHorizontalWhitespace();break;case t.NO_NEWLINE:this.trimWhitespace();break;case t.NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(t.NEWLINE);break;case t.MANDATORY_NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(t.MANDATORY_NEWLINE);break;case t.INDENT:this.addIndentation();break;case t.SINGLE_INDENT:this.items.push(t.SINGLE_INDENT);break;default:this.items.push(T)}}trimHorizontalWhitespace(){for(;ep(TW(this.items));)this.items.pop()}trimWhitespace(){for(;eG(TW(this.items));)this.items.pop()}addNewline(E){if(this.items.length>0)switch(TW(this.items)){case t.NEWLINE:this.items.pop(),this.items.push(E);break;case t.MANDATORY_NEWLINE:break;default:this.items.push(E)}}addIndentation(){for(let E=0;E<this.indentation.getLevel();E++)this.items.push(t.SINGLE_INDENT)}toString(){return this.items.map(E=>this.itemToString(E)).join("")}getLayoutItems(){return this.items}itemToString(E){switch(E){case t.SPACE:return" ";case t.NEWLINE:case t.MANDATORY_NEWLINE:return"\n";case t.SINGLE_INDENT:return this.indentation.getSingleIndent();default:return E}}}let ep=E=>E===t.SPACE||E===t.SINGLE_INDENT,eG=E=>E===t.SPACE||E===t.SINGLE_INDENT||E===t.NEWLINE;function ed(E,T){if("standard"===T)return E;let e=[];return E.length>=10&&E.includes(" ")&&([E,...e]=E.split(" ")),(E="tabularLeft"===T?E.padEnd(9," "):E.padStart(9," "))+["",...e].join(" ")}function ef(E){return E===R.AND||E===R.OR||E===R.XOR||E===R.RESERVED_CLAUSE||E===R.RESERVED_SELECT||E===R.RESERVED_SET_OPERATION||E===R.RESERVED_JOIN||E===R.LIMIT}let eB="top-level";class eH{constructor(E){this.indent=E,this.indentTypes=[]}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(eB)}increaseBlockLevel(){this.indentTypes.push("block-level")}decreaseTopLevel(){this.indentTypes.length>0&&TW(this.indentTypes)===eB&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0&&this.indentTypes.pop()===eB;);}}class eh extends eu{constructor(E){super(new eH("")),this.expressionWidth=E,this.length=0,this.trailingSpace=!1}add(...E){if(E.forEach(E=>this.addToLength(E)),this.length>this.expressionWidth)throw new eF;super.add(...E)}addToLength(E){if("string"==typeof E)this.length+=E.length,this.trailingSpace=!1;else if(E===t.MANDATORY_NEWLINE||E===t.NEWLINE)throw new eF;else E===t.INDENT||E===t.SINGLE_INDENT||E===t.SPACE?this.trailingSpace||(this.length++,this.trailingSpace=!0):(E===t.NO_NEWLINE||E===t.NO_SPACE)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}class eF extends Error{}class eY{constructor({cfg:E,dialectCfg:T,params:e,layout:R,inline:A=!1}){this.inline=!1,this.nodes=[],this.index=-1,this.cfg=E,this.dialectCfg=T,this.inline=A,this.params=e,this.layout=R}format(E){for(this.nodes=E,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(E){this.formatComments(E.leadingComments),this.formatNodeWithoutComments(E),this.formatComments(E.trailingComments)}formatNodeWithoutComments(E){switch(E.type){case A.function_call:return this.formatFunctionCall(E);case A.parameterized_data_type:return this.formatParameterizedDataType(E);case A.array_subscript:return this.formatArraySubscript(E);case A.property_access:return this.formatPropertyAccess(E);case A.parenthesis:return this.formatParenthesis(E);case A.between_predicate:return this.formatBetweenPredicate(E);case A.case_expression:return this.formatCaseExpression(E);case A.case_when:return this.formatCaseWhen(E);case A.case_else:return this.formatCaseElse(E);case A.clause:return this.formatClause(E);case A.set_operation:return this.formatSetOperation(E);case A.limit_clause:return this.formatLimitClause(E);case A.all_columns_asterisk:return this.formatAllColumnsAsterisk(E);case A.literal:return this.formatLiteral(E);case A.identifier:return this.formatIdentifier(E);case A.parameter:return this.formatParameter(E);case A.operator:return this.formatOperator(E);case A.comma:return this.formatComma(E);case A.line_comment:return this.formatLineComment(E);case A.block_comment:case A.disable_comment:return this.formatBlockComment(E);case A.data_type:return this.formatDataType(E);case A.keyword:return this.formatKeywordNode(E)}}formatFunctionCall(E){this.withComments(E.nameKw,()=>{this.layout.add(this.showFunctionKw(E.nameKw))}),this.formatNode(E.parenthesis)}formatParameterizedDataType(E){this.withComments(E.dataType,()=>{this.layout.add(this.showDataType(E.dataType))}),this.formatNode(E.parenthesis)}formatArraySubscript(E){let T;switch(E.array.type){case A.data_type:T=this.showDataType(E.array);break;case A.keyword:T=this.showKw(E.array);break;default:T=this.showIdentifier(E.array)}this.withComments(E.array,()=>{this.layout.add(T)}),this.formatNode(E.parenthesis)}formatPropertyAccess(E){this.formatNode(E.object),this.layout.add(t.NO_SPACE,E.operator),this.formatNode(E.property)}formatParenthesis(E){let T=this.formatInlineExpression(E.children);T?(this.layout.add(E.openParen),this.layout.add(...T.getLayoutItems()),this.layout.add(t.NO_SPACE,E.closeParen,t.SPACE)):(this.layout.add(E.openParen,t.NEWLINE),ee(this.cfg)?(this.layout.add(t.INDENT),this.layout=this.formatSubExpression(E.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(t.INDENT),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(t.NEWLINE,t.INDENT,E.closeParen,t.SPACE))}formatBetweenPredicate(E){this.layout.add(this.showKw(E.betweenKw),t.SPACE),this.layout=this.formatSubExpression(E.expr1),this.layout.add(t.NO_SPACE,t.SPACE,this.showNonTabularKw(E.andKw),t.SPACE),this.layout=this.formatSubExpression(E.expr2),this.layout.add(t.SPACE)}formatCaseExpression(E){this.formatNode(E.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(E.expr),this.layout=this.formatSubExpression(E.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(t.NEWLINE,t.INDENT),this.formatNode(E.endKw)}formatCaseWhen(E){this.layout.add(t.NEWLINE,t.INDENT),this.formatNode(E.whenKw),this.layout=this.formatSubExpression(E.condition),this.formatNode(E.thenKw),this.layout=this.formatSubExpression(E.result)}formatCaseElse(E){this.layout.add(t.NEWLINE,t.INDENT),this.formatNode(E.elseKw),this.layout=this.formatSubExpression(E.result)}formatClause(E){this.isOnelineClause(E)?this.formatClauseInOnelineStyle(E):ee(this.cfg)?this.formatClauseInTabularStyle(E):this.formatClauseInIndentedStyle(E)}isOnelineClause(E){return ee(this.cfg)?this.dialectCfg.tabularOnelineClauses[E.nameKw.text]:this.dialectCfg.onelineClauses[E.nameKw.text]}formatClauseInIndentedStyle(E){this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E.nameKw),t.NEWLINE),this.layout.indentation.increaseTopLevel(),this.layout.add(t.INDENT),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(E){this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E.nameKw),t.SPACE),this.layout=this.formatSubExpression(E.children)}formatClauseInTabularStyle(E){this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E.nameKw),t.SPACE),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(E.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(E){this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E.nameKw),t.NEWLINE),this.layout.add(t.INDENT),this.layout=this.formatSubExpression(E.children)}formatLimitClause(E){this.withComments(E.limitKw,()=>{this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E.limitKw))}),this.layout.indentation.increaseTopLevel(),ee(this.cfg)?this.layout.add(t.SPACE):this.layout.add(t.NEWLINE,t.INDENT),E.offset&&(this.layout=this.formatSubExpression(E.offset),this.layout.add(t.NO_SPACE,",",t.SPACE)),this.layout=this.formatSubExpression(E.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(E){this.layout.add("*",t.SPACE)}formatLiteral(E){this.layout.add(E.text,t.SPACE)}formatIdentifier(E){this.layout.add(this.showIdentifier(E),t.SPACE)}formatParameter(E){this.layout.add(this.params.get(E),t.SPACE)}formatOperator({text:E}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(E)?this.layout.add(t.NO_SPACE,E):":"===E?this.layout.add(t.NO_SPACE,E,t.SPACE):this.layout.add(E,t.SPACE)}formatComma(E){this.inline?this.layout.add(t.NO_SPACE,",",t.SPACE):this.layout.add(t.NO_SPACE,",",t.NEWLINE,t.INDENT)}withComments(E,T){this.formatComments(E.leadingComments),T(),this.formatComments(E.trailingComments)}formatComments(E){E&&E.forEach(E=>{E.type===A.line_comment?this.formatLineComment(E):this.formatBlockComment(E)})}formatLineComment(E){Tv(E.precedingWhitespace||"")?this.layout.add(t.NEWLINE,t.INDENT,E.text,t.MANDATORY_NEWLINE,t.INDENT):this.layout.getLayoutItems().length>0?this.layout.add(t.NO_NEWLINE,t.SPACE,E.text,t.MANDATORY_NEWLINE,t.INDENT):this.layout.add(E.text,t.MANDATORY_NEWLINE,t.INDENT)}formatBlockComment(E){E.type===A.block_comment&&this.isMultilineBlockComment(E)?(this.splitBlockComment(E.text).forEach(E=>{this.layout.add(t.NEWLINE,t.INDENT,E)}),this.layout.add(t.NEWLINE,t.INDENT)):this.layout.add(E.text,t.SPACE)}isMultilineBlockComment(E){return Tv(E.text)||Tv(E.precedingWhitespace||"")}isDocComment(E){let T=E.split(/\n/);return/^\/\*\*?$/.test(T[0])&&T.slice(1,T.length-1).every(E=>/^\s*\*/.test(E))&&/^\s*\*\/$/.test(TW(T))}splitBlockComment(E){return this.isDocComment(E)?E.split(/\n/).map(E=>/^\s*\*/.test(E)?" "+E.replace(/^\s*/,""):E):E.split(/\n/).map(E=>E.replace(/^\s*/,""))}formatSubExpression(E){return new eY({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(E)}formatInlineExpression(E){let T=this.params.getPositionalParameterIndex();try{return new eY({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new eh(this.cfg.expressionWidth),inline:!0}).format(E)}catch(E){if(E instanceof eF)return void this.params.setPositionalParameterIndex(T);throw E}}formatKeywordNode(E){switch(E.tokenType){case R.RESERVED_JOIN:return this.formatJoin(E);case R.AND:case R.OR:case R.XOR:return this.formatLogicalOperator(E);default:return this.formatKeyword(E)}}formatJoin(E){ee(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E),t.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E),t.SPACE)}formatKeyword(E){this.layout.add(this.showKw(E),t.SPACE)}formatLogicalOperator(E){"before"===this.cfg.logicalOperatorNewline?ee(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E),t.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(t.NEWLINE,t.INDENT,this.showKw(E),t.SPACE):this.layout.add(this.showKw(E),t.NEWLINE,t.INDENT)}formatDataType(E){this.layout.add(this.showDataType(E),t.SPACE)}showKw(E){return ef(E.tokenType)?ed(this.showNonTabularKw(E),this.cfg.indentStyle):this.showNonTabularKw(E)}showNonTabularKw(E){switch(this.cfg.keywordCase){case"preserve":return TX(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}showFunctionKw(E){return ef(E.tokenType)?ed(this.showNonTabularFunctionKw(E),this.cfg.indentStyle):this.showNonTabularFunctionKw(E)}showNonTabularFunctionKw(E){switch(this.cfg.functionCase){case"preserve":return TX(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}showIdentifier(E){if(E.quoted)return E.text;switch(this.cfg.identifierCase){case"preserve":return E.text;case"upper":return E.text.toUpperCase();case"lower":return E.text.toLowerCase()}}showDataType(E){switch(this.cfg.dataTypeCase){case"preserve":return TX(E.raw);case"upper":return E.text;case"lower":return E.text.toLowerCase()}}}class em{constructor(E,T){this.dialect=E,this.cfg=T,this.params=new eR(this.cfg.params)}format(E){let T=this.parse(E);return this.formatAst(T).trimEnd()}parse(E){return(function(E){let T={},e=new eL(e=>[...E.tokenize(e,T).map(et).map(eS).map(eO).map(eI).map(eN),i(e.length)]),R=new eU(eM.fromCompiled(ec),{lexer:e});return{parse:(E,e)=>{T=e;let{results:A}=R.feed(E);if(1===A.length)return A[0];if(0===A.length)throw Error("Parse error: Invalid SQL");throw Error(`Parse error: Ambiguous grammar
${JSON.stringify(A,void 0,2)}`)}}})(this.dialect.tokenizer).parse(E,this.cfg.paramTypes||{})}formatAst(E){return E.map(E=>this.formatStatement(E)).join("\n".repeat(this.cfg.linesBetweenQueries+1))}formatStatement(E){var T;let e=new eY({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new eu(new eH("tabularLeft"===(T=this.cfg).indentStyle||"tabularRight"===T.indentStyle?" ".repeat(10):T.useTabs?"	":" ".repeat(T.tabWidth)))}).format(E.children);return E.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?e.add(t.NEWLINE,";"):e.add(t.NO_NEWLINE,";")),e.toString()}}class ey extends Error{}var eV=function(E,T){var e={};for(var R in E)Object.prototype.hasOwnProperty.call(E,R)&&0>T.indexOf(R)&&(e[R]=E[R]);if(null!=E&&"function"==typeof Object.getOwnPropertySymbols)for(var A=0,R=Object.getOwnPropertySymbols(E);A<R.length;A++)0>T.indexOf(R[A])&&Object.prototype.propertyIsEnumerable.call(E,R[A])&&(e[R[A]]=E[R[A]]);return e};let eb={bigquery:"bigquery",db2:"db2",db2i:"db2i",duckdb:"duckdb",hive:"hive",mariadb:"mariadb",mysql:"mysql",n1ql:"n1ql",plsql:"plsql",postgresql:"postgresql",redshift:"redshift",spark:"spark",sqlite:"sqlite",sql:"sql",tidb:"tidb",trino:"trino",transactsql:"transactsql",tsql:"transactsql",singlestoredb:"singlestoredb",snowflake:"snowflake"},eW=Object.keys(eb),eg={tabWidth:2,useTabs:!1,keywordCase:"preserve",identifierCase:"preserve",dataTypeCase:"preserve",functionCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},eX=(E,T={})=>{if("string"==typeof T.language&&!eW.includes(T.language))throw new ey(`Unsupported SQL dialect: ${T.language}`);let e=eb[T.language||"sql"];return ev(E,Object.assign(Object.assign({},T),{dialect:S[e]}))},ev=(E,T)=>{var{dialect:e}=T,R=eV(T,["dialect"]);if("string"!=typeof E)throw Error("Invalid query argument. Expected string, instead got "+typeof E);let A=function(E){var T,e;for(let T of["multilineLists","newlineBeforeOpenParen","newlineBeforeCloseParen","aliasAs","commaPosition","tabulateAlias"])if(T in E)throw new ey(`${T} config is no more supported.`);if(E.expressionWidth<=0)throw new ey(`expressionWidth config must be positive number. Received ${E.expressionWidth} instead.`);if(E.params&&!((T=E.params)instanceof Array?T:Object.values(T)).every(E=>"string"==typeof E)&&console.warn('WARNING: All "params" option values should be strings.'),E.paramTypes&&!(!((e=E.paramTypes).custom&&Array.isArray(e.custom))||e.custom.every(E=>""!==E.regex)))throw new ey("Empty regex given in custom paramTypes. That would result in matching infinite amount of parameters.");return E}(Object.assign(Object.assign({},eg),R));return new em((E=>{let T=eE.get(E);return T||(T=(E=>({tokenizer:new T9(E.tokenizerOptions,E.name),formatOptions:eT(E.formatOptions)}))(E),eE.set(E,T)),T})(e),A).format(E)}},98233:(E,T,e)=>{var R=e(24376),A=e(20570),t=e(64439),S=R?R.toStringTag:void 0;E.exports=function(E){return null==E?void 0===E?"[object Undefined]":"[object Null]":S&&S in Object(E)?A(E):t(E)}}}]);